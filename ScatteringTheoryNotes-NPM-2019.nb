(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1761802,      38147]
NotebookOptionsPosition[   1733472,      37396]
NotebookOutlinePosition[   1734535,      37434]
CellTagsIndexPosition[   1734458,      37429]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Time-independent scattering theory", "Title",
 CellChangeTimes->{{3.7584570984075127`*^9, 3.7584571078136597`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Notes", "Subtitle",
 CellChangeTimes->{{3.758457108422776*^9, 3.758457124876705*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[CellGroupData[{

Cell["Nirav Mehta (2019)", "Author",
 CellChangeTimes->{{3.758457125997796*^9, 3.7584571327507877`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Trinity University, San Antonio", "Institution",
 CellChangeTimes->{{3.758457158845523*^9, 3.7584571699732237`*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7584571820907707`*^9, 3.758457186427157*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
These notes will hopefully provide an introduction to the time independent \
theory of scattering that is accessible to undergraduate and beginning \
graduate students who wish to begin research in this area.  Many textbooks on \
the topic already exist, but these notes are my attempt to provide a succinct \
treatment designed to get students started quickly.  \
\>", "Text",
 CellChangeTimes->{{3.758457187616703*^9, 3.758457605602057*^9}, {
   3.758630294752419*^9, 3.758630303813183*^9}, 3.7597999181584787`*^9},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multichannel 2-body Scattering", "Section",
 CellChangeTimes->{{3.7584576393842487`*^9, 3.758457686791213*^9}, {
  3.7597991232056704`*^9, 3.7597991525717278`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[CellGroupData[{

Cell["Basic expression for the differential cross section", "Subsection",
 CellChangeTimes->{{3.759836267700226*^9, 3.7598362870486403`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "I\[CloseCurlyQuote]ll focus on scattering in two-body channels only.  Other \
processes like three-body recombination, break-up, or any process involving \
channels with more than two free particles will be treated elsewhere.  I\
\[CloseCurlyQuote]ll assume that each collision partner has some set of \
internal states.  The collective variables for the internal degrees of \
freedom for ",
 StyleBox["both",
  FontSlant->"Italic"],
 " collision partners will be ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[Xi]",
    FontWeight->"Bold"], TraditionalForm]]],
 ".  The full (relative) wavefunction can then be expanded:"
}], "Text",
 CellChangeTimes->{{3.7597991557234783`*^9, 3.759799314423424*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[CapitalPsi]", "(", 
    RowBox[{
     StyleBox["r",
      FontWeight->"Bold"], ",", 
     StyleBox["\[Xi]",
      FontWeight->"Bold"]}], ")"}], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", "i"], 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Psi]", "i"], "(", 
      StyleBox["r",
       FontWeight->"Bold"], ")"}], 
     RowBox[{
      SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], ")"}]}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.7597993197203093`*^9, 3.759799364372932*^9}},
 TextAlignment->Left,
 TextJustification->0.,
 CellTags->"psi-expand"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
    StyleBox["\[Xi]",
     FontWeight->"Bold"], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.7597993197203093`*^9, 3.759799364372932*^9}}],
 " denotes the orthonormal set of wavefunctions in all internal coordinates \
",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]]],
 ". We\[CloseCurlyQuote]ll assume that they are known to satisfy:"
}], "Text",
 CellChangeTimes->{{3.758592493513035*^9, 3.758592565585436*^9}, {
   3.7585926066961527`*^9, 3.758592612937339*^9}, 3.758592769382957*^9, {
   3.759799401465323*^9, 3.759799431725254*^9}, {3.7597999462878942`*^9, 
   3.759799990226777*^9}, 3.759800022312707*^9, {3.759800935533149*^9, 
   3.759800980058667*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["H", "\[Xi]"], 
    RowBox[{
     SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
     StyleBox["\[Xi]",
      FontWeight->"Bold"], ")"}]}], "=", 
   RowBox[{
    SubscriptBox["E", "i"], 
    RowBox[{
     SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
     StyleBox["\[Xi]",
      FontWeight->"Bold"], ")"}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.758592493513035*^9, 3.758592565585436*^9}, {
   3.7585926066961527`*^9, 3.758592612937339*^9}, 3.758592769382957*^9, {
   3.759799401465323*^9, 3.759799431725254*^9}, {3.7597999462878942`*^9, 
   3.759799990226777*^9}, 3.759800022312707*^9, {3.759800935533149*^9, 
   3.759800984681012*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Here we assume that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "\[Xi]"], TraditionalForm]]],
 " is independent of ",
 Cell[BoxData[
  FormBox[
   StyleBox["r",
    FontWeight->"Bold"], TraditionalForm]]],
 ".  It is the Hamiltonian of the well-separated collision partners. The full \
wavefunction satisfies"
}], "Text",
 CellChangeTimes->{{3.7598010086757193`*^9, 3.759801015112883*^9}, {
  3.759836303197488*^9, 3.759836414345757*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox["\[HBar]", "2"]}], 
        RowBox[{"2", "\[Mu]"}]], 
       RowBox[{
        SuperscriptBox["\[Del]", "2"], 
        RowBox[{"+", 
         SubscriptBox["H", 
          StyleBox["\[Xi]",
           FontWeight->"Bold"]]}]}]}], "+", 
      RowBox[{"W", "(", 
       RowBox[{
        StyleBox["r",
         FontWeight->"Bold"], ",", 
        StyleBox["\[Xi]",
         FontWeight->"Bold"]}], ")"}]}], ")"}], 
    RowBox[{"\[CapitalPsi]", "(", 
     RowBox[{
      StyleBox["r",
       FontWeight->"Bold"], ",", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{"E", " ", 
    RowBox[{"\[CapitalPsi]", "(", 
     RowBox[{
      StyleBox["r",
       FontWeight->"Bold"], ",", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"]}], ")"}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.759801023417735*^9, 3.759801080521694*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "We assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"W", "(", 
     RowBox[{
      StyleBox["r",
       FontWeight->"Bold"], ",", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"]}], ")"}], "\[Rule]", "0"}], TraditionalForm]]],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "\[Rule]", "\[Infinity]"}], TraditionalForm]]],
 ".  Asymptotically, the wavefunction should take the form"
}], "Text",
 CellChangeTimes->{{3.758592493513035*^9, 3.758592565585436*^9}, {
   3.7585926066961527`*^9, 3.758592612937339*^9}, 3.758592769382957*^9, {
   3.759799401465323*^9, 3.759799431725254*^9}, {3.7597999462878942`*^9, 
   3.759799990226777*^9}, 3.759800022312707*^9, {3.759800935533149*^9, 
   3.759800950211926*^9}, {3.759836416607944*^9, 3.75983644866398*^9}, {
   3.7598365408778753`*^9, 3.759836558698472*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[CapitalPsi]", "(", 
    RowBox[{
     StyleBox["r",
      FontWeight->"Bold"], ",", 
     StyleBox["\[Xi]",
      FontWeight->"Bold"]}], ")"}], 
   OverscriptBox["\[RightArrow]", 
    RowBox[{"r", "\[Rule]", " ", "\[Infinity]"}]], 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["k", "i"], " ", "z"}]]}], "+", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", "\[Element]", "open"}]], " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["f", 
        RowBox[{"i", "\[Rule]", "j"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], " ", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["k", "j"], " ", "r"}]], "r"], 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "j"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.758592569208015*^9, 3.758592601920635*^9}, {
  3.759799437696619*^9, 3.759799494801816*^9}, {3.759799854149726*^9, 
  3.759799868666789*^9}, {3.759800298454266*^9, 3.7598003073881407`*^9}, {
  3.7598008538734827`*^9, 3.7598008597095747`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The first term represents the incident wave in internal state ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " (remember ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " is a collective index for the internal state of both particles), which we \
assume to be travelling in the ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]]],
 " direction.  The second term represents the scattered wave which moves \
radially away from the collision in channel ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]]],
 " with an overall amplitude that depends on ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]]],
 " and \[Phi].  Here, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["k", "i", "2"], "=", 
    RowBox[{"2", "\[Mu]", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"E", "-", 
        SubscriptBox["E", "i"]}], ")"}], "/", 
      SuperscriptBox["\[HBar]", "2"]}]}]}], TraditionalForm]]],
 ".  We can interpret the coordinates ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[Xi]",
    FontWeight->"Bold"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["r",
    FontWeight->"Bold"], TraditionalForm]]],
 " in terms of Jacobi coordinates if we picture \[OpenCurlyDoubleQuote]H-type\
\[CloseCurlyDoubleQuote] Jacobi coordinates for the global few-body system.  \
I\[CloseCurlyQuote]m sweeping details like the exchange interaction \
(important at short range) under the rug here by absorbing those effects into \
the interaction potential ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "(", 
    RowBox[{
     StyleBox["r",
      FontWeight->"Bold"], ",", 
     StyleBox["\[Xi]",
      FontWeight->"Bold"]}], ")"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7585926345601*^9, 3.7585927187116413`*^9}, {
   3.758592757750596*^9, 3.7585927613576813`*^9}, {3.759799524688218*^9, 
   3.759799536607853*^9}, {3.7597995802483788`*^9, 3.759799654482017*^9}, {
   3.7597996849158783`*^9, 3.759799717723789*^9}, {3.759800874497888*^9, 
   3.759800921493518*^9}, 3.759834277872944*^9, {3.759835000505074*^9, 
   3.759835164348093*^9}, {3.759835207578054*^9, 3.759835359041121*^9}, {
   3.7598354516548986`*^9, 3.7598354531376038`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Consider the overlap of the asymptotic wavefunction with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalUpsilon]", "j"], "(", 
    StyleBox["\[Xi]",
     FontWeight->"Bold"], ")"}], TraditionalForm]]],
 ","
}], "Text",
 CellChangeTimes->{{3.759836890493215*^9, 3.759836938654619*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"\[DifferentialD]", "\[Xi]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "j"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}], 
      RowBox[{"\[CapitalPsi]", "(", 
       RowBox[{
        StyleBox["r",
         FontWeight->"Bold"], ",", "\[Xi]"}], ")"}]}]}], 
    OverscriptBox["\[RightArrow]", 
     RowBox[{"r", "\[Rule]", "\[Infinity]"}]], 
    RowBox[{
     OverscriptBox[
      RowBox[{
       SubscriptBox["\[Delta]", "ji"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["k", "i"], " ", "z"}]]}], 
      OverscriptBox["\[OverBrace]", 
       RowBox[{
        RowBox[{"incoming", " ", "in"}], " ", "\[LineSeparator]", 
        RowBox[{"channel", " ", "i", " ", "only"}]}]]], "+", 
     OverscriptBox[
      RowBox[{
       SubscriptBox["f", 
        RowBox[{"i", "\[Rule]", "j"}]], 
       RowBox[{"(", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], " ", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["k", "j"], " ", "r"}]], "r"]}], 
      OverscriptBox["\[OverBrace]", 
       RowBox[{"outgoing", " ", "in", " ", "channel", " ", "j"}]]]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7598369408101377`*^9, 3.759837086037425*^9}, {
  3.759837260532057*^9, 3.759837291746689*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Recall that the probability current density is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["j",
     FontWeight->"Bold"], "=", 
    RowBox[{
     FractionBox["\[HBar]", 
      RowBox[{"2", "\[Mu]", " ", "\[ImaginaryI]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "\[Conjugate]"}], 
        RowBox[{
         StyleBox["\[Del]",
          FontWeight->"Bold"], "\[Psi]"}]}], "-", 
       RowBox[{"\[Psi]", 
        RowBox[{
         StyleBox["\[Del]",
          FontWeight->"Bold"], 
         RowBox[{"\[Psi]", "\[Conjugate]"}]}]}]}], ")"}]}]}], 
   TraditionalForm]]],
 ".  The incoming flux is . "
}], "Text",
 CellChangeTimes->{{3.759837099091111*^9, 3.759837247949459*^9}, {
  3.759837946612438*^9, 3.759838360559376*^9}, {3.75983853814347*^9, 
  3.759838591459379*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    StyleBox["j",
     FontWeight->"Bold"], "in"], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", "ji"], 
     FractionBox[
      RowBox[{"\[HBar]", " ", 
       OverscriptBox[
        StyleBox["z",
         FontWeight->"Bold"], "^"]}], 
      RowBox[{"2", "\[Mu]", " ", "\[ImaginaryI]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           SubscriptBox["k", "i"], " ", "z"}]], "(", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["k", "i"]}], ")"}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["k", "i"], " ", "z"}]]}], "-", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["k", "i"], " ", "z"}]], "(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          SubscriptBox["k", "i"]}], ")"}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          SubscriptBox["k", "i"], " ", "z"}]]}]}], ")"}]}], "=", 
    RowBox[{
     SubscriptBox["\[Delta]", "ji"], 
     FractionBox[
      RowBox[{"\[HBar]", " ", 
       SubscriptBox["k", "i"]}], "\[Mu]"], 
     OverscriptBox["z", "^"]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759838594398157*^9, 3.759838625037839*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[" Meanwhile, the total outgoing flux is: ", "Text",
 CellChangeTimes->{{3.759837099091111*^9, 3.759837247949459*^9}, {
  3.759837946612438*^9, 3.759838360559376*^9}, {3.75983853814347*^9, 
  3.759838587758871*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    StyleBox["j",
     FontWeight->"Bold"], "out"], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{"j", "\[Element]", "open"}]], 
    RowBox[{
     FractionBox[
      RowBox[{"\[HBar]", " ", 
       OverscriptBox["r", "^"]}], 
      RowBox[{"2", "\[Mu]", " ", "\[ImaginaryI]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[LeftBracketingBar]", "f", "\[RightBracketingBar]"}], "2"], 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           SubscriptBox["k", "j"], " ", "r"}]], "r"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["k", "j"], 
           FractionBox[
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["k", "j"], " ", "r"}]], "r"]}], "-", 
          FractionBox[
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["k", "j"], " ", "r"}]], 
           SuperscriptBox["r", "2"]]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[LeftBracketingBar]", "f", "\[RightBracketingBar]"}], "2"], 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["k", "j"], " ", "r"}]], "r"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           SubscriptBox["k", "j"], 
           FractionBox[
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              SubscriptBox["k", "j"], " ", "r"}]], "r"]}], "-", 
          FractionBox[
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             SubscriptBox["k", "j"], " ", "r"}]], 
           SuperscriptBox["r", "2"]]}], ")"}]}]}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7598385845086203`*^9, 3.759838617806291*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    StyleBox["j",
     FontWeight->"Bold"], "out"], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{"j", "\[Element]", "open"}]], 
    RowBox[{
     FractionBox[
      RowBox[{"\[HBar]", " ", 
       SubscriptBox["k", "j"]}], 
      RowBox[{"\[Mu]", " ", 
       SuperscriptBox["r", "2"]}]], 
     SuperscriptBox[
      RowBox[{"\[LeftBracketingBar]", 
       SubscriptBox["f", 
        RowBox[{"i", "\[Rule]", "j"}]], "\[RightBracketingBar]"}], "2"], 
     OverscriptBox["r", "^"]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7598385845086203`*^9, 3.759838613374201*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The flux going into a surface ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[DifferentialD]", "\[Sigma]"}], " ", 
    OverscriptBox["z", "^"]}], TraditionalForm]]],
 " must exit a surface ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["r", "2"], 
    RowBox[{"\[DifferentialD]", "\[CapitalOmega]"}], " ", 
    OverscriptBox["r", "^"]}], TraditionalForm]]],
 " so we have:"
}], "Text",
 CellChangeTimes->{{3.759838366405551*^9, 3.759838449002945*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox[
      StyleBox["j",
       FontWeight->"Bold"], "in"], "\[CenterDot]", 
     RowBox[{"\[DifferentialD]", "\[Sigma]"}]}], " ", 
    OverscriptBox["z", "^"]}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      StyleBox["j",
       FontWeight->"Bold"], "out"], "\[CenterDot]", 
     SuperscriptBox["r", "2"]}], 
    RowBox[{"\[DifferentialD]", "\[CapitalOmega]"}], " ", 
    OverscriptBox["r", "^"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759838458053582*^9, 3.759838480880498*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Delta]", "ji"], 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["k", "i"]}], "\[Mu]"], 
       OverscriptBox["z", "^"]}], ")"}], "\[CenterDot]", 
     RowBox[{"\[DifferentialD]", "\[Sigma]"}]}], " ", 
    OverscriptBox["z", "^"]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       UnderscriptBox["\[Sum]", 
        RowBox[{"j", "\[Element]", "open"}]], 
       RowBox[{
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["k", "j"]}], 
         RowBox[{"\[Mu]", " ", 
          SuperscriptBox["r", "2"]}]], 
        SuperscriptBox[
         RowBox[{"\[LeftBracketingBar]", 
          SubscriptBox["f", 
           RowBox[{"i", "\[Rule]", "j"}]], "\[RightBracketingBar]"}], "2"], 
        OverscriptBox["r", "^"]}]}], ")"}], "\[CenterDot]", 
     SuperscriptBox["r", "2"]}], 
    RowBox[{"\[DifferentialD]", "\[CapitalOmega]"}], " ", 
    OverscriptBox["r", "^"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{
  3.759838489451804*^9, {3.759838687087941*^9, 3.759838696349663*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[DifferentialD]", "\[Sigma]"}], 
    RowBox[{"\[DifferentialD]", "\[CapitalOmega]"}]], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{"j", "\[Element]", "open"}]], 
    RowBox[{
     FractionBox[
      RowBox[{" ", 
       SubscriptBox["k", "j"]}], 
      RowBox[{" ", 
       SubscriptBox["k", "i"]}]], 
     SuperscriptBox[
      RowBox[{"\[LeftBracketingBar]", 
       SubscriptBox["f", 
        RowBox[{"i", "\[Rule]", "j"}]], "\[RightBracketingBar]"}], "2"]}]}]}],
   TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.75983872800107*^9, 3.759838794435519*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["We define:", "Text",
 CellChangeTimes->{{3.7598388136314793`*^9, 3.759838815219232*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"\[DifferentialD]", "\[Sigma]"}], 
      RowBox[{"\[DifferentialD]", "\[CapitalOmega]"}]], ")"}], 
    RowBox[{"i", "\[Rule]", "j"}]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{" ", 
      SubscriptBox["k", "j"]}], 
     RowBox[{" ", 
      SubscriptBox["k", "i"]}]], 
    SuperscriptBox[
     RowBox[{"\[LeftBracketingBar]", 
      SubscriptBox["f", 
       RowBox[{"i", "\[Rule]", "j"}]], "\[RightBracketingBar]"}], "2"]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759838816330488*^9, 3.7598388354778757`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "We shall expend considerable effort determining ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", 
    RowBox[{"i", "\[Rule]", "j"}]], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.759838989958439*^9, 3.759839009554284*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coupled-channel equations and the partial wave expansion", "Subsection",
 CellChangeTimes->{{3.7598388674614*^9, 3.759838875449238*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Now inserting our expansion into the Schrodinger equation,", "Text",
 CellChangeTimes->{{3.7585926345601*^9, 3.7585927187116413`*^9}, {
   3.758592757750596*^9, 3.7585927613576813`*^9}, {3.759799524688218*^9, 
   3.759799536607853*^9}, {3.7597995802483788`*^9, 3.759799654482017*^9}, {
   3.7597996849158783`*^9, 3.759799717723789*^9}, {3.759800874497888*^9, 
   3.759800921493518*^9}, 3.759834277872944*^9, {3.759835000505074*^9, 
   3.759835164348093*^9}, {3.759835207578054*^9, 3.759835359041121*^9}, {
   3.7598354516548986`*^9, 3.759835490207939*^9}, 3.7598355249323463`*^9, {
   3.759835593635586*^9, 3.759835708556603*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox["\[HBar]", "2"]}], 
        RowBox[{"2", "\[Mu]"}]], 
       RowBox[{
        SuperscriptBox["\[Del]", "2"], 
        RowBox[{"+", 
         SubscriptBox["H", 
          StyleBox["\[Xi]",
           FontWeight->"Bold"]]}]}]}], "+", 
      RowBox[{"W", "(", 
       RowBox[{
        StyleBox["r",
         FontWeight->"Bold"], ",", 
        StyleBox["\[Xi]",
         FontWeight->"Bold"]}], ")"}]}], ")"}], 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Psi]", "i"], "(", 
       StyleBox["r",
        FontWeight->"Bold"], ")"}], 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}]}]}]}], "=", 
   RowBox[{"E", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Psi]", "i"], "(", 
       StyleBox["r",
        FontWeight->"Bold"], ")"}], 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7598354878942223`*^9, 3.759835488877425*^9}, {
  3.7598357188310757`*^9, 3.7598357277298098`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Using the eigenvalue relation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["H", "\[Xi]"], 
     RowBox[{
      SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], ")"}]}], "=", 
    RowBox[{
     SubscriptBox["E", "i"], 
     RowBox[{
      SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], ")"}]}]}], TraditionalForm]]],
 " we have"
}], "Text",
 CellChangeTimes->{{3.759835747761341*^9, 3.759835761917905*^9}, {
  3.759836034052186*^9, 3.759836034917049*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    UnderscriptBox["\[Sum]", "i"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"-", 
          SuperscriptBox["\[HBar]", "2"]}], 
         RowBox[{"2", "\[Mu]"}]], 
        RowBox[{
         SuperscriptBox["\[Del]", "2"], 
         RowBox[{"+", 
          SubscriptBox["E", "i"]}]}]}], "+", 
       RowBox[{"W", "(", 
        RowBox[{
         StyleBox["r",
          FontWeight->"Bold"], ",", 
         StyleBox["\[Xi]",
          FontWeight->"Bold"]}], ")"}]}], ")"}], 
     RowBox[{
      SubscriptBox["\[Psi]", "i"], "(", 
      StyleBox["r",
       FontWeight->"Bold"], ")"}], 
     RowBox[{
      SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], ")"}]}]}], "=", 
   RowBox[{"E", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Psi]", "i"], "(", 
       StyleBox["r",
        FontWeight->"Bold"], ")"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
        StyleBox["\[Xi]",
         FontWeight->"Bold"], ")"}], "."}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759835734614566*^9, 3.759835766645192*^9}, 
   3.7598360388043003`*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Now taking the overlap with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalUpsilon]", "j"], "(", 
    StyleBox["\[Xi]",
     FontWeight->"Bold"], ")"}], TraditionalForm]]],
 " gives us a coupled-channels equation:"
}], "Text",
 CellChangeTimes->{{3.759835775997491*^9, 3.7598358060095367`*^9}, {
  3.7598360410920687`*^9, 3.759836050500698*^9}, {3.759836787117915*^9, 
  3.7598368061387177`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"-", 
          SuperscriptBox["\[HBar]", "2"]}], 
         RowBox[{"2", "\[Mu]"}]], 
        SuperscriptBox["\[Del]", "2"]}], ")"}], 
      RowBox[{
       SubscriptBox["\[Psi]", "j"], "(", 
       StyleBox["r",
        FontWeight->"Bold"], ")"}]}], "+", 
     RowBox[{
      UnderscriptBox["\[Sum]", "i"], 
      RowBox[{
       RowBox[{
        SubscriptBox["W", "ji"], "(", 
        StyleBox["r",
         FontWeight->"Bold"], ")"}], 
       RowBox[{
        SubscriptBox["\[Psi]", "i"], "(", 
        StyleBox["r",
         FontWeight->"Bold"], ")"}]}]}]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"E", "-", 
       SubscriptBox["E", "j"]}], ")"}], " ", 
     SubscriptBox["\[Delta]", "ji"], 
     RowBox[{
      SubscriptBox["\[Psi]", "j"], "(", 
      StyleBox["r",
       FontWeight->"Bold"], ")"}]}]}], ","}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7598358137195044`*^9, 3.759835908325309*^9}, {
  3.759836052475511*^9, 3.759836101288604*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "where we have used ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"\[DifferentialD]", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"]}], 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "j"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}], 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}]}]}], "=", 
    SubscriptBox["\[Delta]", "ji"]}], TraditionalForm]]],
 " and defined"
}], "Text",
 CellChangeTimes->{{3.759835928111266*^9, 3.7598359305576887`*^9}, {
  3.759835971178956*^9, 3.7598359925522747`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["W", "ji"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"]}], 
     RowBox[{
      SubscriptBox["\[CapitalUpsilon]", "j"], "(", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], ")"}], 
     RowBox[{"W", "(", 
      RowBox[{
       StyleBox["r",
        FontWeight->"Bold"], ",", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"]}], ")"}], 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}], "."}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759835936985937*^9, 3.759835964831909*^9}, 
   3.759836008685286*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell["We now expand each channel wavefunction into partial waves:", "Text",
 CellChangeTimes->{{3.759839291496098*^9, 3.7598393087707233`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "i"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{
    OverscriptBox[
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"m", "=", 
        RowBox[{"-", "l"}]}]], "l"], 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["u", 
         RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}], "r"], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", " ", "m"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759839314633963*^9, 3.7598393931684303`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["\[HBar]", "2"]}], 
      RowBox[{"2", "\[Mu]"}]], 
     RowBox[{
      SuperscriptBox["\[Del]", "2"], "=", 
      FractionBox[
       RowBox[{"-", 
        SuperscriptBox["\[HBar]", "2"]}], 
       RowBox[{"2", "\[Mu]"}]]}], " ", 
     FractionBox["1", 
      SuperscriptBox["r", "2"]], 
     RowBox[{
      FractionBox["\[PartialD]", 
       RowBox[{"\[PartialD]", "r"}]], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["r", "2"], 
        FractionBox["\[PartialD]", 
         RowBox[{"\[PartialD]", "r"}]]}], ")"}]}]}], "+", 
    FractionBox[
     SuperscriptBox["L", "2"], 
     RowBox[{"2", "\[Mu]", " ", 
      SuperscriptBox["r", "2"]}]]}], TraditionalForm]]],
 " where ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["L", "2"], TraditionalForm]]],
 " is the (square) orbital angular momentum operator ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["L", "2"], 
     RowBox[{
      SubscriptBox["Y", 
       RowBox[{"l", " ", "m"}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}], "=", 
    RowBox[{
     SuperscriptBox["\[HBar]", "2"], 
     RowBox[{"l", "(", 
      RowBox[{"l", "+", "1"}], ")"}], 
     RowBox[{
      SubscriptBox["Y", 
       RowBox[{"l", " ", "m"}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}], TraditionalForm]]],
 ".  Also, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["r", "2"]], 
     RowBox[{
      FractionBox["\[PartialD]", 
       RowBox[{"\[PartialD]", "r"}]], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["r", "2"], 
        RowBox[{
         FractionBox["\[PartialD]", 
          RowBox[{"\[PartialD]", "r"}]], 
         FractionBox[
          RowBox[{
           SubscriptBox["u", 
            RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}], "r"]}]}], 
       ")"}]}]}], "=", 
    RowBox[{
     FractionBox["1", "r"], 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["r", "2"]}]], 
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}]}]}], 
   TraditionalForm]]],
 ".  Therefore, our coupled channels equation becomes:"
}], "Text",
 CellChangeTimes->{{3.7598394116714973`*^9, 3.759839644123621*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", ",", "m"}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"-", 
           SuperscriptBox["\[HBar]", "2"]}], 
          RowBox[{"2", "\[Mu]"}]], " ", 
         FractionBox["1", 
          SuperscriptBox["r", "2"]], 
         RowBox[{
          FractionBox["\[PartialD]", 
           RowBox[{"\[PartialD]", "r"}]], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], 
            FractionBox["\[PartialD]", 
             RowBox[{"\[PartialD]", "r"}]]}], ")"}]}]}], "+", 
        FractionBox[
         SuperscriptBox["L", "2"], 
         RowBox[{"2", "\[Mu]", " ", 
          SuperscriptBox["r", "2"]}]]}], ")"}], 
      FractionBox[
       RowBox[{
        SubscriptBox["u", 
         RowBox[{"j", " ", "l", " ", "m"}]], "(", "r", ")"}], "r"], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", " ", "m"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}], "+", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"i", ",", "l", ",", "m"}]], 
     RowBox[{
      RowBox[{
       SubscriptBox["W", "ji"], "(", 
       StyleBox["r",
        FontWeight->"Bold"], ")"}], 
      FractionBox[
       RowBox[{
        SubscriptBox["u", 
         RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}], "r"], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", " ", "m"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"E", "-", 
      SubscriptBox["E", "j"]}], ")"}], " ", 
    SubscriptBox["\[Delta]", "ji"], 
    FractionBox[
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"j", " ", "l", " ", "m"}]], "(", "r", ")"}], "r"], 
    RowBox[{
     SubscriptBox["Y", 
      RowBox[{"l", " ", "m"}]], "(", 
     RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759839648159781*^9, 3.759839762101328*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", ",", "m"}]], 
     RowBox[{
      FractionBox["1", "r"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"-", 
           SuperscriptBox["\[HBar]", "2"]}], 
          RowBox[{"2", "\[Mu]"}]], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{
            SubscriptBox["u", 
             RowBox[{"j", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["r", "2"]}]]}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[HBar]", "2"], 
          RowBox[{"l", "(", 
           RowBox[{"l", "+", "1"}], ")"}], 
          RowBox[{
           SubscriptBox["u", 
            RowBox[{"j", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
         RowBox[{"2", "\[Mu]", " ", 
          SuperscriptBox["r", "2"]}]]}], ")"}], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", " ", "m"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}], "+", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"i", ",", "l", ",", "m"}]], 
     RowBox[{
      RowBox[{
       SubscriptBox["W", "ji"], "(", 
       StyleBox["r",
        FontWeight->"Bold"], ")"}], 
      FractionBox[
       RowBox[{
        SubscriptBox["u", 
         RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}], "r"], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", " ", "m"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"E", "-", 
      SubscriptBox["E", "j"]}], ")"}], " ", 
    SubscriptBox["\[Delta]", "ji"], 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", ",", "m"}]], 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["u", 
         RowBox[{"j", " ", "l", " ", "m"}]], "(", "r", ")"}], "r"], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", " ", "m"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759839774297063*^9, 3.759839825647257*^9}, 
   3.7598398653531857`*^9, {3.759839993054193*^9, 3.7598399933502893`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Now we take the overlap with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", 
     RowBox[{
      RowBox[{"l", "'"}], " ", 
      RowBox[{"m", "'"}]}]], "(", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], TraditionalForm]]],
 " to find (after trivial re-labeling):"
}], "Text",
 CellChangeTimes->{{3.75983989011191*^9, 3.759839935057851*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox["\[HBar]", "2"]}], 
        RowBox[{"2", "\[Mu]"}]], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{
          SubscriptBox["u", 
           RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["r", "2"]}]]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], 
        RowBox[{"l", "(", 
         RowBox[{"l", "+", "1"}], ")"}], 
        RowBox[{
         SubscriptBox["u", 
          RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
       RowBox[{"2", "\[Mu]", " ", 
        SuperscriptBox["r", "2"]}]]}], ")"}], "+", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", ",", 
       RowBox[{"l", "'"}], ",", 
       RowBox[{"m", "'"}]}]], 
     RowBox[{
      RowBox[{
       SubscriptBox["V", 
        RowBox[{
         RowBox[{"i", " ", "l", " ", "m"}], ",", " ", 
         RowBox[{"j", " ", 
          RowBox[{"l", "'"}], 
          RowBox[{"m", "'"}]}]}]], "(", "r", ")"}], 
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"j", " ", 
         RowBox[{"l", "'"}], " ", 
         RowBox[{"m", "'"}]}]], "(", "r", ")"}]}]}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"E", "-", 
      SubscriptBox["E", "i"]}], ")"}], " ", 
    RowBox[{
     SubscriptBox["u", 
      RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759839918273329*^9, 3.759839974281808*^9}, {
  3.759840053500948*^9, 3.759840192560482*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Where we have defined", "Text",
 CellChangeTimes->{{3.7598402003574667`*^9, 3.759840203611451*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["V", 
     RowBox[{
      RowBox[{"i", " ", "l", " ", "m"}], ",", " ", 
      RowBox[{"j", " ", 
       RowBox[{"l", "'"}], 
       RowBox[{"m", "'"}]}]}]], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"\[DifferentialD]", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"]}], 
      RowBox[{"\[DifferentialD]", "\[CapitalOmega]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", " ", "m"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
      RowBox[{"W", "(", 
       RowBox[{
        StyleBox["r",
         FontWeight->"Bold"], ",", 
        StyleBox["\[Xi]",
         FontWeight->"Bold"]}], ")"}], 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "j"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{
         RowBox[{"l", "'"}], " ", 
         RowBox[{"m", "'"}]}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}], "=", 
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"\[DifferentialD]", "\[CapitalOmega]"}], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", " ", "m"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
      RowBox[{
       SubscriptBox["W", "ij"], "(", 
       StyleBox["r",
        FontWeight->"Bold"], ")"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["Y", 
         RowBox[{
          RowBox[{"l", "'"}], " ", 
          RowBox[{"m", "'"}]}]], "(", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], "."}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7598402095258703`*^9, 3.759840325468626*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["W", "ij"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.7598402095258703`*^9, 3.759840325468626*^9}}],
 " is spherically symmetric, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["V", 
      RowBox[{
       RowBox[{"i", " ", "l", " ", "m"}], ",", " ", 
       RowBox[{"j", " ", 
        RowBox[{"l", "'"}], 
        RowBox[{"m", "'"}]}]}]], "(", "r", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"l", ",", 
       RowBox[{"l", "'"}]}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{"m", ",", 
       RowBox[{"m", "'"}]}]], 
     RowBox[{
      SubscriptBox["V", "ij"], "(", "r", ")"}]}]}], TraditionalForm]],
  CellChangeTimes->{{3.7598402095258703`*^9, 3.759840325468626*^9}}],
 " and each partial wave ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"l", ",", "m"}], ")"}], TraditionalForm]]],
 " can be treated separately. This is not the case, for example, when we have \
a collision between polar molecules or atoms with strong magnetic moments.  "
}], "Text",
 CellChangeTimes->{{3.7598403802249317`*^9, 3.759840510942155*^9}, {
  3.75984068620922*^9, 3.759840732747575*^9}, {3.759840806322135*^9, 
  3.759840810977726*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell[CellGroupData[{

Cell["Asymptotic solutions to the coupled equations", "Subsection",
 CellChangeTimes->{{3.759841074050971*^9, 3.759841105393938*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
We assume that sufficiently far away from the collision center, the potential \
matrix elements all vanish\
\>", "Text",
 CellChangeTimes->{{3.759841113393341*^9, 3.7598411383675823`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["V", 
     RowBox[{
      RowBox[{"i", " ", "l", " ", "m"}], ",", " ", 
      RowBox[{"j", " ", 
       RowBox[{"l", "'"}], 
       RowBox[{"m", "'"}]}]}]], "(", "r", ")"}], 
   OverscriptBox["\[RightArrow]", 
    RowBox[{"r", "\[Rule]", "\[Infinity]"}]], "0"}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759841172622686*^9, 3.759841183035314*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["and so we seek solutions to", "Text",
 CellChangeTimes->{{3.759841184613052*^9, 3.759841189188137*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[PartialD]", "2"], 
        RowBox[{
         SubscriptBox["u", 
          RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["r", "2"]}]]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"l", "(", 
        RowBox[{"l", "+", "1"}], ")"}], 
       RowBox[{
        SubscriptBox["u", 
         RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
      SuperscriptBox["r", "2"]]}], ")"}], "=", 
   RowBox[{
    SubsuperscriptBox["k", "i", "2"], " ", 
    RowBox[{
     SubscriptBox["u", 
      RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759841194589121*^9, 3.75984123561694*^9}, 
   3.759843926655233*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}], "2"]}]], 
        RowBox[{"+", 
         FractionBox[
          RowBox[{"l", "(", 
           RowBox[{"l", "+", "1"}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}], "2"]]}]}]}], "-", "1"}], 
     ")"}], 
    RowBox[{
     SubscriptBox["u", 
      RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], "=", "0"}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7598412421778517`*^9, 3.759841279225297*^9}, 
   3.759843921031188*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell["The solutions are the Riccati-Bessel functions", "Text",
 CellChangeTimes->{{3.759841307075713*^9, 3.759841320855324*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["u", 
     RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}], "\[Rule]", " ", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{
            SubscriptBox["s", "l"], "(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}], "=", 
           RowBox[{
            RowBox[{
             SubscriptBox["k", "i"], "r", 
             RowBox[{
              SubscriptBox["j", "l"], "(", 
              RowBox[{"k", " ", "r"}], ")"}]}], 
            OverscriptBox["\[RightArrow]", 
             RowBox[{
              RowBox[{
               SubscriptBox["k", "i"], "r"}], " ", "\[GreaterGreater]", 
              "1"}]], 
            RowBox[{"sin", "(", 
             RowBox[{
              RowBox[{
               SubscriptBox["k", "i"], "r"}], "-", 
              RowBox[{"l", " ", 
               FractionBox["\[Pi]", "2"]}]}], ")"}]}]}], " "},
         {
          RowBox[{
           RowBox[{
            SubscriptBox["c", "l"], "(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["k", "i"]}], "r", 
             RowBox[{
              SubscriptBox["n", "l"], "(", 
              RowBox[{"k", " ", "r"}], ")"}]}], 
            OverscriptBox["\[RightArrow]", 
             RowBox[{
              RowBox[{
               SubscriptBox["k", "i"], "r"}], " ", "\[GreaterGreater]", 
              "1"}]], 
            RowBox[{"cos", "(", 
             RowBox[{
              RowBox[{
               SubscriptBox["k", "i"], "r"}], "-", 
              RowBox[{"l", " ", 
               FractionBox["\[Pi]", "2"]}]}], ")"}]}]}], " "}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7598413244175587`*^9, 3.759841373711916*^9}, {
  3.7598414653499203`*^9, 3.759841543009026*^9}, {3.7598415770080223`*^9, 
  3.759841618458824*^9}, {3.7598417304767303`*^9, 3.759841822801036*^9}, {
  3.759842136956772*^9, 3.759842178244142*^9}, {3.7598422487802896`*^9, 
  3.759842250706822*^9}, {3.7598423018200417`*^9, 3.759842309339253*^9}, {
  3.7598430436962833`*^9, 3.75984306204749*^9}, {3.760035146147904*^9, 
  3.760035146885068*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Here, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["j", "l"], "(", "x", ")"}], " ", "and", " ", 
    RowBox[{
     SubscriptBox["n", "l"], "(", "x", ")"}]}], TraditionalForm]]],
 " are the spherical Bessel and Neumann functions, respectively.  One could \
equivalently use Hankel-type functions:"
}], "Text",
 CellChangeTimes->{{3.759841907462051*^9, 3.759841920169511*^9}, {
  3.759843534462387*^9, 3.759843573720481*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["u", 
     RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}], "\[Rule]", " ", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             RowBox[{"(", "+", ")"}]], "(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}], "=", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["c", "l"], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["s", "l"]}]}], ")"}], "=", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["k", "i"], "r", 
              RowBox[{
               SubsuperscriptBox["h", "l", 
                RowBox[{"(", "1", ")"}]], "(", 
               RowBox[{
                SubscriptBox["k", "i"], " ", "r"}], ")"}]}], "=", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["k", "i"], "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["j", "l"], "+", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  SubscriptBox["n", "l"]}]}], ")"}]}], 
              OverscriptBox["\[RightArrow]", 
               RowBox[{
                RowBox[{
                 SubscriptBox["k", "i"], "r"}], " ", "\[GreaterGreater]", 
                "1"}]], 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "\[ImaginaryI]"}], ")"}], "l"], 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SubscriptBox["k", "i"], "r"}]]}]}]}]}]}], " "},
         {
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             RowBox[{"(", "-", ")"}]], "(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}], "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["c", "l"], "-", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["s", "l"]}]}], ")"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              SubscriptBox["k", "i"], "r", " ", 
              RowBox[{
               SubsuperscriptBox["h", "l", 
                RowBox[{"(", "2", ")"}]], "(", 
               RowBox[{
                SubscriptBox["k", "i"], " ", "r"}], ")"}]}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               SubscriptBox["k", "i"], "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["j", "l"], "-", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  SubscriptBox["n", "l"]}]}], ")"}]}], 
              OverscriptBox["\[RightArrow]", 
               RowBox[{
                RowBox[{
                 SubscriptBox["k", "i"], "r"}], " ", "\[GreaterGreater]", 
                "1"}]], 
              RowBox[{
               SuperscriptBox["\[ImaginaryI]", "l"], 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], " ", 
                 SubscriptBox["k", "i"], "r"}]]}]}]}]}]}], " "}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759841927353526*^9, 3.759841998013742*^9}, {
  3.759842253082405*^9, 3.759842256251679*^9}, {3.759842328185853*^9, 
  3.759842402508913*^9}, {3.759843002492867*^9, 3.759843018008634*^9}, {
  3.759843110846912*^9, 3.759843134611458*^9}, {3.759843219086536*^9, 
  3.759843242163525*^9}, {3.759843276048078*^9, 3.759843335910905*^9}, {
  3.759843398045528*^9, 3.759843453741645*^9}, {3.7598436062244453`*^9, 
  3.759843611408783*^9}, {3.760035154212305*^9, 3.760035154932917*^9}, {
  3.76009990282307*^9, 3.760099932193687*^9}, {3.7600999624874773`*^9, 
  3.7600999848223877`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "In some cases, we\[CloseCurlyQuote]ll need the solutions for closed \
channels.  In this case, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["k", "i", "2"], "\[Rule]", 
     RowBox[{"-", 
      SubsuperscriptBox["\[Kappa]", "i", "2"]}]}], "=", 
    RowBox[{
     RowBox[{"2", "\[Mu]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"E", "-", 
         SubscriptBox["E", "i"]}], ")"}], "/", 
       SuperscriptBox["\[HBar]", "2"]}]}], "<", "0"}]}], TraditionalForm]]],
 ".  Asymptotically we have"
}], "Text",
 CellChangeTimes->{{3.759843811447915*^9, 3.759843904608685*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        SuperscriptBox["\[PartialD]", "2"], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "i"], "r"}], ")"}], "2"]}]], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"l", "(", 
          RowBox[{"l", "+", "1"}], ")"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "i"], "r"}], ")"}], "2"]]}]}], "-", 
      "1"}], ")"}], 
    RowBox[{
     SubscriptBox["u", 
      RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], "=", "0"}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.75984391009379*^9, 3.759843941109763*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["u", 
     RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}], "\[Rule]", " ", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{
            FractionBox["2", "\[Pi]"], 
            SubscriptBox["\[Kappa]", "i"], "r", " ", 
            RowBox[{
             SubscriptBox["k", "l"], "(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "i"], " ", "r"}], ")"}]}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                FractionBox["2", "\[Pi]"], 
                SubscriptBox["\[Kappa]", "i"], "r"}]], 
              RowBox[{
               SubscriptBox["K", 
                RowBox[{"l", "+", 
                 FractionBox["1", "2"]}]], "(", 
               RowBox[{
                SubscriptBox["\[Kappa]", "i"], "r"}], ")"}]}], 
             OverscriptBox["\[RightArrow]", 
              RowBox[{
               RowBox[{
                SubscriptBox["k", "i"], "r"}], " ", "\[GreaterGreater]", 
               "1"}]], 
             RowBox[{
              SqrtBox[
               RowBox[{
                FractionBox["2", "\[Pi]"], 
                SubscriptBox["\[Kappa]", "i"], "r"}]], 
              SqrtBox[
               FractionBox["\[Pi]", 
                RowBox[{"2", 
                 SubscriptBox["\[Kappa]", "i"], "r"}]]], 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", 
                 SubscriptBox["\[Kappa]", "i"]}], "r"}]]}]}], "=", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Kappa]", "i"]}], "r"}]]}]}], " "},
         {
          RowBox[{
           RowBox[{
            FractionBox["2", "\[Pi]"], 
            SubscriptBox["\[Kappa]", "i"], "r", " ", 
            RowBox[{
             SubscriptBox["i", "l"], "(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "i"], " ", "r"}], ")"}]}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                FractionBox["2", "\[Pi]"], 
                SubscriptBox["\[Kappa]", "i"], "r"}]], 
              RowBox[{
               SubscriptBox["I", 
                RowBox[{"l", "+", 
                 FractionBox["1", "2"]}]], "(", 
               RowBox[{
                SubscriptBox["\[Kappa]", "i"], "r"}], ")"}]}], 
             OverscriptBox["\[RightArrow]", 
              RowBox[{
               RowBox[{
                SubscriptBox["k", "i"], "r"}], " ", "\[GreaterGreater]", 
               "1"}]], 
             RowBox[{
              SqrtBox[
               RowBox[{
                FractionBox["2", "\[Pi]"], 
                SubscriptBox["\[Kappa]", "i"], "r"}]], 
              FractionBox[
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 SubscriptBox["\[Kappa]", "i"], "r"}]], 
               SqrtBox[
                RowBox[{"2", "\[Pi]", " ", 
                 SubscriptBox["\[Kappa]", "i"], "r"}]]]}]}], "=", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               SubscriptBox["\[Kappa]", "i"], "r"}]], "\[Pi]"]}]}], " "}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759844202134397*^9, 3.759844322725717*^9}, {
  3.759844793533133*^9, 3.759844800745788*^9}, {3.75984499475469*^9, 
  3.759845053647853*^9}, {3.759845297691107*^9, 3.759845333728046*^9}, {
  3.7598454826806393`*^9, 3.759845499315496*^9}, {3.759845577852812*^9, 
  3.7598455940682907`*^9}, {3.759845919386113*^9, 3.759845959746369*^9}, {
  3.759846009334234*^9, 3.759846047924871*^9}, {3.7600351415486603`*^9, 
  3.760035142318429*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Orthogonality of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["j", "l"], ",", 
    SubscriptBox["n", "l"]}], TraditionalForm]]],
 " functions"
}], "Subsection",
 CellChangeTimes->{{3.759860372654077*^9, 3.759860402396999*^9}, {
  3.7599665024427147`*^9, 3.759966548109221*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The scattering solutions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "l"], "(", 
    RowBox[{"k", " ", "r"}], ")"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "l"], "(", 
    RowBox[{"k", " ", "r"}], ")"}], TraditionalForm]]],
 " are oscillatory at large ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]]],
 " and never decay to zero.  They ",
 StyleBox["cannot",
  FontWeight->"Bold"],
 " be normalized in the usual way that one may normalize bound-state \
wavefunctions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"\[DifferentialD]", "r"}], " ", 
      SuperscriptBox[
       RowBox[{"\[LeftBracketingBar]", "\[Psi]", "\[RightBracketingBar]"}], 
       "2"]}]}], "=", "1"}], TraditionalForm]]],
 ".  Note, however, that"
}], "Text",
 CellChangeTimes->{{3.759860412149691*^9, 3.759860511376692*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     RowBox[{"\[DifferentialD]", "r"}], " ", 
     SuperscriptBox["r", "2"], 
     RowBox[{
      SubscriptBox["j", "l"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], " ", "r"}], ")"}], 
     RowBox[{
      SubscriptBox["j", "l"], "(", 
      RowBox[{
       SubscriptBox["k", "j"], " ", "r"}], ")"}]}]}], "=", 
   RowBox[{
    FractionBox["\[Pi]", "2"], 
    FractionBox[
     RowBox[{"\[Delta]", "(", 
      RowBox[{
       SubscriptBox["k", "i"], "-", 
       SubscriptBox["k", "j"]}], ")"}], 
     SubsuperscriptBox["k", "i", "2"]]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.75986044254783*^9, 3.759860443137473*^9}, {
  3.759860534255844*^9, 3.7598605766536617`*^9}, {3.759860652308124*^9, 
  3.759860684576599*^9}, {3.759861522028645*^9, 3.7598615462324677`*^9}, {
  3.759863906061088*^9, 3.759863947377162*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
How can we prove this relation?  I\[CloseCurlyQuote]ll start with the Fourier \
theorem:\
\>", "Text",
 CellChangeTimes->{{3.759861424911069*^9, 3.759861432530574*^9}, {
  3.7598615589248238`*^9, 3.75986158365318*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"f", "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox[
      RowBox[{"\[DifferentialD]", 
       StyleBox["k",
        FontWeight->"Bold"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "\[Pi]"}], ")"}], "3"]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{
        StyleBox["k",
         FontWeight->"Bold"], "\[CenterDot]", 
        StyleBox["r",
         FontWeight->"Bold"]}]}]], 
     RowBox[{"F", "(", 
      StyleBox["k",
       FontWeight->"Bold"], ")"}]}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.7598615855815477`*^9, 3.759861651759596*^9}, {
  3.759861834207828*^9, 3.759861845910478*^9}, {3.7598625905804567`*^9, 
  3.759862598579693*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "where the Fourier transform of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], TraditionalForm]]],
 " is given by"
}], "Text",
 CellChangeTimes->{{3.759861850884144*^9, 3.759861870534658*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"F", "(", 
    StyleBox["k",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      StyleBox["r",
       FontWeight->"Bold"]}], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{
        StyleBox["k",
         FontWeight->"Bold"], "\[CenterDot]", 
        StyleBox["r",
         FontWeight->"Bold"]}]}]], 
     RowBox[{"f", "(", 
      StyleBox["r",
       FontWeight->"Bold"], ")"}]}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.759861660262306*^9, 3.759861685070362*^9}, {
  3.759861800867774*^9, 3.759861802209325*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Insert the first expression into the second, but use a dummy variable ",
 Cell[BoxData[
  FormBox[
   StyleBox["q",
    FontWeight->"Bold"], TraditionalForm]]],
 " for the integration:"
}], "Text",
 CellChangeTimes->{{3.759862484018137*^9, 3.759862498280658*^9}, {
  3.759862615210657*^9, 3.759862662442684*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"F", "(", 
    StyleBox["k",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      StyleBox["r",
       FontWeight->"Bold"]}], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{
        StyleBox["k",
         FontWeight->"Bold"], "\[CenterDot]", 
        StyleBox["r",
         FontWeight->"Bold"]}]}]], 
     RowBox[{"\[Integral]", 
      RowBox[{
       FractionBox[
        RowBox[{"\[DifferentialD]", 
         StyleBox["q",
          FontWeight->"Bold"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}], "3"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{
          StyleBox["q",
           FontWeight->"Bold"], "\[CenterDot]", 
          StyleBox["r",
           FontWeight->"Bold"]}]}]], 
       RowBox[{"F", "(", 
        StyleBox["q",
         FontWeight->"Bold"], ")"}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759862666481395*^9, 3.7598627076493397`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"F", "(", 
    StyleBox["k",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox[
      RowBox[{"\[DifferentialD]", 
       StyleBox["q",
        FontWeight->"Bold"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "\[Pi]"}], ")"}], "3"]], 
     RowBox[{"(", 
      RowBox[{"\[Integral]", 
       RowBox[{
        RowBox[{"\[DifferentialD]", 
         StyleBox["r",
          FontWeight->"Bold"]}], 
        StyleBox[" ",
         FontWeight->"Bold"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{
           StyleBox["k",
            FontWeight->"Bold"], "\[CenterDot]", 
           StyleBox["r",
            FontWeight->"Bold"]}]}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{
           StyleBox["q",
            FontWeight->"Bold"], "\[CenterDot]", 
           StyleBox["r",
            FontWeight->"Bold"]}]}]]}]}], ")"}], 
     RowBox[{"F", "(", 
      StyleBox["q",
       FontWeight->"Bold"], ")"}]}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.7598627142408543`*^9, 3.759862736848034*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"F", "(", 
    StyleBox["k",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox[
      RowBox[{"\[DifferentialD]", 
       StyleBox["q",
        FontWeight->"Bold"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "\[Pi]"}], ")"}], "3"]], 
     RowBox[{"(", 
      RowBox[{"\[Integral]", 
       RowBox[{
        RowBox[{"\[DifferentialD]", 
         StyleBox["r",
          FontWeight->"Bold"]}], 
        StyleBox[" ",
         FontWeight->"Bold"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             StyleBox["k",
              FontWeight->"Bold"], 
             StyleBox["-",
              FontWeight->"Plain"], 
             StyleBox["q",
              FontWeight->"Bold"]}], 
            StyleBox[")",
             FontWeight->"Bold"]}], "\[CenterDot]", 
           StyleBox["r",
            FontWeight->"Bold"]}]}]]}]}], ")"}], 
     RowBox[{"F", "(", 
      StyleBox["q",
       FontWeight->"Bold"], ")"}]}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.7598627479547043`*^9, 3.759862762207287*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["This can only be true if ", "Text",
 CellChangeTimes->{{3.759862772426202*^9, 3.759862780600616*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      StyleBox["r",
       FontWeight->"Bold"]}], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          StyleBox["k",
           FontWeight->"Bold"], 
          StyleBox["-",
           FontWeight->"Plain"], 
          StyleBox["q",
           FontWeight->"Bold"]}], 
         StyleBox[")",
          FontWeight->"Bold"]}], "\[CenterDot]", 
        StyleBox["r",
         FontWeight->"Bold"]}]}]]}]}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "3"], 
    RowBox[{
     SuperscriptBox["\[Delta]", "3"], "(", 
     RowBox[{
      StyleBox["k",
       FontWeight->"Bold"], "-", 
      StyleBox["q",
       FontWeight->"Bold"]}], ")"}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.759862786769223*^9, 3.7598628014384937`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
Now the plane wave can be expanded as (I\[CloseCurlyQuote]m not going to \
prove this):\
\>", "Text",
 CellChangeTimes->{{3.759965323484079*^9, 3.759965342609219*^9}, {
  3.760186083322175*^9, 3.760186090428031*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      StyleBox["k",
       FontWeight->"Bold"], "\[CenterDot]", 
      StyleBox["r",
       FontWeight->"Bold"]}]}]], "=", 
   RowBox[{"4", "\[Pi]", 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", "l"], 
      RowBox[{
       SubscriptBox["j", "l"], "(", 
       RowBox[{"k", " ", "r"}], ")"}], 
      RowBox[{
       OverscriptBox[
        UnderscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "l"}]}]], "l"], 
       RowBox[{
        SubscriptBox[
         RowBox[{"Y", "\[Conjugate]"}], 
         RowBox[{"l", ",", "m"}]], 
        RowBox[{"(", 
         OverscriptBox[
          StyleBox["k",
           FontWeight->"Bold"], "^"], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{"l", ",", "m"}]], "(", 
         OverscriptBox[
          StyleBox["r",
           FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7599653462490463`*^9, 3.759965453265476*^9}, {
  3.75996568136266*^9, 3.7599656832503033`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Let\[CloseCurlyQuote]s take a look at:", "Text",
 CellChangeTimes->{{3.759965610958744*^9, 3.759965617156321*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      StyleBox["r",
       FontWeight->"Bold"]}], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          StyleBox["k",
           FontWeight->"Bold"], 
          StyleBox["-",
           FontWeight->"Plain"], 
          StyleBox["q",
           FontWeight->"Bold"]}], 
         StyleBox[")",
          FontWeight->"Bold"]}], "\[CenterDot]", 
        StyleBox["r",
         FontWeight->"Bold"]}]}]]}]}], "=", 
   RowBox[{
    OverscriptBox[
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"m", "=", 
        RowBox[{"-", "l"}]}]], "l"], 
     RowBox[{
      OverscriptBox[
       UnderscriptBox["\[Sum]", 
        RowBox[{
         RowBox[{"l", "'"}], "=", "0"}]], "\[Infinity]"], 
      RowBox[{
       OverscriptBox[
        UnderscriptBox["\[Sum]", 
         RowBox[{
          RowBox[{"m", "'"}], "=", 
          RowBox[{"-", 
           RowBox[{"l", "'"}]}]}]], 
        RowBox[{"l", "'"}]], 
       RowBox[{
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[ImaginaryI]", 
           RowBox[{"l", "+", 
            RowBox[{"l", "'"}]}]], "(", 
          RowBox[{"4", "\[Pi]"}], ")"}], "2"], 
        SubscriptBox[
         RowBox[{"Y", "\[Conjugate]"}], 
         RowBox[{"l", ",", "m"}]], 
        RowBox[{"(", 
         OverscriptBox[
          StyleBox["k",
           FontWeight->"Bold"], "^"], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{
           RowBox[{"l", "'"}], ",", 
           RowBox[{"m", "'"}]}]], "(", 
         OverscriptBox[
          StyleBox["q",
           FontWeight->"Bold"], "^"], ")"}], 
        RowBox[{"\[Integral]", 
         RowBox[{
          RowBox[{"\[DifferentialD]", "r"}], " ", 
          SuperscriptBox["r", "2"], "  ", 
          RowBox[{
           SubscriptBox["j", "l"], "(", 
           RowBox[{"k", " ", "r"}], ")"}], 
          RowBox[{
           SubscriptBox["j", 
            RowBox[{"l", "'"}]], "(", 
           RowBox[{"q", " ", "r"}], ")"}], 
          OverscriptBox[
           RowBox[{"\[Integral]", 
            RowBox[{
             RowBox[{"\[DifferentialD]", "\[CapitalOmega]"}], " ", 
             RowBox[{
              SubscriptBox["Y", 
               RowBox[{"l", ",", "m"}]], "(", 
              OverscriptBox[
               StyleBox["r",
                FontWeight->"Bold"], "^"], ")"}], " ", 
             SubscriptBox[
              RowBox[{"Y", "\[Conjugate]"}], 
              RowBox[{
               RowBox[{"l", "'"}], ",", 
               RowBox[{"m", "'"}]}]], 
             RowBox[{"(", 
              OverscriptBox[
               StyleBox["r",
                FontWeight->"Bold"], "^"], ")"}]}]}], 
           OverscriptBox["\[OverBrace]", 
            RowBox[{
             SubscriptBox["\[Delta]", 
              RowBox[{"l", ",", 
               RowBox[{"l", "'"}]}]], 
             SubscriptBox["\[Delta]", 
              RowBox[{"m", ",", 
               RowBox[{"m", "'"}]}]]}]]]}]}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7599656183677998`*^9, 3.7599658862656593`*^9}, {
  3.759965918337009*^9, 3.759965934247521*^9}, {3.759966078824193*^9, 
  3.759966083192397*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      StyleBox["r",
       FontWeight->"Bold"]}], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          StyleBox["k",
           FontWeight->"Bold"], 
          StyleBox["-",
           FontWeight->"Plain"], 
          StyleBox["q",
           FontWeight->"Bold"]}], 
         StyleBox[")",
          FontWeight->"Bold"]}], "\[CenterDot]", 
        StyleBox["r",
         FontWeight->"Bold"]}]}]]}]}], "=", 
   RowBox[{
    OverscriptBox[
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"m", "=", 
        RowBox[{"-", "l"}]}]], "l"], 
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", 
       RowBox[{"2", "l"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"4", "\[Pi]"}], ")"}], "2"], 
      SubscriptBox[
       RowBox[{"Y", "\[Conjugate]"}], 
       RowBox[{"l", ",", "m"}]], 
      RowBox[{"(", 
       OverscriptBox[
        StyleBox["k",
         FontWeight->"Bold"], "^"], ")"}], 
      SubscriptBox[
       RowBox[{"Y", "\[Conjugate]"}], 
       RowBox[{"l", ",", "m"}]], 
      RowBox[{"(", 
       OverscriptBox[
        StyleBox["q",
         FontWeight->"Bold"], "^"], ")"}], 
      RowBox[{"\[Integral]", 
       RowBox[{
        RowBox[{"\[DifferentialD]", "r"}], " ", 
        SuperscriptBox["r", "2"], "  ", 
        RowBox[{
         SubscriptBox["j", "l"], "(", 
         RowBox[{"k", " ", "r"}], ")"}], 
        RowBox[{
         SubscriptBox["j", "l"], "(", 
         RowBox[{"q", " ", "r"}], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7599658963684483`*^9, 3.759965953718802*^9}, 
   3.759966176716544*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "For integer ",
 Cell[BoxData[
  FormBox["l", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ImaginaryI]", 
     RowBox[{"2", "l"}]], "=", "1"}], TraditionalForm]]],
 " and the completeness of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", 
    RowBox[{"l", ",", "m"}]], TraditionalForm]]],
 " functions gives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", ",", "m"}]], 
     RowBox[{
      SubscriptBox[
       RowBox[{"Y", "\[Conjugate]"}], 
       RowBox[{"l", ",", "m"}]], 
      RowBox[{"(", 
       OverscriptBox[
        StyleBox["k",
         FontWeight->"Bold"], "^"], ")"}], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", ",", "m"}]], "(", 
       OverscriptBox[
        StyleBox["q",
         FontWeight->"Bold"], "^"], ")"}]}]}], "=", 
    RowBox[{
     SuperscriptBox["\[Delta]", "2"], "(", 
     RowBox[{
      StyleBox[
       OverscriptBox["k", "^"],
       FontWeight->"Bold"], "-", 
      StyleBox[
       OverscriptBox["q", "^"],
       FontWeight->"Bold"]}], ")"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.75996599882905*^9, 3.759966117607953*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["We\[CloseCurlyQuote]re left with", "Text",
 CellChangeTimes->{{3.7599661455910673`*^9, 3.75996614784772*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      StyleBox["r",
       FontWeight->"Bold"]}], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          StyleBox["k",
           FontWeight->"Bold"], 
          StyleBox["-",
           FontWeight->"Plain"], 
          StyleBox["q",
           FontWeight->"Bold"]}], 
         StyleBox[")",
          FontWeight->"Bold"]}], "\[CenterDot]", 
        StyleBox["r",
         FontWeight->"Bold"]}]}]]}]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Delta]", "2"], "(", 
      RowBox[{
       StyleBox[
        OverscriptBox["k", "^"],
        FontWeight->"Bold"], "-", 
       StyleBox[
        OverscriptBox["q", "^"],
        FontWeight->"Bold"]}], ")"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"4", "\[Pi]"}], ")"}], "2"], 
     RowBox[{"\[Integral]", 
      RowBox[{
       RowBox[{"\[DifferentialD]", "r"}], " ", 
       SuperscriptBox["r", "2"], "  ", 
       RowBox[{
        SubscriptBox["j", "l"], "(", 
        RowBox[{"k", " ", "r"}], ")"}], 
       RowBox[{
        SubscriptBox["j", "l"], "(", 
        RowBox[{"q", " ", "r"}], ")"}]}]}]}], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}], "3"], 
     RowBox[{
      SuperscriptBox["\[Delta]", "3"], "(", 
      RowBox[{
       StyleBox["k",
        FontWeight->"Bold"], "-", 
       StyleBox["q",
        FontWeight->"Bold"]}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759966161221089*^9, 3.759966209472221*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
But the 3D delta-function factors into a radial part and an angular part:\
\>", "Text",
 CellChangeTimes->{{3.759966321596134*^9, 3.7599663218664713`*^9}, {
  3.7601861061145887`*^9, 3.760186125293976*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "3"], 
    RowBox[{
     SuperscriptBox["\[Delta]", "3"], "(", 
     RowBox[{
      StyleBox["k",
       FontWeight->"Bold"], "-", 
      StyleBox["q",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "3"], 
    RowBox[{"\[Delta]", "(", 
     RowBox[{"k", "-", "q"}], ")"}], 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Delta]", "2"], "(", 
      RowBox[{
       StyleBox[
        OverscriptBox["k", "^"],
        FontWeight->"Bold"], "-", 
       StyleBox[
        OverscriptBox["q", "^"],
        FontWeight->"Bold"]}], ")"}], 
     SuperscriptBox["k", "2"]]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759966324245543*^9, 3.75996636743292*^9}, {
  3.760104190305492*^9, 3.760104194284203*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["suggesting that", "Text",
 CellChangeTimes->{{3.759966389536643*^9, 3.759966391215732*^9}, {
  3.760186131548256*^9, 3.760186132539033*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Delta]", "2"], "(", 
     RowBox[{
      StyleBox[
       OverscriptBox["k", "^"],
       FontWeight->"Bold"], "-", 
      StyleBox[
       OverscriptBox["q", "^"],
       FontWeight->"Bold"]}], ")"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "\[Pi]"}], ")"}], "2"], 
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"\[DifferentialD]", "r"}], " ", 
      SuperscriptBox["r", "2"], "  ", 
      RowBox[{
       SubscriptBox["j", "l"], "(", 
       RowBox[{"k", " ", "r"}], ")"}], 
      RowBox[{
       SubscriptBox["j", "l"], "(", 
       RowBox[{"q", " ", "r"}], ")"}]}]}]}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "3"], 
    FractionBox[
     RowBox[{"\[Delta]", "(", 
      RowBox[{"k", "-", "q"}], ")"}], 
     SuperscriptBox["k", "2"]], 
    RowBox[{
     SuperscriptBox["\[Delta]", "2"], "(", 
     RowBox[{
      StyleBox[
       OverscriptBox["k", "^"],
       FontWeight->"Bold"], "-", 
      StyleBox[
       OverscriptBox["q", "^"],
       FontWeight->"Bold"]}], ")"}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.7599664076272297`*^9, 3.759966428746105*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["which gives:", "Text",
 CellChangeTimes->{{3.7601861434223347`*^9, 3.760186144826435*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[DifferentialD]", "r"}], " ", 
     SuperscriptBox["r", "2"], "  ", 
     RowBox[{
      SubscriptBox["j", "l"], "(", 
      RowBox[{"k", " ", "r"}], ")"}], 
     RowBox[{
      SubscriptBox["j", "l"], "(", 
      RowBox[{"q", " ", "r"}], ")"}]}]}], "=", 
   RowBox[{
    FractionBox["\[Pi]", "2"], 
    FractionBox[
     RowBox[{"\[Delta]", "(", 
      RowBox[{"k", "-", "q"}], ")"}], 
     SuperscriptBox["k", "2"]]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.759966436200878*^9, 3.759966456739678*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell[CellGroupData[{

Cell["Energy Normalization", "Subsection",
 CellChangeTimes->{{3.759966582282178*^9, 3.759966585507411*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
The above normalization condition for the spherical Bessel functions implies \
that the Riccati functions satisfy\
\>", "Text",
 CellChangeTimes->{{3.759966484669592*^9, 3.759966491267454*^9}, {
  3.7600330403329477`*^9, 3.7600330584491043`*^9}, {3.7601820800096827`*^9, 
  3.760182080692892*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[DifferentialD]", "r"}], "  ", "k", " ", "r", " ", 
     RowBox[{
      SubscriptBox["j", "l"], "(", 
      RowBox[{"k", " ", "r"}], ")"}], "q", " ", "r", " ", 
     RowBox[{
      SubscriptBox["j", "l"], "(", 
      RowBox[{"q", " ", "r"}], ")"}]}]}], "=", 
   RowBox[{
    FractionBox["\[Pi]", "2"], 
    RowBox[{"\[Delta]", "(", 
     RowBox[{"k", "-", "q"}], ")"}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.760033064213162*^9, 3.760033093430197*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "We may, however, wish these functions to be normalized with respect to ",
 StyleBox["energy.",
  FontSlant->"Italic"],
 "  In which case we require"
}], "Text",
 CellChangeTimes->{{3.760033097629602*^9, 3.760033121138967*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[DifferentialD]", "r"}], "  ", 
     RowBox[{
      SubscriptBox["f", "l"], "(", 
      RowBox[{"k", " ", "r"}], ")"}], " ", 
     RowBox[{
      SubscriptBox["f", "l"], "(", 
      RowBox[{"q", " ", "r"}], ")"}]}]}], "=", 
   RowBox[{"\[Delta]", "(", 
    RowBox[{
     SubscriptBox["E", "k"], "-", 
     SubscriptBox["E", "q"]}], ")"}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.760033131398286*^9, 3.760033166139131*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["E", 
       SubscriptBox["k", "i"]], "-", 
      SubscriptBox["E", "i"]}], ")"}], "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[HBar]", "2"], 
      SubsuperscriptBox["k", "i", "2"]}], 
     RowBox[{"2", "\[Mu]"}]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]", "(", 
     RowBox[{
      SubscriptBox["E", 
       SubscriptBox["k", "i"]], "-", 
      SubscriptBox["E", 
       SubscriptBox["q", "i"]]}], ")"}], "=", 
    FractionBox[
     RowBox[{"\[Delta]", "(", 
      RowBox[{
       SubscriptBox["k", "i"], "-", 
       SubscriptBox["q", "i"]}], ")"}], 
     SubscriptBox[
      RowBox[{"\[LeftBracketingBar]", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         SubscriptBox["E", 
          SubscriptBox["k", "i"]]}], 
        RowBox[{"\[PartialD]", 
         SubscriptBox["k", "i"]}]], "\[RightBracketingBar]"}], 
      RowBox[{
       SubscriptBox["k", "i"], "=", 
       SubscriptBox["q", "i"]}]]]}], TraditionalForm]]],
 ", we have"
}], "Text",
 CellChangeTimes->{{3.76003316738234*^9, 3.760033290462616*^9}, {
  3.7600333646612873`*^9, 3.760033396941127*^9}, {3.760033427733679*^9, 
  3.760033432326823*^9}, {3.760033474102944*^9, 3.760033508504911*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Delta]", "(", 
    RowBox[{
     SubscriptBox["k", "i"], "-", 
     SubscriptBox["q", "i"]}], ")"}], "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["\[HBar]", "2"], "\[Mu]"], 
    SubscriptBox["q", "i"], 
    RowBox[{"\[Delta]", "(", 
     RowBox[{
      SubscriptBox["E", 
       SubscriptBox["k", "i"]], "-", 
      SubscriptBox["E", 
       SubscriptBox["q", "i"]]}], ")"}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{
  3.760033403962221*^9, 3.7600334614211693`*^9, {3.760033526027281*^9, 
   3.760033569978558*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Now since we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"\[DifferentialD]", "r"}], "  ", "k", " ", "r", " ", 
      SubscriptBox["j", "l"], 
      RowBox[{"(", 
       RowBox[{"k", " ", "r"}], ")"}], "q", " ", "r", " ", 
      SubscriptBox["j", "l"], 
      RowBox[{"(", 
       RowBox[{"q", " ", "r"}], ")"}]}]}], "=", 
    RowBox[{
     FractionBox["\[Pi]", "2"], 
     FractionBox[
      SuperscriptBox["\[HBar]", "2"], "\[Mu]"], 
     SubscriptBox["q", "i"], 
     RowBox[{"\[Delta]", "(", 
      RowBox[{
       SubscriptBox["E", 
        SubscriptBox["k", "i"]], "-", 
       SubscriptBox["E", 
        SubscriptBox["q", "i"]]}], ")"}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.760033664607806*^9, 3.760033698488194*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Therefore, if we define", "Text",
 CellChangeTimes->{{3.760033592199854*^9, 3.7600335997900057`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Then", "Text",
 CellChangeTimes->{{3.7600338840575542`*^9, 3.760033884504506*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[DifferentialD]", "r"}], " ", 
     RowBox[{
      SubscriptBox["f", "l"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}], ")"}], " ", 
     RowBox[{
      SubscriptBox["f", "l"], "(", 
      RowBox[{
       SubscriptBox["q", "i"], " ", "r"}], ")"}]}]}], "=", 
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"\[DifferentialD]", "r"}], " ", 
      RowBox[{
       SubscriptBox["g", "l"], "(", 
       RowBox[{
        SubscriptBox["k", "i"], "r"}], ")"}], " ", 
      RowBox[{
       SubscriptBox["g", "l"], "(", 
       RowBox[{
        SubscriptBox["q", "i"], " ", "r"}], ")"}]}]}], "=", 
    RowBox[{"\[Delta]", "(", 
     RowBox[{
      SubscriptBox["E", 
       SubscriptBox["k", "i"]], "-", 
      SubscriptBox["E", 
       SubscriptBox["q", "i"]]}], ")"}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760033905949973*^9, 3.760033953765168*^9}, {
  3.76003444263745*^9, 3.760034449709681*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The ",
 StyleBox["energy normalized ",
  FontSlant->"Italic"],
 "asymptotic solutions are therefore:"
}], "Text",
 CellChangeTimes->{{3.760034814053008*^9, 3.760034824081479*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["u", 
     RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}], "\[Rule]", " ", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{
            SubscriptBox[
             OverscriptBox["s", "~"], "l"], "(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}], "=", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox[
               RowBox[{"2", "\[Mu]"}], 
               RowBox[{
                SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                SubscriptBox["k", "i"]}]]], 
             RowBox[{
              SubscriptBox["s", "l"], "(", 
              RowBox[{
               SubscriptBox["k", "i"], "r"}], ")"}]}], "=", 
            RowBox[{
             RowBox[{
              SqrtBox[
               FractionBox[
                RowBox[{"2", "\[Mu]"}], 
                RowBox[{
                 SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                 SubscriptBox["k", "i"]}]]], 
              SubscriptBox["k", "i"], "r", 
              RowBox[{
               SubscriptBox["j", "l"], "(", 
               RowBox[{"k", " ", "r"}], ")"}]}], 
             OverscriptBox["\[RightArrow]", 
              RowBox[{
               RowBox[{
                SubscriptBox["k", "i"], "r"}], " ", "\[GreaterGreater]", 
               "1"}]], 
             RowBox[{
              SqrtBox[
               FractionBox[
                RowBox[{"2", "\[Mu]"}], 
                RowBox[{
                 SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                 SubscriptBox["k", "i"]}]]], 
              RowBox[{"sin", "(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["k", "i"], "r"}], "-", 
                RowBox[{"l", " ", 
                 FractionBox["\[Pi]", "2"]}]}], ")"}]}]}]}]}], " "},
         {
          RowBox[{
           RowBox[{
            SubscriptBox[
             OverscriptBox["c", "~"], "l"], "(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}], "=", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox[
               RowBox[{"2", "\[Mu]"}], 
               RowBox[{
                SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                SubscriptBox["k", "i"]}]]], 
             RowBox[{
              SubscriptBox["c", "l"], "(", 
              RowBox[{
               SubscriptBox["k", "i"], "r"}], ")"}]}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox[
                 RowBox[{"2", "\[Mu]"}], 
                 RowBox[{
                  SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                  SubscriptBox["k", "i"]}]]]}], 
              SubscriptBox["k", "i"], "r", 
              RowBox[{
               SubscriptBox["n", "l"], "(", 
               RowBox[{"k", " ", "r"}], ")"}]}], 
             OverscriptBox["\[RightArrow]", 
              RowBox[{
               RowBox[{
                SubscriptBox["k", "i"], "r"}], " ", "\[GreaterGreater]", 
               "1"}]], 
             RowBox[{
              SqrtBox[
               FractionBox[
                RowBox[{"2", "\[Mu]"}], 
                RowBox[{
                 SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                 SubscriptBox["k", "i"]}]]], 
              RowBox[{"cos", "(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["k", "i"], "r"}], "-", 
                RowBox[{"l", " ", 
                 FractionBox["\[Pi]", "2"]}]}], ")"}]}]}]}]}], " "}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"Here", ",", 
   RowBox[{
    FormBox[
     RowBox[{
      RowBox[{
       SubscriptBox["j", "l"], "(", "x", ")"}], " ", "and", " ", 
      RowBox[{
       SubscriptBox["n", "l"], "(", "x", ")"}]}],
     TraditionalForm], "are", " ", "the", " ", "spherical", " ", "Bessel", 
    " ", "and", " ", "Neumann", " ", "functions"}], ",", 
   RowBox[{
    RowBox[{"respectively", ".", "One"}], " ", "could", " ", "equivalently", 
    " ", "use", " ", "Hankel"}], "\[Dash]", 
   RowBox[{
    RowBox[{"type", " ", 
     RowBox[{"functions", ":", "\n", 
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}]}], "\[Rule]", 
    " ", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{
            RowBox[{
             SuperscriptBox[
              OverscriptBox["f", "~"], "+"], "(", 
             RowBox[{
              SubscriptBox["k", "i"], "r"}], ")"}], "=", 
            RowBox[{
             RowBox[{
              SqrtBox[
               FractionBox[
                RowBox[{"2", "\[Mu]"}], 
                RowBox[{
                 SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                 SubscriptBox["k", "i"]}]]], 
              RowBox[{
               SuperscriptBox["f", "+"], "(", 
               RowBox[{
                SubscriptBox["k", "i"], "r"}], ")"}]}], "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox[
                 OverscriptBox["c", "~"], "l"], "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SubscriptBox[
                  OverscriptBox["s", "~"], "l"]}]}], ")"}], "=", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"2", "\[Mu]"}], 
                  RowBox[{
                   SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                   SubscriptBox["k", "i"]}]]], 
                SubscriptBox["k", "i"], "r", 
                SubsuperscriptBox["h", "l", 
                 RowBox[{"(", "1", ")"}]]}], "=", 
               RowBox[{
                RowBox[{"\[ImaginaryI]", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"2", "\[Mu]"}], 
                   RowBox[{
                    SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                    SubscriptBox["k", "i"]}]]], 
                 SubscriptBox["k", "i"], "r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["j", "l"], "+", 
                   RowBox[{"\[ImaginaryI]", " ", 
                    SubscriptBox["n", "l"]}]}], ")"}]}], 
                OverscriptBox["\[RightArrow]", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["k", "i"], "r"}], " ", "\[GreaterGreater]", 
                  "1"}]], 
                RowBox[{
                 SqrtBox[
                  FractionBox[
                   RowBox[{"2", "\[Mu]"}], 
                   RowBox[{
                    SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                    SubscriptBox["k", "i"]}]]], 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[ImaginaryI]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["k", "i"], "r"}], "-", 
                    RowBox[{"l", 
                    FractionBox["\[Pi]", "2"]}]}], ")"}]}]]}]}]}]}]}]}], 
           " "},
          {
           RowBox[{
            RowBox[{
             SuperscriptBox[
              OverscriptBox["f", "~"], "-"], "(", 
             RowBox[{
              SubscriptBox["k", "i"], "r"}], ")"}], "=", 
            RowBox[{
             RowBox[{
              SqrtBox[
               FractionBox[
                RowBox[{"2", "\[Mu]"}], 
                RowBox[{
                 SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                 SubscriptBox["k", "i"]}]]], 
              RowBox[{
               SuperscriptBox["f", "-"], "(", 
               RowBox[{
                SubscriptBox["k", "i"], "r"}], ")"}]}], "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox[
                 OverscriptBox["c", "~"], "l"], "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SubscriptBox[
                  OverscriptBox["s", "~"], "l"]}]}], ")"}], "=", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], 
                SqrtBox[
                 FractionBox[
                  RowBox[{"2", "\[Mu]"}], 
                  RowBox[{
                   SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                   SubscriptBox["k", "i"]}]]], 
                SubscriptBox["k", "i"], "r", " ", 
                SubsuperscriptBox["h", "l", 
                 RowBox[{"(", "2", ")"}]]}], "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"2", "\[Mu]"}], 
                   RowBox[{
                    SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                    SubscriptBox["k", "i"]}]]], 
                 SubscriptBox["k", "i"], "r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["j", "l"], "-", 
                   RowBox[{"\[ImaginaryI]", " ", 
                    SubscriptBox["n", "l"]}]}], ")"}]}], 
                OverscriptBox["\[RightArrow]", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["k", "i"], "r"}], " ", "\[GreaterGreater]", 
                  "1"}]], 
                RowBox[{
                 SqrtBox[
                  FractionBox[
                   RowBox[{"2", "\[Mu]"}], 
                   RowBox[{
                    SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
                    SubscriptBox["k", "i"]}]]], 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    SubscriptBox["k", "i"], "r"}], "-", 
                    RowBox[{"l", 
                    FractionBox["\[Pi]", "2"]}]}], ")"}]}]]}]}]}]}]}]}], " "}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], TraditionalForm]}], "EquationNumbered",
 CellChangeTimes->{{3.760034825443667*^9, 3.760034893746541*^9}, {
  3.760035122445447*^9, 3.760035129669689*^9}, {3.76009476684437*^9, 
  3.760094843602786*^9}, {3.76009554112789*^9, 3.760095569078076*^9}, {
  3.760097226134632*^9, 3.760097233573588*^9}, {3.760097286687141*^9, 
  3.7600972940140953`*^9}, {3.760097324721101*^9, 3.760097329039001*^9}, {
  3.760100066392413*^9, 3.760100099798832*^9}, {3.760100217021941*^9, 
  3.7601002622180243`*^9}, {3.76027568259638*^9, 3.760275706656475*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     OverscriptBox["f", "~"], 
     RowBox[{"(", "+", ")"}]], "=", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["c", "~"], "l"], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox[
        OverscriptBox["s", "~"], "l"]}]}], ")"}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     OverscriptBox["f", "~"], 
     RowBox[{"(", "-", ")"}]], "=", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["c", "~"], "l"], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox[
        OverscriptBox["s", "~"], "l"]}]}], ")"}]}], TraditionalForm]]],
 " gives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["c", "~"], "l"], "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       OverscriptBox["f", "~"], 
       RowBox[{"(", "+", ")"}]], "+", 
      SuperscriptBox[
       OverscriptBox["f", "~"], 
       RowBox[{"(", "-", ")"}]]}], "2"]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["s", "~"], "l"], "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       OverscriptBox["f", "~"], 
       RowBox[{"(", "+", ")"}]], "-", 
      SuperscriptBox[
       OverscriptBox["f", "~"], 
       RowBox[{"(", "-", ")"}]]}], 
     RowBox[{"2", "\[ImaginaryI]"}]]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.760097394861162*^9, 3.760097464452373*^9}, {
  3.7601001094484053`*^9, 3.760100182242113*^9}, {3.760275079922686*^9, 
  3.760275102390058*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[CellGroupData[{

Cell["Matrix notation for asymptotic solutions", "Subsubsection",
 CellChangeTimes->{{3.760203437781098*^9, 3.760203445945508*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Define a diagonal matrix comprised of the asymptotic solutions. Let ",
 Cell[BoxData[
  FormBox[
   StyleBox["s",
    FontWeight->"Bold"], TraditionalForm]]],
 " be a matrix with elements ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "\[Alpha]"], "=", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["s", "~"], "l"], "(", 
     RowBox[{
      SubscriptBox["k", "i"], "r"}], ")"}]}], TraditionalForm]]],
 ".  Here, ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]]],
 " is a collective index ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"(", 
     RowBox[{"i", ",", "l", ",", "m"}], ")"}]}], TraditionalForm]]],
 ". Let ",
 Cell[BoxData[
  FormBox[
   StyleBox["c",
    FontWeight->"Bold"], TraditionalForm]]],
 " be a diagonal matrix with elements ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["c", "~"], "l"], "(", 
    RowBox[{
     SubscriptBox["k", "i"], "r"}], ")"}], TraditionalForm]]],
 ".  Similarly for ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["f",
     FontWeight->"Bold"], 
    RowBox[{"+", 
     RowBox[{"/", "-"}]}]], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.760203446985486*^9, 3.760203631586143*^9}, {
  3.760205115229562*^9, 3.760205118920753*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    StyleBox["f",
     FontWeight->"Bold"], 
    RowBox[{"(", "+", ")"}]], "=", " ", 
   RowBox[{"(", 
    RowBox[{
     StyleBox["c",
      FontWeight->"Bold"], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      StyleBox["s",
       FontWeight->"Bold"]}]}], ")"}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.760203640775734*^9, 3.760203686526073*^9}, {
  3.7602038951261177`*^9, 3.7602038974361486`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    StyleBox["f",
     FontWeight->"Bold"], 
    RowBox[{"(", "-", ")"}]], "=", " ", 
   RowBox[{"(", 
    RowBox[{
     StyleBox["c",
      FontWeight->"Bold"], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      StyleBox["s",
       FontWeight->"Bold"]}]}], ")"}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.760203689611001*^9, 3.760203693709803*^9}, {
  3.760203899252474*^9, 3.76020390125996*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Asymptotic boundary conditions and interrelations between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", ",", "K", ",", "T"}], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.7600350929110203`*^9, 3.760035100886499*^9}, {
  3.7600949512657833`*^9, 3.760094970845416*^9}, {3.7602048061038427`*^9, 
  3.7602048170541058`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Our full solution must satisfy the coupled system", "Text",
 CellChangeTimes->{{3.760035104606234*^9, 3.760035119253791*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox["\[HBar]", "2"]}], 
        RowBox[{"2", "\[Mu]"}]], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{
          SubscriptBox["u", 
           RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["r", "2"]}]]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], 
        RowBox[{"l", "(", 
         RowBox[{"l", "+", "1"}], ")"}], 
        RowBox[{
         SubscriptBox["u", 
          RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
       RowBox[{"2", "\[Mu]", " ", 
        SuperscriptBox["r", "2"]}]]}], ")"}], "+", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", ",", 
       RowBox[{"l", "'"}], ",", 
       RowBox[{"m", "'"}]}]], 
     RowBox[{
      RowBox[{
       SubscriptBox["V", 
        RowBox[{
         RowBox[{"i", " ", "l", " ", "m"}], ",", " ", 
         RowBox[{"j", " ", 
          RowBox[{"l", "'"}], 
          RowBox[{"m", "'"}]}]}]], "(", "r", ")"}], 
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"j", " ", 
         RowBox[{"l", "'"}], " ", 
         RowBox[{"m", "'"}]}]], "(", "r", ")"}]}]}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"E", "-", 
      SubscriptBox["E", "i"]}], ")"}], " ", 
    RowBox[{
     SubscriptBox["u", 
      RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{3.760035112656823*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "For scattering states from channel ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "\[Rule]", "j"}], TraditionalForm]]],
 " we are now ready to write the generalization of the single-channel \
expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["u", "l"], "(", "r", ")"}], "\[Rule]", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       OverscriptBox["s", "~"], "l"], "(", 
      RowBox[{"k", " ", "r"}], ")"}], "+", 
     RowBox[{"tan", " ", 
      SubscriptBox["\[Delta]", "l"], " ", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["c", "~"], "l"], "(", 
       RowBox[{"k", " ", "r"}], ")"}]}]}]}], TraditionalForm]]],
 ".  We consider going from a particular ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"i", ",", "l", ",", "m"}], ")"}], "\[Rule]", " ", 
    RowBox[{"(", 
     RowBox[{"j", ",", 
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}], ")"}]}], TraditionalForm]]],
 " in terms of standing waves, defining the \[OpenCurlyDoubleQuote]K-matrix\
\[CloseCurlyDoubleQuote]:"
}], "Text",
 CellChangeTimes->{{3.760094947201357*^9, 3.76009494763983*^9}, {
  3.7600949783251753`*^9, 3.760095014184752*^9}, {3.760095086406837*^9, 
  3.7600951801428537`*^9}, {3.760095232983882*^9, 3.760095271078177*^9}, {
  3.760096177966886*^9, 3.760096192895945*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["u", 
     RowBox[{"j", ",", 
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}], 
     RowBox[{"(", 
      RowBox[{"i", ",", "l", ",", "m"}], ")"}]], "(", 
    RowBox[{
     SubscriptBox["k", "j"], "r"}], ")"}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"l", "'"}], ",", "l"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"m", "'"}], ",", "m"}]], 
     RowBox[{
      SubscriptBox[
       OverscriptBox["s", "~"], "l"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["K", 
      RowBox[{"i", ",", "l", ",", 
       RowBox[{"m", ";", "j"}], ",", 
       RowBox[{"l", "'"}], ",", 
       RowBox[{"m", "'"}]}]], 
     RowBox[{
      SubscriptBox[
       OverscriptBox["c", "~"], 
       RowBox[{"l", "'"}]], "(", 
      RowBox[{
       SubscriptBox["k", "j"], "r"}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760095273017161*^9, 3.760095360357317*^9}, {
  3.760095391785091*^9, 3.760095420701791*^9}, {3.7600959742263823`*^9, 
  3.760095975438555*^9}, {3.760143937520082*^9, 3.7601439454435463`*^9}, {
  3.760147140259832*^9, 3.760147143825282*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Think of the ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["u", 
    RowBox[{"j", ",", 
     RowBox[{"l", "'"}], ",", 
     RowBox[{"m", "'"}]}], 
    RowBox[{"(", 
     RowBox[{"i", ",", "l", ",", "m"}], ")"}]], TraditionalForm]]],
 " as components of a matrix, ",
 Cell[BoxData[
  FormBox[
   StyleBox["U",
    FontWeight->"Bold"], TraditionalForm]]],
 ".  In matrix notation,"
}], "Text",
 CellChangeTimes->{{3.760142255125342*^9, 3.760142366742607*^9}, {
   3.76014381909798*^9, 3.7601438630083838`*^9}, 3.760143897333557*^9, {
   3.7601460604771214`*^9, 3.760146070306942*^9}, 3.7601461103696213`*^9, {
   3.760182430762789*^9, 3.760182455971253*^9}, 3.760182910045197*^9, {
   3.7601856355041437`*^9, 3.760185646215033*^9}, {3.760203729135974*^9, 
   3.760203750305647*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["U",
    FontWeight->"Bold"], "=", 
   RowBox[{
    StyleBox["s",
     FontWeight->"Bold"], "+", 
    RowBox[{
     StyleBox["K",
      FontWeight->"Bold"], " ", 
     StyleBox["c",
      FontWeight->"Bold"]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602037528591003`*^9, 3.760203766793735*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
Alternatively, in terms of incoming and outgoing waves one defines the \
\[OpenCurlyDoubleQuote]S-matrix\[CloseCurlyDoubleQuote], \
\>", "Text",
 CellChangeTimes->{{3.7600959786886597`*^9, 3.760095991342005*^9}, {
  3.760096156735425*^9, 3.760096161728857*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Phi]", 
     RowBox[{"j", ",", 
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}], 
     RowBox[{"(", 
      RowBox[{"i", ",", "l", ",", "m"}], ")"}]], "(", 
    RowBox[{
     SubscriptBox["k", "j"], "r"}], ")"}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"l", "'"}], ",", "l"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"m", "'"}], ",", "m"}]], 
     RowBox[{
      SubscriptBox[
       OverscriptBox[
        SuperscriptBox["f", "-"], "~"], "l"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}], ")"}]}], "-", 
    RowBox[{
     SubscriptBox["S", 
      RowBox[{"i", ",", "l", ",", 
       RowBox[{"m", ";", "j"}], ",", 
       RowBox[{"l", "'"}], ",", 
       RowBox[{"m", "'"}]}]], 
     RowBox[{
      SubscriptBox[
       OverscriptBox[
        SuperscriptBox["f", "+"], "~"], 
       RowBox[{"l", "'"}]], "(", 
      RowBox[{
       SubscriptBox["k", "j"], "r"}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760096006080055*^9, 3.760096008213415*^9}, {
  3.760096048083317*^9, 3.76009609141814*^9}, {3.7601037042042103`*^9, 
  3.760103704272853*^9}, {3.760143928460938*^9, 3.760143957686551*^9}, {
  3.7601471641144543`*^9, 3.7601471693830748`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "These comprise elements of a matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[CapitalPhi]",
    FontWeight->"Bold"], TraditionalForm]],
  CellChangeTimes->{{3.760147249895995*^9, 3.76014728709344*^9}, {
    3.760147323968196*^9, 3.76014734333668*^9}, {3.7601473834202433`*^9, 
    3.760147414624175*^9}, {3.760147444980517*^9, 3.760147522699058*^9}, {
    3.760147555091402*^9, 3.7601476018923807`*^9}, 3.760147639384357*^9}],
 ", which in matrix notation reads: "
}], "Text",
 CellChangeTimes->{{3.760144266847475*^9, 3.76014426926722*^9}, {
   3.7601461347417793`*^9, 3.7601461383821793`*^9}, 3.76018236350309*^9, {
   3.7602037853861313`*^9, 3.760203807687446*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["\[CapitalPhi]",
    FontWeight->"Bold"], "=", 
   RowBox[{
    SuperscriptBox[
     StyleBox["f",
      FontWeight->"Bold"], "-"], "-", 
    RowBox[{
     StyleBox["S",
      FontWeight->"Bold"], " ", 
     SuperscriptBox[
      StyleBox["f",
       FontWeight->"Bold"], "+"]}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.76020381014501*^9, 3.7602038201829987`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Substituting for ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 "\[CloseCurlyQuote]s"
}], "Text",
 CellChangeTimes->{{3.7602038678960123`*^9, 3.7602038766687317`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["\[CapitalPhi]",
    FontWeight->"Bold"], "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       StyleBox["c",
        FontWeight->"Bold"], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        StyleBox["s",
         FontWeight->"Bold"]}]}], ")"}], "-", 
     RowBox[{
      StyleBox["S",
       FontWeight->"Bold"], "  ", 
      RowBox[{"(", 
       RowBox[{
        StyleBox["c",
         FontWeight->"Bold"], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         StyleBox["s",
          FontWeight->"Bold"]}]}], ")"}]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      StyleBox["s",
       FontWeight->"Bold"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      StyleBox["S",
       FontWeight->"Bold"], " ", 
      StyleBox["s",
       FontWeight->"Bold"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        StyleBox["S",
         FontWeight->"Bold"]}], ")"}], " ", 
      StyleBox["c",
       FontWeight->"Bold"]}]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760203882767173*^9, 3.760203937562543*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["\[CapitalPhi]",
    FontWeight->"Bold"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        StyleBox["S",
         FontWeight->"Bold"]}], 
       StyleBox[")",
        FontWeight->"Bold"]}], " ", 
      StyleBox["s",
       FontWeight->"Bold"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        StyleBox["S",
         FontWeight->"Bold"]}], ")"}], " ", 
      StyleBox["c",
       FontWeight->"Bold"]}]}], "=", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       StyleBox["S",
        FontWeight->"Bold"]}], 
      StyleBox[")",
       FontWeight->"Bold"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       StyleBox["s",
        FontWeight->"Bold"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           StyleBox["S",
            FontWeight->"Bold"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          StyleBox["S",
           FontWeight->"Bold"]}], ")"}], " ", 
        StyleBox["c",
         FontWeight->"Bold"]}]}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.76020395278028*^9, 3.760204003024132*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{" ", 
   RowBox[{
    StyleBox["\[CapitalPhi]",
     FontWeight->"Bold"], 
    StyleBox["=",
     FontWeight->"Plain"], 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       StyleBox["S",
        FontWeight->"Bold"]}], 
      StyleBox[")",
       FontWeight->"Bold"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       StyleBox["s",
        FontWeight->"Bold"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           StyleBox["S",
            FontWeight->"Bold"]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           StyleBox["S",
            FontWeight->"Bold"]}], ")"}]], " ", 
        StyleBox["c",
         FontWeight->"Bold"]}]}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760147249895995*^9, 3.76014728709344*^9}, {
   3.760147323968196*^9, 3.76014734333668*^9}, {3.7601473834202433`*^9, 
   3.760147414624175*^9}, {3.760147444980517*^9, 3.760147522699058*^9}, {
   3.760147555091402*^9, 3.7601476018923807`*^9}, 3.760147639384357*^9, 
   3.760203866506003*^9, {3.760204030608465*^9, 3.760204052805923*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["So evidently, ", "Text",
 CellChangeTimes->{{3.76020405640108*^9, 3.760204059197353*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["\[CapitalPhi]",
    FontWeight->"Bold"], "=", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["1",
       FontWeight->"Bold"], "+", 
      StyleBox["S",
       FontWeight->"Bold"]}], ")"}], " ", 
    StyleBox["U",
     FontWeight->"Bold"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760204061246966*^9, 3.760204067797324*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["with", "Text",
 CellChangeTimes->{{3.760204069689438*^9, 3.7602040709401093`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["K",
    FontWeight->"Bold"], "=", 
   RowBox[{"\[ImaginaryI]", " ", 
    FractionBox[
     RowBox[{
      StyleBox["1",
       FontWeight->"Bold"], "-", 
      StyleBox["S",
       FontWeight->"Bold"]}], 
     RowBox[{
      StyleBox["1",
       FontWeight->"Bold"], "+", 
      StyleBox["S",
       FontWeight->"Bold"]}]]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760204069689438*^9, 3.760204088564311*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
There is yet another alternative, in terms of the \
\[OpenCurlyDoubleQuote]T-matrix\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.760096135956216*^9, 3.760096151696534*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["w", 
     RowBox[{"j", ",", 
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}], 
     RowBox[{"(", 
      RowBox[{"i", ",", "l", ",", "m"}], ")"}]], "(", 
    RowBox[{
     SubscriptBox["k", "j"], "r"}], ")"}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"l", "'"}], ",", "l"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"m", "'"}], ",", "m"}]], 
     RowBox[{
      SubscriptBox[
       OverscriptBox["s", "~"], "l"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["T", 
      RowBox[{"j", ",", 
       RowBox[{"l", "'"}], ",", 
       RowBox[{
        RowBox[{"m", "'"}], ";", "i"}], ",", "l", ",", "m"}]], 
     RowBox[{
      SubscriptBox[
       OverscriptBox[
        SuperscriptBox["f", "+"], "~"], 
       RowBox[{"l", "'"}]], "(", 
      RowBox[{
       SubscriptBox["k", "j"], "r"}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760096206015019*^9, 3.760096216435481*^9}, {
  3.760143974603087*^9, 3.760144022187563*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["This reads in matrix notation", "Text",
 CellChangeTimes->{{3.760204138865304*^9, 3.760204142659081*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["w",
    FontWeight->"Bold"], 
   StyleBox["=",
    FontSize->14,
    FontWeight->"Plain"], 
   RowBox[{
    RowBox[{
     StyleBox["s",
      FontSize->14,
      FontWeight->"Bold"], 
     StyleBox["+",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["T",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      SuperscriptBox[
       StyleBox["f",
        FontWeight->"Bold"], "+"]}]}], "=", 
    RowBox[{
     RowBox[{
      StyleBox["s",
       FontWeight->"Bold"], "+", 
      RowBox[{
       StyleBox["T",
        FontWeight->"Bold"], " ", 
       StyleBox["c",
        FontWeight->"Bold"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       StyleBox["T",
        FontWeight->"Bold"], " ", 
       StyleBox["s",
        FontWeight->"Bold"]}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          StyleBox["1",
           FontWeight->"Bold"], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           StyleBox["T",
            FontWeight->"Bold"]}]}], ")"}], 
        StyleBox["s",
         FontWeight->"Bold"]}], "+", 
       RowBox[{
        StyleBox["T",
         FontWeight->"Bold"], " ", 
        StyleBox["c",
         FontWeight->"Bold"]}]}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         StyleBox["1",
          FontWeight->"Bold"], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          StyleBox["T",
           FontWeight->"Bold"]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         StyleBox["s",
          FontWeight->"Bold"], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             StyleBox["1",
              FontWeight->"Bold"], "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              StyleBox["T",
               FontWeight->"Bold"]}]}], ")"}], 
           RowBox[{"-", "1"}]], 
          StyleBox["T",
           FontWeight->"Bold"], " ", 
          StyleBox["c",
           FontWeight->"Bold"]}]}], ")"}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760204145932652*^9, 3.760204178097989*^9}, {
  3.760204220964953*^9, 3.760204287623247*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Evidently,", "Text",
 CellChangeTimes->{{3.7602042958809557`*^9, 3.76020430150668*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["w",
    FontWeight->"Bold"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox["1",
       FontWeight->"Bold"], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       StyleBox["T",
        FontWeight->"Bold"]}]}], ")"}], " ", 
    StyleBox["U",
     FontWeight->"Bold"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760204307604505*^9, 3.760204324862282*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["and", "Text",
 CellChangeTimes->{{3.7602043263774433`*^9, 3.7602043265238123`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["K",
    FontWeight->"Bold"], "=", 
   FractionBox[
    StyleBox["T",
     FontWeight->"Bold"], 
    RowBox[{
     StyleBox["1",
      FontWeight->"Bold"], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      StyleBox["T",
       FontWeight->"Bold"]}]}]]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602043479989777`*^9, 3.760204358005107*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["This suggests also that", "Text",
 CellChangeTimes->{{3.76020469054338*^9, 3.7602046946985903`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["S",
    FontWeight->"Bold"], "=", 
   FractionBox[
    RowBox[{
     StyleBox["1",
      FontWeight->"Bold"], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      StyleBox["K",
       FontWeight->"Bold"]}]}], 
    RowBox[{
     StyleBox["1",
      FontWeight->"Bold"], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      StyleBox["K",
       FontWeight->"Bold"]}]}]]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760204697436102*^9, 3.760204726257288*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["and", "Text",
 CellChangeTimes->{{3.760204790783786*^9, 3.760204791018237*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["T",
    FontWeight->"Bold"], "=", 
   FractionBox[
    RowBox[{
     StyleBox["S",
      FontWeight->"Bold"], "-", 
     StyleBox["1",
      FontWeight->"Bold"]}], 
    RowBox[{"2", "\[ImaginaryI]"}]]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760204697436102*^9, 3.7602047516691933`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[CellGroupData[{

Cell[TextData[{
 "Relation of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " "
}], "Subsubsection",
 CellChangeTimes->{{3.760102534451578*^9, 3.760102549868701*^9}, {
  3.760108768355846*^9, 3.760108775443097*^9}, {3.760204848822085*^9, 
  3.760204853495871*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Now finally, we determine the scattering amplitude ",
 Cell[BoxData[
  FormBox[
   StyleBox["f",
    FontWeight->"Bold"], TraditionalForm]]],
 " in terms of these scattering matrices.  We require,"
}], "Text",
 CellChangeTimes->{{3.760109180925919*^9, 3.760109211377472*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Recall that our full wavefunction is expected to behave as:", "Text",
 CellChangeTimes->{{3.760109404872404*^9, 3.7601094208677483`*^9}, {
  3.7602049589351587`*^9, 3.760204959863513*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[CapitalPsi]", "(", 
    RowBox[{
     StyleBox["r",
      FontWeight->"Bold"], ",", 
     StyleBox["\[Xi]",
      FontWeight->"Bold"]}], ")"}], 
   OverscriptBox["\[RightArrow]", 
    RowBox[{"r", "\[Rule]", " ", "\[Infinity]"}]], 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["k", "i"], " ", "z"}]]}], "+", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", "\[Element]", "open"}]], " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["f", 
        RowBox[{"i", "\[Rule]", "j"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], " ", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["k", "j"], " ", "r"}]], "r"], 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "j"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}], " "}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760109404872404*^9, 3.7601094208677483`*^9}, {
  3.7602049589351587`*^9, 3.760204963029705*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["So,", "Text",
 CellChangeTimes->{{3.760109427962612*^9, 3.760109428736232*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "\[Rule]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["k", "i"], " ", "z"}]]}], "+", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"i", "\[Rule]", "j"}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], " ", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["k", "j"], " ", "r"}]], "r"]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760109432103858*^9, 3.7601094683752527`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Let\[CloseCurlyQuote]s first look at the Rayleigh formula for the plane \
wave:", "Text",
 CellChangeTimes->{{3.7602737303160753`*^9, 3.760273753478208*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     SubscriptBox["k", "i"], " ", "z"}]], "\[Rule]", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", "l"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", "l"], "(", 
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}], ")"}], 
     RowBox[{
      SubscriptBox["j", "l"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}], ")"}], 
     RowBox[{
      SubscriptBox["P", "l"], "(", 
      RowBox[{"cos", " ", "\[Theta]"}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760205299962483*^9, 3.76020533996618*^9}, {
  3.760273749200626*^9, 3.760273781989345*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "I want to know how this looks in terms of my energy normalized solutions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["c", "~"], "l"], " ", "and", " ", 
    SubscriptBox[
     OverscriptBox["s", "~"], "l"]}], TraditionalForm]]],
 ", so let\[CloseCurlyQuote]s multiply and divide by the energy normalization \
factor, and also by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "i"], "r"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.7602738213569*^9, 3.7602738978426523`*^9}, {
  3.760273955089857*^9, 3.760273960659791*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     SubscriptBox["k", "i"], " ", "z"}]], "=", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
       SubscriptBox["k", "i"]}], 
      RowBox[{"2", "\[Mu]"}]]], 
    FractionBox["1", 
     RowBox[{
      SubscriptBox["k", "i"], "r"}]], " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "l"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", "l"], "(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      OverscriptBox[
       RowBox[{
        SqrtBox[
         FractionBox[
          RowBox[{"2", "\[Mu]"}], 
          RowBox[{
           SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
           SubscriptBox["k", "i"]}]]], 
        SubscriptBox["k", "i"], "r", 
        SubscriptBox["j", "l"], 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}]}], 
       OverscriptBox["\[OverBrace]", 
        RowBox[{"            ", 
         RowBox[{"this", " ", "is", " ", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["s", "~"], "l"], "(", 
           RowBox[{
            SubscriptBox["k", "i"], "r"}], ")"}], "                "}]}]]], 
      RowBox[{
       SubscriptBox["P", "l"], "(", 
       RowBox[{"cos", " ", "\[Theta]"}], ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760273923792293*^9, 3.760274013158245*^9}, {
  3.760274375044796*^9, 3.760274375308237*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     SubscriptBox["k", "i"], " ", "z"}]], "=", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
       SubscriptBox["k", "i"]}], 
      RowBox[{"2", "\[Mu]"}]]], 
    FractionBox["1", 
     RowBox[{
      SubscriptBox["k", "i"], "r"}]], " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "l"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", "l"], "(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{
       SubscriptBox[
        OverscriptBox["s", "~"], "l"], "(", 
       RowBox[{
        SubscriptBox["k", "i"], "r"}], ")"}], "  ", 
      RowBox[{
       SubscriptBox["P", "l"], "(", 
       RowBox[{"cos", " ", "\[Theta]"}], ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.76027454565171*^9, 3.760274554189081*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     SubscriptBox["k", "i"], " ", "z"}]], "=", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
       SubscriptBox["k", "i"]}], 
      RowBox[{"2", "\[Mu]"}]]], 
    FractionBox["1", 
     RowBox[{
      SubscriptBox["k", "i"], "r"}]], " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "l"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", "l"], "(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      FractionBox["1", 
       RowBox[{"2", "\[ImaginaryI]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox[
          OverscriptBox["f", "~"], "l", "+"], "(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}], " ", "-", 
        RowBox[{
         SubsuperscriptBox[
          OverscriptBox["f", "~"], "l", "-"], "(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["P", "l"], "(", 
       RowBox[{"cos", " ", "\[Theta]"}], ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760274557907894*^9, 3.7602746010882607`*^9}, {
  3.760275116314993*^9, 3.76027512031404*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Now use ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", "l"], "=", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"4", "\[Pi]"}], 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}]]], 
     SubscriptBox["Y", 
      RowBox[{"l", ",", "0"}]]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.76027467966628*^9, 3.760274690474345*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     SubscriptBox["k", "i"], " ", "z"}]], "=", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
       SubscriptBox["k", "i"]}], 
      RowBox[{"2", "\[Mu]"}]]], 
    FractionBox["1", 
     RowBox[{"2", 
      SubscriptBox["k", "i"], "r"}]], " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "l"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", 
        RowBox[{"l", "-", "1"}]], "(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox[
          OverscriptBox["f", "~"], "l", "+"], "(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}], " ", "-", 
        RowBox[{
         SubsuperscriptBox[
          OverscriptBox["f", "~"], "l", "-"], "(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}]}], ")"}], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"4", "\[Pi]"}], 
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}]]], 
      SubscriptBox["Y", 
       RowBox[{"l", ",", "0"}]]}]}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{
  3.760274627811345*^9, {3.760274661464613*^9, 3.760274695208372*^9}, 
   3.7602751326284733`*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     SubscriptBox["k", "i"], " ", "z"}]], "=", 
   RowBox[{
    RowBox[{"-", "\[Pi]\[HBar]"}], 
    SqrtBox[
     FractionBox["1", 
      RowBox[{"2", "\[Mu]", " ", 
       SubscriptBox["k", "i"]}]]], 
    FractionBox["1", "r"], " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "l"], 
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", 
       RowBox[{"l", "-", "1"}]], 
      SqrtBox[
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}]], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", ",", "0"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["f", "l", "-"], "(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}], "-", 
        RowBox[{
         SubsuperscriptBox["f", "l", "+"], "(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}]}], " ", ")"}], " "}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760274703237344*^9, 3.760274765818665*^9}, {
  3.7602752374472303`*^9, 3.760275254061245*^9}, {3.760284039408506*^9, 
  3.760284042999899*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Okay, now what we have for the channel wave function is", "Text",
 CellChangeTimes->{{3.760274985321897*^9, 3.760274993684248*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "\[Rule]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["k", "i"], " ", "z"}]]}], "+", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"i", "\[Rule]", "j"}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], " ", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["k", "j"], " ", "r"}]], "r"]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{3.760274995208701*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "\[Rule]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], "[", " ", 
     RowBox[{"\[Pi]\[HBar]", 
      SqrtBox[
       FractionBox["1", 
        RowBox[{"2", "\[Mu]", " ", 
         SubscriptBox["k", "i"]}]]], 
      FractionBox["1", "r"], " ", 
      RowBox[{
       UnderscriptBox["\[Sum]", "l"], 
       RowBox[{
        SuperscriptBox["\[ImaginaryI]", 
         RowBox[{"l", "-", "1"}]], 
        SqrtBox[
         RowBox[{
          RowBox[{"2", "l"}], "+", "1"}]], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{"l", ",", "0"}]], "(", 
         RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SubsuperscriptBox[
             OverscriptBox["f", "~"], "l", "-"], "(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}]}], "+", 
          RowBox[{
           SubsuperscriptBox[
            OverscriptBox["f", "~"], "l", "+"], "(", 
           RowBox[{
            SubscriptBox["k", "i"], "r"}], ")"}]}], " ", ")"}]}]}]}], " ", 
     "]"}], "+", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"i", "\[Rule]", "j"}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], " ", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["k", "j"], " ", "r"}]], "r"]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602775900526857`*^9, 3.760277604458673*^9}, {
  3.760283409446114*^9, 3.760283413453794*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Recall that we expanded ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.7602790458817863`*^9, 3.760279064121889*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}]], 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"j", " ", 
         RowBox[{"l", "'"}], " ", 
         RowBox[{"m", "'"}]}]], "(", "r", ")"}], "r"], 
     RowBox[{
      SubscriptBox["Y", 
       RowBox[{
        RowBox[{"l", "'"}], " ", 
        RowBox[{"m", "'"}]}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{
  3.760279091843136*^9, {3.76028280918167*^9, 3.760282835890572*^9}, {
   3.760284161737555*^9, 3.7602841693607597`*^9}}],

Cell[TextData[{
 "and let\[CloseCurlyQuote]s say we want to construct ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", "r", ")"}], TraditionalForm]]],
 " out of our functions "
}], "Text",
 CellChangeTimes->{{3.7602750032147903`*^9, 3.760275027204349*^9}, {
  3.760284180320271*^9, 3.7602841864323807`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Phi]", 
     RowBox[{"j", ",", 
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}], 
     RowBox[{"(", 
      RowBox[{"i", ",", "l", ",", "0"}], ")"}]], "(", 
    RowBox[{
     SubscriptBox["k", "j"], "r"}], ")"}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"l", "'"}], ",", "l"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"m", "'"}], ",", "0"}]], 
     RowBox[{
      SubscriptBox[
       OverscriptBox[
        SuperscriptBox["f", "-"], "~"], "l"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}], ")"}]}], "-", 
    RowBox[{
     SubscriptBox["S", 
      RowBox[{"i", ",", "l", ",", 
       RowBox[{"0", ";", "j"}], ",", 
       RowBox[{"l", "'"}], ",", 
       RowBox[{"m", "'"}]}]], 
     RowBox[{
      SubscriptBox[
       OverscriptBox[
        SuperscriptBox["f", "+"], "~"], 
       RowBox[{"l", "'"}]], "(", 
      RowBox[{
       SubscriptBox["k", "j"], "r"}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{
  3.7602750411425123`*^9, {3.760277273569232*^9, 3.760277280909954*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "We can propose a sum with the same coefficients used to construct ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "k", " ", "z"}]], TraditionalForm]]],
 ".  Consider the expression:"
}], "Text",
 CellChangeTimes->{{3.7602836825297337`*^9, 3.7602836858315353`*^9}, {
  3.76028419616757*^9, 3.760284243573804*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{"-", "\[Pi]\[HBar]"}], 
    SqrtBox[
     FractionBox["1", 
      RowBox[{"2", "\[Mu]", " ", 
       SubscriptBox["k", "i"]}]]], 
    RowBox[{
     UnderscriptBox["\[Sum]", "l"], 
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", 
       RowBox[{"l", "-", "1"}]], 
      SqrtBox[
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}]], 
      RowBox[{
       UnderscriptBox["\[Sum]", 
        RowBox[{
         RowBox[{"l", "'"}], ",", 
         RowBox[{"m", "'"}]}]], 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{"j", ",", "i"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{
             RowBox[{"l", "'"}], ",", "l"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{
             RowBox[{"m", "'"}], ",", "0"}]], 
           RowBox[{
            SubscriptBox[
             OverscriptBox[
              SuperscriptBox["f", "-"], "~"], "l"], "(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}]}], "-", 
          RowBox[{
           SubscriptBox["S", 
            RowBox[{"i", ",", "l", ",", 
             RowBox[{"0", ";", "j"}], ",", 
             RowBox[{"l", "'"}], ",", 
             RowBox[{"m", "'"}]}]], 
           RowBox[{
            SubscriptBox[
             OverscriptBox[
              SuperscriptBox["f", "+"], "~"], 
             RowBox[{"l", "'"}]], "(", 
            RowBox[{
             SubscriptBox["k", "j"], "r"}], ")"}]}]}], "r"], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{
           RowBox[{"l", "'"}], " ", 
           RowBox[{"m", "'"}]}]], "(", 
         RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602833173286533`*^9, 3.76028333946139*^9}, {
   3.760283379390712*^9, 3.760283398833555*^9}, 3.760283687848731*^9, 
   3.760283945806292*^9, {3.76028401739532*^9, 3.760284023346409*^9}, {
   3.760284069529242*^9, 3.760284151698102*^9}, {3.76028424683785*^9, 
   3.760284248317534*^9}, {3.76028464239159*^9, 3.760284642766362*^9}}],

Cell[TextData[{
 "add and subtract ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     OverscriptBox["f", "~"], "l", "+"], "(", 
    RowBox[{
     SubscriptBox["k", "i"], "r"}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.760283452359058*^9, 3.760283521076775*^9}}],
 " to the first term"
}], "Text",
 CellChangeTimes->{{3.7602836248321867`*^9, 3.760283631785784*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{"-", "\[Pi]\[HBar]"}], 
    SqrtBox[
     FractionBox["1", 
      RowBox[{"2", "\[Mu]", " ", 
       SubscriptBox["k", "i"]}]]], 
    RowBox[{
     UnderscriptBox["\[Sum]", "l"], 
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", 
       RowBox[{"l", "-", "1"}]], 
      SqrtBox[
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}]], 
      RowBox[{
       UnderscriptBox["\[Sum]", 
        RowBox[{
         RowBox[{"l", "'"}], ",", 
         RowBox[{"m", "'"}]}]], 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{"j", ",", "i"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{
             RowBox[{"l", "'"}], ",", "l"}]], 
           RowBox[{
            SubscriptBox["\[Delta]", 
             RowBox[{
              RowBox[{"m", "'"}], ",", "0"}]], "(", 
            RowBox[{
             RowBox[{
              SubsuperscriptBox[
               OverscriptBox["f", "~"], "l", "-"], "(", 
              RowBox[{
               SubscriptBox["k", "i"], "r"}], ")"}], "-", 
             RowBox[{
              SubsuperscriptBox[
               OverscriptBox["f", "~"], "l", "+"], "(", 
              RowBox[{
               SubscriptBox["k", "i"], "r"}], ")"}], "+", 
             RowBox[{
              SubsuperscriptBox[
               OverscriptBox["f", "~"], "l", "+"], "(", 
              RowBox[{
               SubscriptBox["k", "i"], "r"}], ")"}]}], ")"}]}], "-", 
          RowBox[{
           SubscriptBox["S", 
            RowBox[{"i", ",", "l", ",", 
             RowBox[{"0", ";", "j"}], ",", 
             RowBox[{"l", "'"}], ",", 
             RowBox[{"m", "'"}]}]], 
           RowBox[{
            SubscriptBox[
             OverscriptBox[
              SuperscriptBox["f", "+"], "~"], 
             RowBox[{"l", "'"}]], "(", 
            RowBox[{
             SubscriptBox["k", "j"], "r"}], ")"}]}]}], "r"], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{
           RowBox[{"l", "'"}], " ", 
           RowBox[{"m", "'"}]}]], "(", 
         RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602842830041723`*^9, 3.760284299758829*^9}, {
  3.76028464653421*^9, 3.760284647773952*^9}}],

Cell["move one of those over to the second term,", "Text",
 CellChangeTimes->{{3.760283636036993*^9, 3.760283643593513*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{"-", "\[Pi]\[HBar]"}], 
    SqrtBox[
     FractionBox["1", 
      RowBox[{"2", "\[Mu]", " ", 
       SubscriptBox["k", "i"]}]]], 
    RowBox[{
     UnderscriptBox["\[Sum]", "l"], 
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", 
       RowBox[{"l", "-", "1"}]], 
      SqrtBox[
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}]], 
      RowBox[{
       UnderscriptBox["\[Sum]", 
        RowBox[{
         RowBox[{"l", "'"}], ",", 
         RowBox[{"m", "'"}]}]], 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{"j", ",", "i"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{
             RowBox[{"l", "'"}], ",", "l"}]], 
           RowBox[{
            SubscriptBox["\[Delta]", 
             RowBox[{
              RowBox[{"m", "'"}], ",", "0"}]], "(", 
            RowBox[{
             RowBox[{
              SubsuperscriptBox[
               OverscriptBox["f", "~"], "l", "-"], "(", 
              RowBox[{
               SubscriptBox["k", "i"], "r"}], ")"}], "-", 
             RowBox[{
              SubsuperscriptBox[
               OverscriptBox["f", "~"], "l", "+"], "(", 
              RowBox[{
               SubscriptBox["k", "i"], "r"}], ")"}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["S", 
              RowBox[{"i", ",", "l", ",", 
               RowBox[{"0", ";", "j"}], ",", 
               RowBox[{"l", "'"}], ",", 
               RowBox[{"m", "'"}]}]], "-", 
             RowBox[{
              SubscriptBox["\[Delta]", 
               RowBox[{"j", ",", "i"}]], 
              SubscriptBox["\[Delta]", 
               RowBox[{"l", ",", 
                RowBox[{"l", "'"}]}]], 
              SubscriptBox["\[Delta]", 
               RowBox[{"m", ",", 
                RowBox[{"m", "'"}]}]]}]}], ")"}], 
           RowBox[{
            SubscriptBox[
             OverscriptBox[
              SuperscriptBox["f", "+"], "~"], 
             RowBox[{"l", "'"}]], "(", 
            RowBox[{
             SubscriptBox["k", "j"], "r"}], ")"}]}]}], "r"], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{
           RowBox[{"l", "'"}], " ", 
           RowBox[{"m", "'"}]}]], "(", 
         RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602835624033937`*^9, 3.760283597144454*^9}, {
   3.760283700495584*^9, 3.7602837199853487`*^9}, 3.7602839415588837`*^9, {
   3.7602843248765383`*^9, 3.7602843706567593`*^9}, {3.76028465146203*^9, 
   3.760284651653924*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Pi]\[HBar]"}], 
     SqrtBox[
      FractionBox["1", 
       RowBox[{"2", "\[Mu]", " ", 
        SubscriptBox["k", "i"]}]]], 
     FractionBox["1", "r"], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       UnderscriptBox["\[Sum]", "l"], 
       RowBox[{
        SuperscriptBox["\[ImaginaryI]", 
         RowBox[{"l", "-", "1"}]], 
        SqrtBox[
         RowBox[{
          RowBox[{"2", "l"}], "+", "1"}]], 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Delta]", 
           RowBox[{"j", ",", "i"}]], 
          SubscriptBox["\[Delta]", 
           RowBox[{
            RowBox[{"l", "'"}], ",", "l"}]], 
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{
             RowBox[{"m", "'"}], ",", "0"}]], "(", 
           RowBox[{
            RowBox[{
             SubsuperscriptBox[
              OverscriptBox["f", "~"], "l", "-"], "(", 
             RowBox[{
              SubscriptBox["k", "i"], "r"}], ")"}], "-", 
            RowBox[{
             SubsuperscriptBox[
              OverscriptBox["f", "~"], "l", "+"], "(", 
             RowBox[{
              SubscriptBox["k", "i"], "r"}], ")"}]}], ")"}]}], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{
           RowBox[{"l", "'"}], " ", 
           RowBox[{"m", "'"}]}]], "(", 
         RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}]}], "+", 
    RowBox[{"\[Pi]\[HBar]", 
     SqrtBox[
      FractionBox["1", 
       RowBox[{"2", "\[Mu]", " ", 
        SubscriptBox["k", "i"]}]]], 
     FractionBox["1", "r"], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       UnderscriptBox["\[Sum]", "l"], 
       RowBox[{
        SuperscriptBox["\[ImaginaryI]", 
         RowBox[{"l", "-", "1"}]], 
        SqrtBox[
         RowBox[{
          RowBox[{"2", "l"}], "+", "1"}]], 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["S", 
           RowBox[{"i", ",", "l", ",", 
            RowBox[{"0", ";", "j"}], ",", 
            RowBox[{"l", "'"}], ",", 
            RowBox[{"m", "'"}]}]], "-", 
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{"j", ",", "i"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{"l", ",", 
             RowBox[{"l", "'"}]}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{"m", ",", 
             RowBox[{"m", "'"}]}]]}]}], ")"}], 
        RowBox[{
         SubscriptBox[
          OverscriptBox[
           SuperscriptBox["f", "+"], "~"], 
          RowBox[{"l", "'"}]], "(", 
         RowBox[{
          SubscriptBox["k", "j"], "r"}], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{
           RowBox[{"l", "'"}], " ", 
           RowBox[{"m", "'"}]}]], "(", 
         RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602843848832617`*^9, 3.760284418501545*^9}, {
  3.76028446352544*^9, 3.760284536138644*^9}, {3.760284656806432*^9, 
  3.760284659253708*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Pi]\[HBar]"}], " ", 
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SqrtBox[
      FractionBox["1", 
       RowBox[{"2", "\[Mu]", " ", 
        SubscriptBox["k", "i"]}]]], 
     FractionBox["1", "r"], 
     RowBox[{
      UnderscriptBox["\[Sum]", "l"], 
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", 
        RowBox[{"l", "-", "1"}]], 
       SqrtBox[
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubsuperscriptBox[
           OverscriptBox["f", "~"], "l", "-"], "(", 
          RowBox[{
           SubscriptBox["k", "i"], "r"}], ")"}], "-", 
         RowBox[{
          SubsuperscriptBox[
           OverscriptBox["f", "~"], "l", "+"], "(", 
          RowBox[{
           SubscriptBox["k", "i"], "r"}], ")"}]}], ")"}], 
       RowBox[{
        SubscriptBox["Y", 
         RowBox[{"l", ",", "0"}]], "(", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}], "+", 
    RowBox[{"\[Pi]\[HBar]", 
     SqrtBox[
      FractionBox["1", 
       RowBox[{"2", "\[Mu]", " ", 
        SubscriptBox["k", "i"]}]]], 
     FractionBox["1", "r"], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       UnderscriptBox["\[Sum]", "l"], 
       RowBox[{
        SuperscriptBox["\[ImaginaryI]", 
         RowBox[{"l", "-", "1"}]], 
        SqrtBox[
         RowBox[{
          RowBox[{"2", "l"}], "+", "1"}]], 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["S", 
           RowBox[{"i", ",", "l", ",", 
            RowBox[{"0", ";", "j"}], ",", 
            RowBox[{"l", "'"}], ",", 
            RowBox[{"m", "'"}]}]], "-", 
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{"j", ",", "i"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{"l", ",", 
             RowBox[{"l", "'"}]}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{"m", ",", 
             RowBox[{"m", "'"}]}]]}]}], ")"}], 
        RowBox[{
         SubscriptBox[
          OverscriptBox[
           SuperscriptBox["f", "+"], "~"], 
          RowBox[{"l", "'"}]], "(", 
         RowBox[{
          SubscriptBox["k", "j"], "r"}], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{
           RowBox[{"l", "'"}], " ", 
           RowBox[{"m", "'"}]}]], "(", 
         RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602845516916237`*^9, 3.760284573553606*^9}, {
  3.7602846627496862`*^9, 3.760284666101516*^9}, {3.760284727023316*^9, 
  3.760284728653472*^9}, {3.760284873376153*^9, 3.760284888487668*^9}}],

Cell[TextData[{
 "The first term is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["k", "i"], " ", "z"}]]}], "=", 
    RowBox[{
     RowBox[{"-", "\[Pi]\[HBar]"}], " ", 
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SqrtBox[
      FractionBox["1", 
       RowBox[{"2", "\[Mu]", " ", 
        SubscriptBox["k", "i"]}]]], 
     FractionBox["1", "r"], " ", 
     RowBox[{
      UnderscriptBox["\[Sum]", "l"], 
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", 
        RowBox[{"l", "-", "1"}]], 
       SqrtBox[
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}]], 
       RowBox[{
        SubscriptBox["Y", 
         RowBox[{"l", ",", "0"}]], "(", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubsuperscriptBox["f", "l", "-"], "(", 
          RowBox[{
           SubscriptBox["k", "i"], "r"}], ")"}], "-", 
         RowBox[{
          SubsuperscriptBox["f", "l", "+"], "(", 
          RowBox[{
           SubscriptBox["k", "i"], "r"}], ")"}]}], " ", ")"}]}]}]}]}], 
   TraditionalForm]]],
 ".  Note also that the asymptotic form of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox[
      OverscriptBox["f", "~"], 
      RowBox[{"l", "'"}], "+"], "(", 
     RowBox[{
      SubscriptBox["k", "j"], "r"}], ")"}], "\[Rule]", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"2", "\[Mu]"}], 
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
        SubscriptBox["k", "j"]}]]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "\[ImaginaryI]"}], ")"}], 
      RowBox[{"l", "'"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["k", "j"], "r"}], ")"}]}]]}]}], TraditionalForm]]],
 ", so we have:"
}], "Text",
 CellChangeTimes->{{3.7602846824489822`*^9, 3.7602846824535646`*^9}, {
  3.760284752829172*^9, 3.760284852262759*^9}, {3.760284891589347*^9, 
  3.7602849031699047`*^9}, {3.760284940339422*^9, 3.760284946951611*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["k", "i"], " ", "z"}]]}], "+", 
    RowBox[{"\[Pi]\[HBar]", 
     SqrtBox[
      FractionBox["1", 
       RowBox[{"2", "\[Mu]", " ", 
        SubscriptBox["k", "i"]}]]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       UnderscriptBox["\[Sum]", "l"], 
       RowBox[{
        SuperscriptBox["\[ImaginaryI]", 
         RowBox[{"l", "-", "1"}]], 
        SqrtBox[
         RowBox[{
          RowBox[{"2", "l"}], "+", "1"}]], 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["S", 
           RowBox[{"i", ",", "l", ",", 
            RowBox[{"0", ";", "j"}], ",", 
            RowBox[{"l", "'"}], ",", 
            RowBox[{"m", "'"}]}]], "-", 
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{"j", ",", "i"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{"l", ",", 
             RowBox[{"l", "'"}]}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{"m", ",", 
             RowBox[{"m", "'"}]}]]}]}], ")"}], 
        SqrtBox[
         FractionBox[
          RowBox[{"2", "\[Mu]"}], 
          RowBox[{
           SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
           SubscriptBox["k", "j"]}]]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "\[ImaginaryI]"}], ")"}], 
         RowBox[{"l", "'"}]], 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["k", "j"], "r"}], ")"}]}]], "r"], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{
           RowBox[{"l", "'"}], " ", 
           RowBox[{"m", "'"}]}]], "(", 
         RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760284682608839*^9, 3.760284682611246*^9}, {
  3.76028485842223*^9, 3.760284858499419*^9}, {3.7602849118951063`*^9, 
  3.7602849661213083`*^9}, {3.7602850433150682`*^9, 3.760285043688901*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["k", "i"], " ", "z"}]]}], "+", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["k", "j"], "r"}], ")"}]}]], "r"], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       UnderscriptBox["\[Sum]", "l"], 
       RowBox[{
        SuperscriptBox["\[ImaginaryI]", 
         RowBox[{"l", "-", "1"}]], 
        SqrtBox[
         FractionBox[
          RowBox[{"\[Pi]", "(", 
           RowBox[{
            RowBox[{"2", "l"}], "+", "1"}], ")"}], 
          RowBox[{" ", 
           RowBox[{
            SubscriptBox["k", "j"], 
            SubscriptBox["k", "i"]}]}]]], 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["S", 
           RowBox[{"i", ",", "l", ",", 
            RowBox[{"0", ";", "j"}], ",", 
            RowBox[{"l", "'"}], ",", 
            RowBox[{"m", "'"}]}]], "-", 
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{"j", ",", "i"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{"l", ",", 
             RowBox[{"l", "'"}]}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{"m", ",", 
             RowBox[{"m", "'"}]}]]}]}], ")"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "\[ImaginaryI]"}], ")"}], 
         RowBox[{"l", "'"}]], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{
           RowBox[{"l", "'"}], " ", 
           RowBox[{"m", "'"}]}]], "(", 
         RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602846827772493`*^9, 3.7602846827795353`*^9}, {
  3.760284979435343*^9, 3.760285000503118*^9}, {3.7602850346822033`*^9, 
  3.7602850693064623`*^9}, {3.7602851037844763`*^9, 3.76028513441363*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["k", "i"], " ", "z"}]]}], "+", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["k", "j"], "r"}], ")"}]}]], "r"], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       RowBox[{
        SubscriptBox["Y", 
         RowBox[{
          RowBox[{"l", "'"}], " ", 
          RowBox[{"m", "'"}]}]], "(", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
       RowBox[{
        UnderscriptBox["\[Sum]", "l"], 
        RowBox[{
         SuperscriptBox["\[ImaginaryI]", 
          RowBox[{"l", "-", 
           RowBox[{"l", "'"}]}]], 
         SqrtBox[
          FractionBox[
           RowBox[{"4", 
            RowBox[{"\[Pi]", "(", 
             RowBox[{
              RowBox[{"2", "l"}], "+", "1"}], ")"}]}], 
           RowBox[{" ", 
            RowBox[{
             SubscriptBox["k", "j"], 
             SubscriptBox["k", "i"]}]}]]], 
         FractionBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"i", ",", "l", ",", 
              RowBox[{"0", ";", "j"}], ",", 
              RowBox[{"l", "'"}], ",", 
              RowBox[{"m", "'"}]}]], "-", 
            RowBox[{
             SubscriptBox["\[Delta]", 
              RowBox[{"j", ",", "i"}]], 
             SubscriptBox["\[Delta]", 
              RowBox[{"l", ",", 
               RowBox[{"l", "'"}]}]], 
             SubscriptBox["\[Delta]", 
              RowBox[{"m", ",", 
               RowBox[{"m", "'"}]}]]}]}], ")"}], 
          RowBox[{"2", "\[ImaginaryI]"}]]}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760285184592767*^9, 3.760285288813057*^9}}],

Cell["So we have", "Text",
 CellChangeTimes->{{3.760285348848435*^9, 3.760285351258224*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"i", "\[Rule]", "j"}]], "(", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}]], 
    RowBox[{
     RowBox[{
      SubscriptBox["Y", 
       RowBox[{
        RowBox[{"l", "'"}], " ", 
        RowBox[{"m", "'"}]}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
     RowBox[{
      UnderscriptBox["\[Sum]", "l"], 
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", 
        RowBox[{"l", "-", 
         RowBox[{"l", "'"}]}]], 
       SqrtBox[
        FractionBox[
         RowBox[{"4", 
          RowBox[{"\[Pi]", "(", 
           RowBox[{
            RowBox[{"2", "l"}], "+", "1"}], ")"}]}], 
         RowBox[{" ", 
          RowBox[{
           SubscriptBox["k", "j"], 
           SubscriptBox["k", "i"]}]}]]], 
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["S", 
           RowBox[{"i", ",", "l", ",", 
            RowBox[{"0", ";", "j"}], ",", 
            RowBox[{"l", "'"}], ",", 
            RowBox[{"m", "'"}]}]], "-", 
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{"j", ",", "i"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{"l", ",", 
             RowBox[{"l", "'"}]}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{"m", ",", 
             RowBox[{"m", "'"}]}]]}]}], ")"}], 
        RowBox[{"2", "\[ImaginaryI]"}]]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760285360995216*^9, 3.760285373282187*^9}}],

Cell["and we can define a partial wave scattering amplitude ", "Text",
 CellChangeTimes->{{3.760285389487666*^9, 3.760285453158928*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubsuperscriptBox["f", 
    RowBox[{
     RowBox[{"l", "'"}], ",", 
     RowBox[{"m", "'"}]}], 
    RowBox[{"i", "\[Rule]", "j"}]], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", "l"], 
    RowBox[{
     SuperscriptBox["\[ImaginaryI]", 
      RowBox[{"l", "-", 
       RowBox[{"l", "'"}]}]], 
     SqrtBox[
      FractionBox[
       RowBox[{"4", 
        RowBox[{"\[Pi]", "(", 
         RowBox[{
          RowBox[{"2", "l"}], "+", "1"}], ")"}]}], 
       RowBox[{
        SubscriptBox["k", "i"], " ", 
        SubscriptBox["k", "j"]}]]], 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"i", ",", "l", ",", 
          RowBox[{"0", ";", "j"}], ",", 
          RowBox[{"l", "'"}], ",", 
          RowBox[{"m", "'"}]}]], "-", 
        RowBox[{
         SubscriptBox["\[Delta]", 
          RowBox[{"j", ",", "i"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"l", ",", 
           RowBox[{"l", "'"}]}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"m", ",", 
           RowBox[{"m", "'"}]}]]}]}], ")"}], 
      RowBox[{"2", "\[ImaginaryI]"}]]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760285389487666*^9, 3.760285483935615*^9}, {
  3.760285554051296*^9, 3.760285555585504*^9}, {3.760286787205924*^9, 
  3.760286794770989*^9}}],

Cell["Such that the total amplitude is", "Text",
 CellChangeTimes->{{3.760285494546301*^9, 3.7602854998853903`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"i", "\[Rule]", "j"}]], "(", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}]], 
    RowBox[{
     RowBox[{
      SubscriptBox["Y", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
     SubsuperscriptBox["f", 
      RowBox[{
       RowBox[{"l", "'"}], ",", 
       RowBox[{"m", "'"}]}], 
      RowBox[{"i", "\[Rule]", "j"}]]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760285501056624*^9, 3.760285559248866*^9}, {
  3.760285614909732*^9, 3.7602856175014277`*^9}, {3.760286801525758*^9, 
  3.7602868109864893`*^9}}],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"l", "=", "0"}], TraditionalForm]]],
 " partial wave reduces to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"l", "=", "0"}]], "=", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"4", "\[Pi]"}], 
       RowBox[{
        SubscriptBox["k", "i"], 
        SubscriptBox["k", "j"]}]]], 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"i", ",", "j"}]], "-", 
        SubscriptBox["\[Delta]", 
         RowBox[{"i", ",", "j"}]]}], ")"}], 
      RowBox[{"2", "\[ImaginaryI]"}]]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.7602879665478363`*^9, 3.760287969363949*^9}, {
  3.760288017914125*^9, 3.760288019709489*^9}, {3.761385179589059*^9, 
  3.76138526232901*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "General relation to ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for arbitrary incident wave"
}], "Subsection",
 CellChangeTimes->{{3.765669915170957*^9, 3.765669928173409*^9}}],

Cell[TextData[{
 "If the initial plane wave is in an arbitrary direction ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["k",
     FontWeight->"Bold"], "i"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.765669932763254*^9, 3.765669951955448*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      SubscriptBox[
       StyleBox["k",
        FontWeight->"Bold"], "i"], "\[CenterDot]", 
      StyleBox["r",
       FontWeight->"Bold"]}]}]], "=", 
   RowBox[{"4", "\[Pi]", 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", "l"], 
      RowBox[{
       SubscriptBox["j", "l"], "(", 
       RowBox[{
        SubscriptBox["k", "i"], " ", "r"}], ")"}], 
      RowBox[{
       OverscriptBox[
        UnderscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "l"}]}]], "l"], 
       RowBox[{
        SubscriptBox[
         RowBox[{"Y", "\[Conjugate]"}], 
         RowBox[{"l", ",", "m"}]], 
        RowBox[{"(", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["k",
            FontWeight->"Bold"], "^"], "i"], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{"l", ",", "m"}]], "(", 
         OverscriptBox[
          StyleBox["r",
           FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{
  3.765669931073161*^9, {3.765669982323604*^9, 3.765669995162292*^9}}],

Cell[TextData[{
 "then the large- ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " solution looks like:"
}], "Text",
 CellChangeTimes->{{3.7656700015670547`*^9, 3.76567002840865*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[CapitalPsi]", "(", 
    RowBox[{
     StyleBox["r",
      FontWeight->"Bold"], ",", 
     StyleBox["\[Xi]",
      FontWeight->"Bold"]}], ")"}], 
   OverscriptBox["\[RightArrow]", 
    RowBox[{"r", "\[Rule]", " ", "\[Infinity]"}]], 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{
        SubscriptBox[
         StyleBox["k",
          FontWeight->"Bold"], "i"], "\[CenterDot]", 
        StyleBox["r",
         FontWeight->"Bold"]}]}]]}], "+", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", "\[Element]", "open"}]], " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["f", 
        RowBox[{"i", "\[Rule]", "j"}]], "(", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["k", "^"], "i"], ",", 
        SubscriptBox[
         OverscriptBox["k", "^"], "j"]}], ")"}], " ", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["k", "j"], " ", "r"}]], "r"], 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "j"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}], " "}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765670060396884*^9, 3.765670121004225*^9}, {
  3.765706712635324*^9, 3.7657067130109158`*^9}}],

Cell["The channel solutions are asymptotically:", "Text",
 CellChangeTimes->{{3.765706626623057*^9, 3.76570664713351*^9}, {
  3.765706740277274*^9, 3.765706750003018*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], 
   OverscriptBox["\[RightArrow]", 
    RowBox[{"r", "\[Rule]", " ", "\[Infinity]"}]], 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"i", ",", "j"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{
        SubscriptBox[
         StyleBox["k",
          FontWeight->"Bold"], "i"], "\[CenterDot]", 
        StyleBox["r",
         FontWeight->"Bold"]}]}]]}], "+", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"i", "\[Rule]", "j"}]], "(", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["k", "^"], "i"], ",", 
       SubscriptBox[
        OverscriptBox["k", "^"], "j"]}], ")"}], " ", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["k", "j"], " ", "r"}]], "r"]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765706546863812*^9, 3.765706560659854*^9}, {
  3.765706596372608*^9, 3.765706616317078*^9}, {3.765706652262107*^9, 
  3.765706684522909*^9}}],

Cell["\<\
We must now repeat the previous exercise to account for the arbitrary initial \
direction.\
\>", "Text",
 CellChangeTimes->{{3.765670154448462*^9, 3.76567016928755*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{" ", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SubscriptBox[
        StyleBox["k",
         FontWeight->"Bold"], "i"], "\[CenterDot]", 
       StyleBox["r",
        FontWeight->"Bold"]}]}]], "=", 
    RowBox[{"4", "\[Pi]", 
     SqrtBox[
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
        SubscriptBox["k", "i"]}], 
       RowBox[{"2", "\[Mu]"}]]], 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}]], 
     RowBox[{
      OverscriptBox[
       UnderscriptBox["\[Sum]", 
        RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", "l"], 
       OverscriptBox[
        RowBox[{
         SqrtBox[
          FractionBox[
           RowBox[{"2", "\[Mu]"}], 
           RowBox[{
            SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
            SubscriptBox["k", "i"]}]]], 
         SubscriptBox["k", "i"], "r", 
         SubscriptBox["j", "l"], 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["k", "i"], "r"}], ")"}]}], 
        OverscriptBox["\[OverBrace]", 
         RowBox[{"            ", 
          RowBox[{"this", " ", "is", " ", 
           RowBox[{
            SubscriptBox[
             OverscriptBox["s", "~"], "l"], "(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}], "                "}]}]]], 
       RowBox[{
        OverscriptBox[
         UnderscriptBox["\[Sum]", 
          RowBox[{"m", "=", 
           RowBox[{"-", "l"}]}]], "l"], 
        RowBox[{
         SubscriptBox[
          RowBox[{"Y", "\[Conjugate]"}], 
          RowBox[{"l", ",", "m"}]], 
         RowBox[{"(", 
          SubscriptBox[
           OverscriptBox[
            StyleBox["k",
             FontWeight->"Bold"], "^"], "i"], ")"}], 
         RowBox[{
          SubscriptBox["Y", 
           RowBox[{"l", ",", "m"}]], "(", 
          OverscriptBox[
           StyleBox["r",
            FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760205299962483*^9, 3.76020533996618*^9}, {
  3.760273749200626*^9, 3.760273781989345*^9}, {3.76570607436194*^9, 
  3.7657060791497087`*^9}, {3.7657062299488783`*^9, 3.765706247933371*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      SubscriptBox[
       StyleBox["k",
        FontWeight->"Bold"], "i"], "\[CenterDot]", 
      StyleBox["r",
       FontWeight->"Bold"]}]}]], "=", 
   RowBox[{"4", "\[Pi]", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
       SubscriptBox["k", "i"]}], 
      RowBox[{"2", "\[Mu]"}]]], 
    FractionBox["1", 
     RowBox[{
      SubscriptBox["k", "i"], "r"}]], 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", "l"], 
      RowBox[{
       SubscriptBox[
        OverscriptBox["s", "~"], "l"], "(", 
       RowBox[{
        SubscriptBox["k", "i"], "r"}], ")"}], 
      RowBox[{
       OverscriptBox[
        UnderscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "l"}]}]], "l"], 
       RowBox[{
        SubscriptBox[
         RowBox[{"Y", "\[Conjugate]"}], 
         RowBox[{"l", ",", "m"}]], 
        RowBox[{"(", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["k",
            FontWeight->"Bold"], "^"], "i"], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{"l", ",", "m"}]], "(", 
         OverscriptBox[
          StyleBox["r",
           FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765706261551425*^9, 3.765706268638195*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      SubscriptBox[
       StyleBox["k",
        FontWeight->"Bold"], "i"], "\[CenterDot]", 
      StyleBox["r",
       FontWeight->"Bold"]}]}]], "=", 
   RowBox[{"4", "\[Pi]", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
       SubscriptBox["k", "i"]}], 
      RowBox[{"2", "\[Mu]"}]]], 
    FractionBox["1", 
     RowBox[{
      SubscriptBox["k", "i"], "r"}]], 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", "l"], 
      FractionBox["1", 
       RowBox[{"2", "\[ImaginaryI]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox[
          OverscriptBox["f", "~"], "l", "+"], "(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}], " ", "-", 
        RowBox[{
         SubsuperscriptBox[
          OverscriptBox["f", "~"], "l", "-"], "(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}]}], ")"}], 
      RowBox[{
       OverscriptBox[
        UnderscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "l"}]}]], "l"], 
       RowBox[{
        SubscriptBox[
         RowBox[{"Y", "\[Conjugate]"}], 
         RowBox[{"l", ",", "m"}]], 
        RowBox[{"(", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["k",
            FontWeight->"Bold"], "^"], "i"], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{"l", ",", "m"}]], "(", 
         OverscriptBox[
          StyleBox["r",
           FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765706277382618*^9, 3.765706290622835*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      SubscriptBox[
       StyleBox["k",
        FontWeight->"Bold"], "i"], "\[CenterDot]", 
      StyleBox["r",
       FontWeight->"Bold"]}]}]], "=", 
   RowBox[{"4", "\[Pi]", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
       SubscriptBox["k", "i"]}], 
      RowBox[{"2", "\[Mu]"}]]], 
    FractionBox["1", 
     RowBox[{
      SubscriptBox["k", "i"], "r"}]], 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", "l"], 
      FractionBox["1", 
       RowBox[{"2", "\[ImaginaryI]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox[
          OverscriptBox["f", "~"], "l", "+"], "(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}], " ", "-", 
        RowBox[{
         SubsuperscriptBox[
          OverscriptBox["f", "~"], "l", "-"], "(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}]}], ")"}], 
      RowBox[{
       OverscriptBox[
        UnderscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "l"}]}]], "l"], 
       RowBox[{
        SubscriptBox[
         RowBox[{"Y", "\[Conjugate]"}], 
         RowBox[{"l", ",", "m"}]], 
        RowBox[{"(", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["k",
            FontWeight->"Bold"], "^"], "i"], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{"l", ",", "m"}]], "(", 
         OverscriptBox[
          StyleBox["r",
           FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{3.765707934245644*^9}],

Cell[TextData[{
 "Plugging this into our asymptotic form for the channel solution, we will \
ultimately want to extract ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", 
    RowBox[{"i", "\[Rule]", "j"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " according to the expression:"
}], "Text",
 CellChangeTimes->{{3.7657068222724257`*^9, 3.765706842691598*^9}, {
  3.765708138393353*^9, 3.765708160919005*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], 
   OverscriptBox["\[RightArrow]", 
    RowBox[{"r", "\[Rule]", " ", "\[Infinity]"}]], 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"i", ",", "j"}]], "4", "\[Pi]", 
     SqrtBox[
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
        SubscriptBox["k", "i"]}], 
       RowBox[{"2", "\[Mu]"}]]], 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}]], 
     RowBox[{
      OverscriptBox[
       UnderscriptBox["\[Sum]", 
        RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", "l"], 
       FractionBox["1", 
        RowBox[{"2", "\[ImaginaryI]"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubsuperscriptBox[
           OverscriptBox["f", "~"], "l", "+"], "(", 
          RowBox[{
           SubscriptBox["k", "i"], "r"}], ")"}], " ", "-", 
         RowBox[{
          SubsuperscriptBox[
           OverscriptBox["f", "~"], "l", "-"], "(", 
          RowBox[{
           SubscriptBox["k", "i"], "r"}], ")"}]}], ")"}], 
       RowBox[{
        OverscriptBox[
         UnderscriptBox["\[Sum]", 
          RowBox[{"m", "=", 
           RowBox[{"-", "l"}]}]], "l"], 
        RowBox[{
         SubscriptBox[
          RowBox[{"Y", "\[Conjugate]"}], 
          RowBox[{"l", ",", "m"}]], 
         RowBox[{"(", 
          SubscriptBox[
           OverscriptBox[
            StyleBox["k",
             FontWeight->"Bold"], "^"], "i"], ")"}], 
         RowBox[{
          SubscriptBox["Y", 
           RowBox[{"l", ",", "m"}]], "(", 
          OverscriptBox[
           StyleBox["r",
            FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}], "+", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"i", "\[Rule]", "j"}]], "(", 
      RowBox[{
       SubscriptBox[
        OverscriptBox[
         StyleBox["k",
          FontWeight->"Bold"], "^"], "i"], ",", 
       SubscriptBox[
        OverscriptBox[
         StyleBox["k",
          FontWeight->"Bold"], "^"], "j"]}], ")"}], " ", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["k", "j"], " ", "r"}]], "r"]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7657068489892607`*^9, 3.765706854902664*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], 
   OverscriptBox["\[RightArrow]", 
    RowBox[{"r", "\[Rule]", " ", "\[Infinity]"}]], 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["\[Delta]", 
       RowBox[{"i", ",", "j"}]]}], "4", "\[Pi]", 
     SqrtBox[
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
        SubscriptBox["k", "i"]}], 
       RowBox[{"2", "\[Mu]"}]]], 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}]], 
     RowBox[{
      OverscriptBox[
       UnderscriptBox["\[Sum]", 
        RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
      RowBox[{
       OverscriptBox[
        UnderscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "l"}]}]], "l"], 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ImaginaryI]", "l"], 
         RowBox[{"2", "\[ImaginaryI]"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubsuperscriptBox[
            OverscriptBox["f", "~"], "l", "-"], "(", 
           RowBox[{
            SubscriptBox["k", "i"], "r"}], ")"}], "-", 
          RowBox[{
           SubsuperscriptBox[
            OverscriptBox["f", "~"], "l", "+"], "(", 
           RowBox[{
            SubscriptBox["k", "i"], "r"}], ")"}]}], " ", ")"}], 
        SubscriptBox[
         RowBox[{"Y", "\[Conjugate]"}], 
         RowBox[{"l", ",", "m"}]], 
        RowBox[{"(", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["k",
            FontWeight->"Bold"], "^"], "i"], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{"l", ",", "m"}]], "(", 
         OverscriptBox[
          StyleBox["r",
           FontWeight->"Bold"], "^"], ")"}]}]}]}]}], "+", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"i", "\[Rule]", "j"}]], "(", 
      RowBox[{
       SubscriptBox[
        OverscriptBox[
         StyleBox["k",
          FontWeight->"Bold"], "^"], "i"], ",", 
       SubscriptBox[
        OverscriptBox[
         StyleBox["k",
          FontWeight->"Bold"], "^"], "j"]}], ")"}], " ", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["k", "j"], " ", "r"}]], "r"]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7657082449799433`*^9, 3.765708306597213*^9}}],

Cell["We can expand any channel solution over spherical harmonics:", "Text",
 CellChangeTimes->{{3.765707118934392*^9, 3.765707139647222*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}]], 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"j", " ", 
         RowBox[{"l", "'"}], " ", 
         RowBox[{"m", "'"}]}]], "(", "r", ")"}], "r"], 
     RowBox[{
      SubscriptBox["Y", 
       RowBox[{
        RowBox[{"l", "'"}], " ", 
        RowBox[{"m", "'"}]}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{
  3.760279091843136*^9, {3.76028280918167*^9, 3.760282835890572*^9}, {
   3.760284161737555*^9, 3.7602841693607597`*^9}}],

Cell[TextData[{
 "and let\[CloseCurlyQuote]s say we want to construct ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], TraditionalForm]]],
 " out of our functions "
}], "Text",
 CellChangeTimes->{{3.7602750032147903`*^9, 3.760275027204349*^9}, {
  3.760284180320271*^9, 3.7602841864323807`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Phi]", 
     RowBox[{"j", ",", 
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}], 
     RowBox[{"(", 
      RowBox[{"i", ",", "l", ",", "m"}], ")"}]], "(", 
    RowBox[{
     SubscriptBox["k", "j"], "r"}], ")"}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"l", "'"}], ",", "l"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"m", "'"}], ",", "m"}]], 
     RowBox[{
      SubscriptBox[
       OverscriptBox[
        SuperscriptBox["f", "-"], "~"], "l"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}], ")"}]}], "-", 
    RowBox[{
     SubscriptBox["S", 
      RowBox[{"i", ",", "l", ",", 
       RowBox[{"m", ";", "j"}], ",", 
       RowBox[{"l", "'"}], ",", 
       RowBox[{"m", "'"}]}]], 
     RowBox[{
      SubscriptBox[
       OverscriptBox[
        SuperscriptBox["f", "+"], "~"], 
       RowBox[{"l", "'"}]], "(", 
      RowBox[{
       SubscriptBox["k", "j"], "r"}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{
  3.7602750411425123`*^9, {3.760277273569232*^9, 3.760277280909954*^9}, {
   3.7657071850145273`*^9, 3.76570718995021*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", 
    StyleBox["r",
     FontWeight->"Bold"], ")"}], "\[Rule]", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}]], 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox["\[Delta]", 
         RowBox[{"j", ",", "i"}]], 
        SubscriptBox["\[Delta]", 
         RowBox[{
          RowBox[{"l", "'"}], ",", "l"}]], 
        SubscriptBox["\[Delta]", 
         RowBox[{
          RowBox[{"m", "'"}], ",", "m"}]], 
        RowBox[{
         SubscriptBox[
          OverscriptBox[
           SuperscriptBox["f", "-"], "~"], "l"], "(", 
         RowBox[{
          SubscriptBox["k", "i"], "r"}], ")"}]}], "-", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"i", ",", "l", ",", 
          RowBox[{"m", ";", "j"}], ",", 
          RowBox[{"l", "'"}], ",", 
          RowBox[{"m", "'"}]}]], 
        RowBox[{
         SubscriptBox[
          OverscriptBox[
           SuperscriptBox["f", "+"], "~"], 
          RowBox[{"l", "'"}]], "(", 
         RowBox[{
          SubscriptBox["k", "j"], "r"}], ")"}]}]}], "r"], 
     RowBox[{
      SubscriptBox["Y", 
       RowBox[{
        RowBox[{"l", "'"}], " ", 
        RowBox[{"m", "'"}]}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7657080911327457`*^9, 3.765708105650085*^9}}],

Cell[TextData[{
 "If this is a valid solution to the asymptotic SE for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", ",", "l", ",", "m"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", then we can propose a sum over ",
 Cell[BoxData[
  FormBox[
   RowBox[{"l", ",", "m"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with the same coefficients used to construct ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      SubscriptBox[
       StyleBox["k",
        FontWeight->"Bold"], "i"], "\[CenterDot]", 
      StyleBox["r",
       FontWeight->"Bold"]}]}]], TraditionalForm]]],
 ".  Consider the expression:"
}], "Text",
 CellChangeTimes->{{3.7602836825297337`*^9, 3.7602836858315353`*^9}, {
  3.76028419616757*^9, 3.760284243573804*^9}, {3.765707297144079*^9, 
  3.7657073014159184`*^9}, {3.7657091162109632`*^9, 3.765709129170474*^9}, {
  3.7657092875401087`*^9, 3.7657093236956463`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{"-", "4"}], "\[Pi]", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
       SubscriptBox["k", "i"]}], 
      RowBox[{"2", "\[Mu]"}]]], 
    FractionBox["1", 
     RowBox[{
      SubscriptBox["k", "i"], "r"}]], 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", ",", "m"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[ImaginaryI]", "l"], 
        RowBox[{"2", "\[ImaginaryI]"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Delta]", 
           RowBox[{"j", ",", "i"}]], 
          SubscriptBox["\[Delta]", 
           RowBox[{
            RowBox[{"l", "'"}], ",", "l"}]], 
          SubscriptBox["\[Delta]", 
           RowBox[{
            RowBox[{"m", "'"}], ",", "m"}]], 
          RowBox[{
           SubscriptBox[
            OverscriptBox[
             SuperscriptBox["f", "-"], "~"], "l"], "(", 
           RowBox[{
            SubscriptBox["k", "i"], "r"}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["S", 
           RowBox[{"i", ",", "l", ",", 
            RowBox[{"m", ";", "j"}], ",", 
            RowBox[{"l", "'"}], ",", 
            RowBox[{"m", "'"}]}]], 
          RowBox[{
           SubscriptBox[
            OverscriptBox[
             SuperscriptBox["f", "+"], "~"], 
            RowBox[{"l", "'"}]], "(", 
           RowBox[{
            SubscriptBox["k", "j"], "r"}], ")"}]}]}], ")"}], 
       SubscriptBox[
        RowBox[{"Y", "\[Conjugate]"}], 
        RowBox[{"l", ",", "m"}]], 
       RowBox[{"(", 
        SubscriptBox[
         OverscriptBox[
          StyleBox["k",
           FontWeight->"Bold"], "^"], "i"], ")"}], 
       RowBox[{
        SubscriptBox["Y", 
         RowBox[{
          RowBox[{"l", "'"}], " ", 
          RowBox[{"m", "'"}]}]], "(", 
        OverscriptBox[
         StyleBox["r",
          FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602833173286533`*^9, 3.76028333946139*^9}, {
   3.760283379390712*^9, 3.760283398833555*^9}, 3.760283687848731*^9, 
   3.760283945806292*^9, {3.76028401739532*^9, 3.760284023346409*^9}, {
   3.760284069529242*^9, 3.760284151698102*^9}, {3.76028424683785*^9, 
   3.760284248317534*^9}, {3.76028464239159*^9, 3.760284642766362*^9}, {
   3.7657083883257933`*^9, 3.765708478584341*^9}, {3.7657091529489193`*^9, 
   3.765709210115649*^9}, 3.765711064286216*^9}],

Cell[TextData[{
 "Add and subtract ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     OverscriptBox["f", "~"], 
     RowBox[{"l", "'"}], 
     RowBox[{"(", "+", ")"}]], "(", 
    RowBox[{
     SubscriptBox["k", "i"], "r"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to the first term in the parentheses above."
}], "Text",
 CellChangeTimes->{{3.765709338401078*^9, 3.765709392413118*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{"-", "4"}], "\[Pi]", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
       SubscriptBox["k", "i"]}], 
      RowBox[{"2", "\[Mu]"}]]], 
    FractionBox["1", 
     RowBox[{
      SubscriptBox["k", "i"], "r"}]], 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", ",", "m"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[ImaginaryI]", "l"], 
        RowBox[{"2", "\[ImaginaryI]"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Delta]", 
           RowBox[{"j", ",", "i"}]], 
          SubscriptBox["\[Delta]", 
           RowBox[{
            RowBox[{"l", "'"}], ",", "l"}]], 
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{
             RowBox[{"m", "'"}], ",", "m"}]], "(", 
           RowBox[{
            RowBox[{
             SubscriptBox[
              SuperscriptBox[
               OverscriptBox["f", "~"], "-"], "l"], "(", 
             RowBox[{
              SubscriptBox["k", "i"], "r"}], ")"}], "+", 
            RowBox[{
             SubscriptBox[
              OverscriptBox[
               SuperscriptBox["f", "+"], "~"], 
              RowBox[{"l", "'"}]], "(", 
             RowBox[{
              SubscriptBox["k", "j"], "r"}], ")"}], "-", 
            RowBox[{
             SubscriptBox[
              OverscriptBox[
               SuperscriptBox["f", "+"], "~"], 
              RowBox[{"l", "'"}]], "(", 
             RowBox[{
              SubscriptBox["k", "j"], "r"}], ")"}]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["S", 
           RowBox[{"i", ",", "l", ",", 
            RowBox[{"m", ";", "j"}], ",", 
            RowBox[{"l", "'"}], ",", 
            RowBox[{"m", "'"}]}]], 
          RowBox[{
           SubscriptBox[
            OverscriptBox[
             SuperscriptBox["f", "+"], "~"], 
            RowBox[{"l", "'"}]], "(", 
           RowBox[{
            SubscriptBox["k", "j"], "r"}], ")"}]}]}], ")"}], 
       SubscriptBox[
        RowBox[{"Y", "\[Conjugate]"}], 
        RowBox[{"l", ",", "m"}]], 
       RowBox[{"(", 
        SubscriptBox[
         OverscriptBox[
          StyleBox["k",
           FontWeight->"Bold"], "^"], "i"], ")"}], 
       RowBox[{
        SubscriptBox["Y", 
         RowBox[{
          RowBox[{"l", "'"}], " ", 
          RowBox[{"m", "'"}]}]], "(", 
        OverscriptBox[
         StyleBox["r",
          FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7657093961406116`*^9, 3.7657095391205273`*^9}, 
   3.765711074101849*^9}],

Cell[TextData[{
 "Move one of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox[
      SuperscriptBox["f", "+"], "~"], 
     RowBox[{"l", "'"}]], "(", 
    RowBox[{
     SubscriptBox["k", "j"], "r"}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.7657093961406116`*^9, 3.7657095391205273`*^9}}],
 " to the second term with the kronecker deltas:"
}], "Text",
 CellChangeTimes->{{3.7657095616842737`*^9, 3.765709601106697*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["\[Delta]", 
      RowBox[{"i", ",", "j"}]]}], "4", "\[Pi]", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
       SubscriptBox["k", "i"]}], 
      RowBox[{"2", "\[Mu]"}]]], 
    FractionBox["1", 
     RowBox[{
      SubscriptBox["k", "i"], "r"}]], 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", ",", "m"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[ImaginaryI]", "l"], 
        RowBox[{"2", "\[ImaginaryI]"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Delta]", 
           RowBox[{"j", ",", "i"}]], 
          SubscriptBox["\[Delta]", 
           RowBox[{
            RowBox[{"l", "'"}], ",", "l"}]], 
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{
             RowBox[{"m", "'"}], ",", "m"}]], "(", 
           RowBox[{
            RowBox[{
             SubscriptBox[
              SuperscriptBox[
               OverscriptBox["f", "~"], "-"], "l"], "(", 
             RowBox[{
              SubscriptBox["k", "i"], "r"}], ")"}], "-", 
            RowBox[{
             SubscriptBox[
              OverscriptBox[
               SuperscriptBox["f", "+"], "~"], 
              RowBox[{"l", "'"}]], "(", 
             RowBox[{
              SubscriptBox["k", "j"], "r"}], ")"}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"i", ",", "l", ",", 
              RowBox[{"m", ";", "j"}], ",", 
              RowBox[{"l", "'"}], ",", 
              RowBox[{"m", "'"}]}]], "-", 
            RowBox[{
             SubscriptBox["\[Delta]", 
              RowBox[{"j", ",", "i"}]], 
             SubscriptBox["\[Delta]", 
              RowBox[{
               RowBox[{"l", "'"}], ",", "l"}]], 
             SubscriptBox["\[Delta]", 
              RowBox[{
               RowBox[{"m", "'"}], ",", "m"}]]}]}], ")"}], 
          RowBox[{
           SubscriptBox[
            OverscriptBox[
             SuperscriptBox["f", "+"], "~"], 
            RowBox[{"l", "'"}]], "(", 
           RowBox[{
            SubscriptBox["k", "j"], "r"}], ")"}]}]}], ")"}], 
       SubscriptBox[
        RowBox[{"Y", "\[Conjugate]"}], 
        RowBox[{"l", ",", "m"}]], 
       RowBox[{"(", 
        SubscriptBox[
         OverscriptBox[
          StyleBox["k",
           FontWeight->"Bold"], "^"], "i"], ")"}], 
       RowBox[{
        SubscriptBox["Y", 
         RowBox[{
          RowBox[{"l", "'"}], " ", 
          RowBox[{"m", "'"}]}]], "(", 
        OverscriptBox[
         StyleBox["r",
          FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765709605486053*^9, 3.765709683393753*^9}}],

Cell[TextData[{
 "Replacing ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["f", "~"], 
    RowBox[{"(", "+", ")"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with its asymptotic form"
}], "Text",
 CellChangeTimes->{{3.7657100883648567`*^9, 3.7657101096577682`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["\[Delta]", 
      RowBox[{"i", ",", "j"}]]}], "4", "\[Pi]", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
       SubscriptBox["k", "i"]}], 
      RowBox[{"2", "\[Mu]"}]]], 
    FractionBox["1", 
     RowBox[{
      SubscriptBox["k", "i"], "r"}]], 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", ",", "m"}]], 
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", "l"], "(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{
            SubscriptBox[
             SuperscriptBox[
              OverscriptBox["f", "~"], "-"], "l"], "(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}], "-", 
           RowBox[{
            SubscriptBox[
             OverscriptBox[
              SuperscriptBox["f", "+"], "~"], "l"], "(", 
            RowBox[{
             SubscriptBox["k", "i"], "r"}], ")"}]}], 
          RowBox[{"2", "\[ImaginaryI]"}]], ")"}], 
        SubscriptBox[
         RowBox[{"Y", "\[Conjugate]"}], 
         RowBox[{"l", ",", "m"}]], 
        RowBox[{"(", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["k",
            FontWeight->"Bold"], "^"], "i"], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{"l", " ", "m"}]], "(", 
         OverscriptBox[
          StyleBox["r",
           FontWeight->"Bold"], "^"], ")"}]}], "-", 
       RowBox[{
        UnderscriptBox["\[Sum]", 
         RowBox[{
          RowBox[{"l", "'"}], ",", 
          RowBox[{"m", "'"}]}]], 
        RowBox[{
         FractionBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"i", ",", "l", ",", 
              RowBox[{"m", ";", "j"}], ",", 
              RowBox[{"l", "'"}], ",", 
              RowBox[{"m", "'"}]}]], "-", 
            RowBox[{
             SubscriptBox["\[Delta]", 
              RowBox[{"j", ",", "i"}]], 
             SubscriptBox["\[Delta]", 
              RowBox[{
               RowBox[{"l", "'"}], ",", "l"}]], 
             SubscriptBox["\[Delta]", 
              RowBox[{
               RowBox[{"m", "'"}], ",", "m"}]]}]}], ")"}], 
          RowBox[{"2", "\[ImaginaryI]"}]], 
         SqrtBox[
          FractionBox[
           RowBox[{"2", "\[Mu]"}], 
           RowBox[{
            SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
            SubscriptBox["k", "j"]}]]], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["k", "j"], "r"}], "-", 
             RowBox[{
              RowBox[{"l", "'"}], 
              FractionBox["\[Pi]", "2"]}]}], ")"}]}]], 
         SubscriptBox[
          RowBox[{"Y", "\[Conjugate]"}], 
          RowBox[{"l", ",", "m"}]], 
         RowBox[{"(", 
          SubscriptBox[
           OverscriptBox[
            StyleBox["k",
             FontWeight->"Bold"], "^"], "i"], ")"}], 
         RowBox[{
          SubscriptBox["Y", 
           RowBox[{
            RowBox[{"l", "'"}], " ", 
            RowBox[{"m", "'"}]}]], "(", 
          OverscriptBox[
           StyleBox["r",
            FontWeight->"Bold"], "^"], ")"}]}]}]}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765709813918149*^9, 3.765709825599361*^9}, {
   3.765709857014876*^9, 3.765709875652372*^9}, {3.7657099116276007`*^9, 
   3.765709961871757*^9}, 3.7657100793248796`*^9, {3.765710112397706*^9, 
   3.765710136114416*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["\[Delta]", 
       RowBox[{"i", ",", "j"}]]}], "4", "\[Pi]", 
     SqrtBox[
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
        SubscriptBox["k", "i"]}], 
       RowBox[{"2", "\[Mu]"}]]], 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"l", ",", "m"}]], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ImaginaryI]", "l"], "(", 
        FractionBox[
         RowBox[{
          RowBox[{
           SubscriptBox[
            SuperscriptBox[
             OverscriptBox["f", "~"], "-"], "l"], "(", 
           RowBox[{
            SubscriptBox["k", "i"], "r"}], ")"}], "-", 
          RowBox[{
           SubscriptBox[
            OverscriptBox[
             SuperscriptBox["f", "+"], "~"], "l"], "(", 
           RowBox[{
            SubscriptBox["k", "i"], "r"}], ")"}]}], 
         RowBox[{"2", "\[ImaginaryI]"}]], ")"}], 
       SubscriptBox[
        RowBox[{"Y", "\[Conjugate]"}], 
        RowBox[{"l", ",", "m"}]], 
       RowBox[{"(", 
        SubscriptBox[
         OverscriptBox[
          StyleBox["k",
           FontWeight->"Bold"], "^"], "i"], ")"}], 
       RowBox[{
        SubscriptBox["Y", 
         RowBox[{"l", " ", "m"}]], "(", 
        OverscriptBox[
         StyleBox["r",
          FontWeight->"Bold"], "^"], ")"}]}]}]}], "+", 
    RowBox[{"4", "\[Pi]", 
     SqrtBox[
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
        SubscriptBox["k", "i"]}], 
       RowBox[{"2", "\[Mu]"}]]], 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"l", ",", "m"}]], 
      RowBox[{
       UnderscriptBox["\[Sum]", 
        RowBox[{
         RowBox[{"l", "'"}], ",", 
         RowBox[{"m", "'"}]}]], 
       RowBox[{
        SuperscriptBox["\[ImaginaryI]", "l"], 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["S", 
            RowBox[{"i", ",", "l", ",", 
             RowBox[{"m", ";", "j"}], ",", 
             RowBox[{"l", "'"}], ",", 
             RowBox[{"m", "'"}]}]], "-", 
           RowBox[{
            SubscriptBox["\[Delta]", 
             RowBox[{"j", ",", "i"}]], 
            SubscriptBox["\[Delta]", 
             RowBox[{
              RowBox[{"l", "'"}], ",", "l"}]], 
            SubscriptBox["\[Delta]", 
             RowBox[{
              RowBox[{"m", "'"}], ",", "m"}]]}]}], ")"}], 
         RowBox[{"2", "\[ImaginaryI]"}]], 
        SqrtBox[
         FractionBox[
          RowBox[{"2", "\[Mu]"}], 
          RowBox[{
           SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
           SubscriptBox["k", "j"]}]]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["k", "j"], "r"}], "-", 
            RowBox[{
             RowBox[{"l", "'"}], 
             FractionBox["\[Pi]", "2"]}]}], ")"}]}]], 
        SubscriptBox[
         RowBox[{"Y", "\[Conjugate]"}], 
         RowBox[{"l", ",", "m"}]], 
        RowBox[{"(", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["k",
            FontWeight->"Bold"], "^"], "i"], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{
           RowBox[{"l", "'"}], " ", 
           RowBox[{"m", "'"}]}]], "(", 
         OverscriptBox[
          StyleBox["r",
           FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{3.765710300002614*^9, 3.765710371980013*^9, 
  3.765711027384454*^9}],

Cell[TextData[{
 "Compare the first term to: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SubscriptBox[
        StyleBox["k",
         FontWeight->"Bold"], "i"], "\[CenterDot]", 
       StyleBox["r",
        FontWeight->"Bold"]}]}]], "=", 
    RowBox[{
     RowBox[{"-", "4"}], "\[Pi]", 
     SqrtBox[
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], "\[Pi]", " ", 
        SubscriptBox["k", "i"]}], 
       RowBox[{"2", "\[Mu]"}]]], 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}]], 
     RowBox[{
      OverscriptBox[
       UnderscriptBox["\[Sum]", 
        RowBox[{"l", "=", "0"}]], "\[Infinity]"], 
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", "l"], 
       FractionBox["1", 
        RowBox[{"2", "\[ImaginaryI]"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubsuperscriptBox[
           OverscriptBox["f", "~"], "l", "-"], "(", 
          RowBox[{
           SubscriptBox["k", "i"], "r"}], ")"}], "-", 
         RowBox[{
          SubsuperscriptBox[
           OverscriptBox["f", "~"], "l", "+"], "(", 
          RowBox[{
           SubscriptBox["k", "i"], "r"}], ")"}]}], " ", ")"}], 
       RowBox[{
        OverscriptBox[
         UnderscriptBox["\[Sum]", 
          RowBox[{"m", "=", 
           RowBox[{"-", "l"}]}]], "l"], 
        RowBox[{
         SubscriptBox[
          RowBox[{"Y", "\[Conjugate]"}], 
          RowBox[{"l", ",", "m"}]], 
         RowBox[{"(", 
          SubscriptBox[
           OverscriptBox[
            StyleBox["k",
             FontWeight->"Bold"], "^"], "i"], ")"}], 
         RowBox[{
          SubscriptBox["Y", 
           RowBox[{"l", ",", "m"}]], "(", 
          OverscriptBox[
           StyleBox["r",
            FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.7657101935612373`*^9, 3.765710208638133*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"i", ",", "j"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{
        SubscriptBox[
         StyleBox["k",
          FontWeight->"Bold"], "i"], "\[CenterDot]", 
        StyleBox["r",
         FontWeight->"Bold"]}]}]]}], "+", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["k", "j"], "r"}], ")"}]}]], "r"], "4", "\[Pi]", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SubscriptBox["k", "i"], 
        SubscriptBox["k", "j"]}]]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"l", ",", "m"}]], 
      RowBox[{
       UnderscriptBox["\[Sum]", 
        RowBox[{
         RowBox[{"l", "'"}], ",", 
         RowBox[{"m", "'"}]}]], 
       RowBox[{
        SuperscriptBox["\[ImaginaryI]", 
         RowBox[{"l", "-", 
          RowBox[{"l", "'"}]}]], 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["S", 
            RowBox[{"i", ",", "l", ",", 
             RowBox[{"m", ";", "j"}], ",", 
             RowBox[{"l", "'"}], ",", 
             RowBox[{"m", "'"}]}]], "-", 
           RowBox[{
            SubscriptBox["\[Delta]", 
             RowBox[{"j", ",", "i"}]], 
            SubscriptBox["\[Delta]", 
             RowBox[{
              RowBox[{"l", "'"}], ",", "l"}]], 
            SubscriptBox["\[Delta]", 
             RowBox[{
              RowBox[{"m", "'"}], ",", "m"}]]}]}], ")"}], 
         RowBox[{"2", "\[ImaginaryI]"}]], 
        SubscriptBox[
         RowBox[{"Y", "\[Conjugate]"}], 
         RowBox[{"l", ",", "m"}]], 
        RowBox[{"(", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["k",
            FontWeight->"Bold"], "^"], "i"], ")"}], 
        RowBox[{
         SubscriptBox["Y", 
          RowBox[{
           RowBox[{"l", "'"}], " ", 
           RowBox[{"m", "'"}]}]], "(", 
         OverscriptBox[
          StyleBox["r",
           FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765710243319545*^9, 3.765710290434725*^9}, {
   3.765710335444829*^9, 3.765710338569332*^9}, 3.765710382378825*^9, {
   3.76571095395404*^9, 3.7657110211465073`*^9}}],

Cell["Which suggests:", "Text",
 CellChangeTimes->{{3.765711110574561*^9, 3.765711113845193*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"i", "\[Rule]", "j"}]], "(", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["k", "i"], "^"], ",", 
     OverscriptBox["r", "^"]}], ")"}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"4", "\[Pi]"}], 
     SqrtBox[
      RowBox[{
       SubscriptBox["k", "i"], 
       SubscriptBox["k", "j"]}]]], 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", ",", "m"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", 
        RowBox[{"l", "-", 
         RowBox[{"l", "'"}]}]], 
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["S", 
           RowBox[{"i", ",", "l", ",", 
            RowBox[{"m", ";", "j"}], ",", 
            RowBox[{"l", "'"}], ",", 
            RowBox[{"m", "'"}]}]], "-", 
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{"j", ",", "i"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{
             RowBox[{"l", "'"}], ",", "l"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{
             RowBox[{"m", "'"}], ",", "m"}]]}]}], ")"}], 
        RowBox[{"2", "\[ImaginaryI]"}]], 
       SubscriptBox[
        RowBox[{"Y", "\[Conjugate]"}], 
        RowBox[{"l", ",", "m"}]], 
       RowBox[{"(", 
        SubscriptBox[
         OverscriptBox[
          StyleBox["k",
           FontWeight->"Bold"], "^"], "i"], ")"}], 
       RowBox[{
        SubscriptBox["Y", 
         RowBox[{
          RowBox[{"l", "'"}], " ", 
          RowBox[{"m", "'"}]}]], "(", 
        OverscriptBox[
         StyleBox["r",
          FontWeight->"Bold"], "^"], ")"}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765711118488019*^9, 3.765711152726016*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     OverscriptBox["r", "^"],
     FontWeight->"Bold"], "=", 
    SubscriptBox[
     OverscriptBox[
      StyleBox["k",
       FontWeight->"Bold"], "^"], "f"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so we have:"
}], "Text",
 CellChangeTimes->{{3.76571218958744*^9, 3.765712211762566*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"i", "\[Rule]", "f"}]], "(", 
    RowBox[{
     OverscriptBox[
      SubscriptBox[
       StyleBox["k",
        FontWeight->"Bold"], "i"], "^"], ",", 
     SubscriptBox[
      OverscriptBox[
       StyleBox["k",
        FontWeight->"Bold"], "^"], "f"]}], ")"}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"4", "\[Pi]"}], 
     SqrtBox[
      RowBox[{
       SubscriptBox["k", "i"], 
       SubscriptBox["k", "f"]}]]], 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"l", ",", "m"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", 
        RowBox[{"l", "-", 
         RowBox[{"l", "'"}]}]], 
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["S", 
           RowBox[{"i", ",", "l", ",", 
            RowBox[{"m", ";", "f"}], ",", 
            RowBox[{"l", "'"}], ",", 
            RowBox[{"m", "'"}]}]], "-", 
          RowBox[{
           SubscriptBox["\[Delta]", 
            RowBox[{"f", ",", "i"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{
             RowBox[{"l", "'"}], ",", "l"}]], 
           SubscriptBox["\[Delta]", 
            RowBox[{
             RowBox[{"m", "'"}], ",", "m"}]]}]}], ")"}], 
        RowBox[{"2", "\[ImaginaryI]"}]], 
       SubscriptBox[
        RowBox[{"Y", "\[Conjugate]"}], 
        RowBox[{"l", ",", "m"}]], 
       RowBox[{"(", 
        SubscriptBox[
         OverscriptBox[
          StyleBox["k",
           FontWeight->"Bold"], "^"], "i"], ")"}], 
       RowBox[{
        SubscriptBox["Y", 
         RowBox[{
          RowBox[{"l", "'"}], " ", 
          RowBox[{"m", "'"}]}]], "(", 
        SubscriptBox[
         OverscriptBox[
          StyleBox["k",
           FontWeight->"Bold"], "^"], "f"], ")"}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765712216340337*^9, 3.765712288241984*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplification of coupled equations for spherical symmetry", \
"Subsection",
 CellChangeTimes->{{3.760287048352458*^9, 3.7602870559459476`*^9}, {
  3.7604454404737387`*^9, 3.76044545249972*^9}}],

Cell[TextData[{
 "A potential with spherical symmetry will have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["W", 
      RowBox[{"i", ",", "j"}]], "(", 
     StyleBox["r",
      FontWeight->"Bold"], ")"}], "=", 
    RowBox[{
     SubscriptBox["V", 
      RowBox[{"i", ",", "j"}]], "(", "r", ")"}]}], TraditionalForm]]],
 ", so "
}], "Text",
 CellChangeTimes->{{3.760286100989645*^9, 3.7602861421248913`*^9}, {
  3.760287020374095*^9, 3.760287082072083*^9}, {3.7602878430816307`*^9, 
  3.760287873752203*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["V", 
     RowBox[{
      RowBox[{"i", " ", "l", " ", "m"}], ",", " ", 
      RowBox[{"j", " ", 
       RowBox[{"l", "'"}], 
       RowBox[{"m", "'"}]}]}]], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"\[DifferentialD]", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"]}], 
      RowBox[{"\[DifferentialD]", "\[CapitalOmega]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "i"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", " ", "m"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
      RowBox[{"W", "(", 
       RowBox[{
        StyleBox["r",
         FontWeight->"Bold"], ",", 
        StyleBox["\[Xi]",
         FontWeight->"Bold"]}], ")"}], 
      RowBox[{
       SubscriptBox["\[CapitalUpsilon]", "j"], "(", 
       StyleBox["\[Xi]",
        FontWeight->"Bold"], ")"}], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{
         RowBox[{"l", "'"}], " ", 
         RowBox[{"m", "'"}]}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}], "=", 
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"\[DifferentialD]", "\[CapitalOmega]"}], 
      RowBox[{
       SubscriptBox["Y", 
        RowBox[{"l", " ", "m"}]], "(", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
      RowBox[{
       SubscriptBox["W", "ij"], "(", 
       StyleBox["r",
        FontWeight->"Bold"], ")"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["Y", 
         RowBox[{
          RowBox[{"l", "'"}], " ", 
          RowBox[{"m", "'"}]}]], "(", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], "."}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{3.7602870432935143`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["V", 
     RowBox[{
      RowBox[{"i", " ", "l", " ", "m"}], ",", " ", 
      RowBox[{"j", " ", 
       RowBox[{"l", "'"}], 
       RowBox[{"m", "'"}]}]}]], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["V", 
      RowBox[{"i", ",", "j"}]], "(", "r", ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"l", ",", 
      RowBox[{"l", "'"}]}]], 
    SubscriptBox["\[Delta]", 
     RowBox[{"m", ",", 
      RowBox[{"m", "'"}]}]]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760287085790411*^9, 3.760287109990961*^9}, {
  3.760287171174365*^9, 3.760287171332346*^9}}],

Cell["Therefore the coupled equations reduce to", "Text",
 CellChangeTimes->{{3.760287140040947*^9, 3.7602871525092688`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox["\[HBar]", "2"]}], 
        RowBox[{"2", "\[Mu]"}]], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{
          SubscriptBox["u", 
           RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["r", "2"]}]]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], 
        RowBox[{"l", "(", 
         RowBox[{"l", "+", "1"}], ")"}], 
        RowBox[{
         SubscriptBox["u", 
          RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
       RowBox[{"2", "\[Mu]", " ", 
        SuperscriptBox["r", "2"]}]]}], ")"}], "+", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", ",", 
       RowBox[{"l", "'"}], ",", 
       RowBox[{"m", "'"}]}]], 
     RowBox[{
      RowBox[{
       SubscriptBox["V", 
        RowBox[{"i", ",", "j"}]], "(", "r", ")"}], 
      SubscriptBox["\[Delta]", 
       RowBox[{"l", ",", 
        RowBox[{"l", "'"}]}]], 
      SubscriptBox["\[Delta]", 
       RowBox[{"m", ",", 
        RowBox[{"m", "'"}]}]], 
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"j", " ", 
         RowBox[{"l", "'"}], " ", 
         RowBox[{"m", "'"}]}]], "(", "r", ")"}]}]}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"E", "-", 
      SubscriptBox["E", "i"]}], ")"}], " ", 
    RowBox[{
     SubscriptBox["u", 
      RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760287153868581*^9, 3.760287175831249*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", " ", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[PartialD]", "2"], 
        RowBox[{
         SubscriptBox["u", 
          RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["r", "2"]}]]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"l", "(", 
        RowBox[{"l", "+", "1"}], ")"}], 
       RowBox[{
        SubscriptBox["u", 
         RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
      SuperscriptBox["r", "2"]], "-", 
     RowBox[{
      SubsuperscriptBox["k", "i", "2"], " ", 
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}]}], ")"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", "\[Mu]"}], 
      SuperscriptBox["\[HBar]", "2"]]}], 
    RowBox[{
     UnderscriptBox["\[Sum]", "j"], 
     RowBox[{
      RowBox[{
       SubscriptBox["V", 
        RowBox[{"i", ",", "j"}]], "(", "r", ")"}], 
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"j", " ", "l", " ", "m"}]], "(", "r", ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602871914738398`*^9, 3.7602872028194847`*^9}, {
  3.7602873243122463`*^9, 3.76028737083047*^9}, {3.760288630332951*^9, 
  3.7602886634746237`*^9}, {3.760288711357725*^9, 3.7602887165747957`*^9}}],

Cell[TextData[{
 "There is no ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " dependence anywhere, so solutions for the different ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " values associated with a particular ",
 Cell[BoxData[
  FormBox["l", TraditionalForm]]],
 " are all the same.  In practice, one solves each partial wave ",
 Cell[BoxData[
  FormBox["l", TraditionalForm]]],
 " separately, typically keeping only the first few since the partial wave \
expansion will converge quickly at low energy for short-range potentials."
}], "Text",
 CellChangeTimes->{{3.7602874454000893`*^9, 3.760287448882717*^9}, {
  3.7602875397188396`*^9, 3.760287556926321*^9}, {3.760288567840407*^9, 
  3.760288569513441*^9}, {3.7604454702418633`*^9, 3.760445586288568*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simple numerical example", "Subsection",
 CellChangeTimes->{{3.760287559793418*^9, 3.760287567849134*^9}}],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s try a simple two-channel example, for which we have \
two coupled Gaussians with Gaussian couplings.  Let also ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[HBar]", "=", "1"}], ",", 
    RowBox[{"\[Mu]", "=", 
     RowBox[{"1", "/", "2"}]}]}], TraditionalForm]]],
 ", "
}], "Text",
 CellChangeTimes->{{3.760287570627137*^9, 3.76028757986453*^9}, {
  3.760288723307602*^9, 3.7602887736620293`*^9}, {3.760288808619917*^9, 
  3.760288842464366*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", " ", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[PartialD]", "2"], 
        RowBox[{
         SubscriptBox["u", 
          RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["r", "2"]}]]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"l", "(", 
        RowBox[{"l", "+", "1"}], ")"}], 
       RowBox[{
        SubscriptBox["u", 
         RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}], 
      SuperscriptBox["r", "2"]], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"E", "-", 
        SubscriptBox["E", "i"]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"i", " ", "l", " ", "m"}]], "(", "r", ")"}]}]}], ")"}], "=", 
   RowBox[{"-", 
    RowBox[{
     UnderscriptBox["\[Sum]", "j"], 
     RowBox[{
      RowBox[{
       SubscriptBox["V", 
        RowBox[{"i", ",", "j"}]], "(", "r", ")"}], 
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"j", " ", "l", " ", "m"}]], "(", "r", ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{
  3.760288796159848*^9, {3.760288849331429*^9, 3.7602888637705097`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["V", 
     RowBox[{"i", ",", "j"}]], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["V", "11"], 
        SubscriptBox["V", "12"]},
       {
        SubscriptBox["V", "12"], 
        SubscriptBox["V", "22"]}
      }], ")"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "/", "b"}], ")"}], "2"]}]]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760288577457684*^9, 3.760288644611225*^9}, {
  3.760288757574716*^9, 3.760288788419289*^9}, {3.760288878490642*^9, 
  3.760288967526496*^9}}],

Cell[TextData[{
 "Here, ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 " is the range of the potential, which has the same shape in each channel.  \
Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "1"], "=", "0"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "2"], "=", "\[Epsilon]"}], TraditionalForm]]],
 ".  We must solve the coupled equations for each partial wave and match to \
the boundary condition,"
}], "Text",
 CellChangeTimes->{{3.7602889701602507`*^9, 3.760289016784246*^9}, {
  3.7602890660444727`*^9, 3.7602890870356827`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["M", 
     RowBox[{"j", ",", 
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}], 
     RowBox[{"(", 
      RowBox[{"i", ",", "l", ",", "m"}], ")"}]], "(", 
    RowBox[{
     SubscriptBox["k", "j"], "r"}], ")"}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"l", "'"}], ",", "l"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{
       RowBox[{"m", "'"}], ",", "m"}]], 
     RowBox[{
      SubscriptBox[
       OverscriptBox["s", "~"], "l"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       OverscriptBox["c", "~"], 
       RowBox[{"l", "'"}]], "(", 
      RowBox[{
       SubscriptBox["k", "j"], "r"}], ")"}], " ", 
     SubscriptBox["K", 
      RowBox[{"i", ",", "l", ",", 
       RowBox[{"m", ";", "j"}], ",", 
       RowBox[{"l", "'"}], ",", 
       RowBox[{"m", "'"}]}]]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7602890992372313`*^9, 3.760289144203772*^9}, {
   3.7604478520128593`*^9, 3.760447853412002*^9}, 3.761660383265889*^9}],

Cell[TextData[{
 "However, in general the solution will be of the form (using shorthand ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"i", ",", "l", ",", "m"}], ")"}], "=", "\[Beta]"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"j", ",", 
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}], ")"}], "=", "i"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")"
}], "Text",
 CellChangeTimes->{{3.761659639565856*^9, 3.761659740411867*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["u", "i", "\[Beta]"], "(", 
    RowBox[{
     SubscriptBox["k", "i"], "r"}], ")"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["s", "i"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}], ")"}], 
     SubscriptBox["I", 
      RowBox[{"i", " ", "\[Beta]"}]]}], "+", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "i"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], "r"}], ")"}], 
     SubscriptBox["J", 
      RowBox[{"i", " ", "\[Beta]"}]]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761659667039096*^9, 3.761659679868732*^9}, {
  3.76165974446745*^9, 3.7616598838296432`*^9}}],

Cell[TextData[{
 "Taking the Wronskian of both sides with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " gives: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"W", "(", 
      RowBox[{
       SubsuperscriptBox["u", "i", "\[Beta]"], ",", 
       SubscriptBox["s", "i"]}], ")"}], 
     RowBox[{"W", "(", 
      RowBox[{
       SubscriptBox["c", "i"], ",", 
       SubscriptBox["s", "i"]}], ")"}]], "=", 
    SubscriptBox["J", 
     RowBox[{"i", ",", "\[Beta]"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", while taking the Wronskian with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " gives: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"W", "(", 
      RowBox[{
       SubsuperscriptBox["u", "i", "\[Beta]"], ",", 
       SubscriptBox["c", "i"]}], ")"}], 
     RowBox[{"W", "(", 
      RowBox[{
       SubscriptBox["s", "i"], ",", 
       SubscriptBox["c", "i"]}], ")"}]], "=", 
    SubscriptBox["I", 
     RowBox[{"i", ",", "\[Beta]"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.761659894293232*^9, 3.761659942738852*^9}, {
  3.76166007192844*^9, 3.761660156326412*^9}, {3.76166021067411*^9, 
  3.7616602185358133`*^9}}],

Cell["So the matrix of linearly independent solutions", "Text",
 CellChangeTimes->{{3.761660278568243*^9, 3.761660284706238*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["u",
    FontWeight->"Bold"], 
   StyleBox["=",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{"s", " ", "I"}],
     FontWeight->"Bold"], 
    StyleBox["+",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["c",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox["J",
      FontWeight->"Bold"]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761660292483143*^9, 3.761660315808819*^9}}],

Cell[TextData[{
 "can be cast into the desired form by multiplying both sides by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["I",
     FontWeight->"Bold"], 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.761660326357777*^9, 3.761660341480122*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["u",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    SuperscriptBox[
     StyleBox["I",
      FontWeight->"Bold"], 
     RowBox[{"-", "1"}]]}], 
   StyleBox["=",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox["s",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    StyleBox["+",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["c",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox["J",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     SuperscriptBox[
      StyleBox["I",
       FontWeight->"Bold"], 
      RowBox[{"-", "1"}]]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7616603514231787`*^9, 3.7616603699905777`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["M",
    FontWeight->"Bold"], "=", 
   RowBox[{
    RowBox[{
     StyleBox["u",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     SuperscriptBox[
      StyleBox["I",
       FontWeight->"Bold"], 
      RowBox[{"-", "1"}]]}], 
    StyleBox["=",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["s",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox["+",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["c",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["K",
       FontWeight->"Bold"]}]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761660396433324*^9, 3.7616604094802647`*^9}}],

Cell["with ", "Text",
 CellChangeTimes->{{3.761660410925229*^9, 3.761660427822792*^9}, 
   3.761661006249016*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["K",
    FontWeight->"Bold"], "=", 
   RowBox[{
    StyleBox["J",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    RowBox[{
     SuperscriptBox[
      StyleBox["I",
       FontWeight->"Bold"], 
      RowBox[{"-", "1"}]], "."}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{3.761661007678165*^9}],

Cell[TextData[{
 "This is the most straight-forward way of calculating the K matrix that I \
can think of.  Once we have the linearly independent solutions indexed by ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (one for each open channel), we can easily calculate the Wronskians needed \
to find the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", ",", "J"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " matrices, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", "=", 
    RowBox[{"J", " ", 
     SuperscriptBox["I", 
      RowBox[{"-", "1"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is easy."
}], "Text",
 CellChangeTimes->{{3.7616610150097647`*^9, 3.7616611210846577`*^9}}],

Cell[TextData[{
 "Here, we define ",
 Cell[BoxData[
  FormBox["Y", TraditionalForm]]],
 " is the \[OpenCurlyDoubleQuote]log-derivative \
matrix\[CloseCurlyDoubleQuote].  "
}], "Text",
 CellChangeTimes->{{3.760445648510552*^9, 3.76044566766934*^9}, {
  3.7604476901323833`*^9, 3.760447692164098*^9}, {3.760447837092507*^9, 
  3.7604478387627773`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["Y",
    FontWeight->"Bold"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      StyleBox[
       RowBox[{"u", "'"}],
       FontWeight->"Bold"], ")"}], 
     RowBox[{"(", 
      SuperscriptBox[
       StyleBox["u",
        FontWeight->"Bold"], 
       RowBox[{"-", "1"}]], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      StyleBox["M",
       FontWeight->"Bold"], "'"}], 
     SuperscriptBox[
      StyleBox["M",
       FontWeight->"Bold"], 
      RowBox[{"-", "1"}]]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760445675323925*^9, 3.7604457130509777`*^9}, {
  3.76166071740478*^9, 3.761660725127882*^9}, {3.76166089159728*^9, 
  3.761660915769611*^9}}],

Cell["\<\
The log-derivative matrix (and its inverse the R matrix) is invariant under \
linear transformations.\
\>", "Text",
 CellChangeTimes->{{3.7616609418367653`*^9, 3.761660968135851*^9}}],

Cell["Recall we had as a boundary condition", "Text",
 CellChangeTimes->{{3.760445726592321*^9, 3.760445732873912*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["u",
     FontWeight->"Bold"], 
    StyleBox["\[Rule]",
     FontWeight->"Plain"], 
    StyleBox["M",
     FontWeight->"Bold"]}], 
   StyleBox["=",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox["s",
     FontWeight->"Bold"], "+", 
    StyleBox[" ",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["c",
      FontWeight->"Bold"], " ", 
     StyleBox["K",
      FontWeight->"Bold"]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760445736939687*^9, 3.76044575041757*^9}, {
  3.760446610581113*^9, 3.760446611284528*^9}, {3.760467647014398*^9, 
  3.760467647290863*^9}, {3.761660871668962*^9, 3.761660871979354*^9}}],

Cell["So", "Text",
 CellChangeTimes->{{3.760445756431507*^9, 3.7604457566486607`*^9}}],

Cell["we expect", "Text",
 CellChangeTimes->{{3.7604457615459414`*^9, 3.760445763011059*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["u",
      FontWeight->"Bold"], "'"}], 
    SuperscriptBox[
     StyleBox["u",
      FontWeight->"Bold"], 
     RowBox[{"-", "1"}]]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        StyleBox["s",
         FontWeight->"Bold"], "'"}], "+", " ", 
       RowBox[{
        RowBox[{
         StyleBox["c",
          FontWeight->"Bold"], "'"}], 
        StyleBox["K",
         FontWeight->"Bold"]}]}], ")"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        StyleBox["s",
         FontWeight->"Bold"], "+", " ", 
        StyleBox[
         RowBox[{"c", " ", "K"}],
         FontWeight->"Bold"]}], ")"}], 
      RowBox[{"-", "1"}]]}], "=", 
    StyleBox["Y",
     FontWeight->"Bold"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7604457655729427`*^9, 3.760445830696019*^9}, {
  3.760446604325273*^9, 3.760446638715024*^9}, {3.760467649338366*^9, 
  3.760467651554435*^9}}],

Cell[TextData[{
 "Solving for ",
 Cell[BoxData[
  FormBox[
   StyleBox["K",
    FontWeight->"Bold"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.760445855988586*^9, 3.7604458587375307`*^9}, {
  3.760446558139057*^9, 3.76044655813913*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["s",
      FontWeight->"Bold"], "'"}], "+", " ", 
    RowBox[{
     RowBox[{
      StyleBox["c",
       FontWeight->"Bold"], "'"}], 
     StyleBox["K",
      FontWeight->"Bold"]}]}], "=", 
   RowBox[{
    StyleBox[
     RowBox[{"Y", " ", "s"}],
     FontWeight->"Bold"], 
    StyleBox["+",
     FontWeight->"Bold"], 
    RowBox[{
     StyleBox["Y",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox["c",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox["K",
      FontWeight->"Bold"], " "}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760446526885936*^9, 3.76044653634319*^9}, {
  3.760446618181519*^9, 3.760446657168041*^9}, {3.760467659292182*^9, 
  3.760467664555928*^9}, {3.760887932336267*^9, 3.760887934496873*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["c",
       FontWeight->"Bold"], "'"}], 
     StyleBox["K",
      FontWeight->"Bold"]}], " ", "-", 
    RowBox[{
     StyleBox["Y",
      FontWeight->"Bold"], " ", 
     StyleBox["c",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox["K",
      FontWeight->"Bold"]}]}], "=", 
   RowBox[{
    StyleBox[
     RowBox[{"Y", " ", "s"}],
     FontWeight->"Bold"], 
    StyleBox["-",
     FontWeight->"Bold"], 
    RowBox[{
     StyleBox["s",
      FontWeight->"Bold"], "'"}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{
  3.76044780546546*^9, {3.760467670268211*^9, 3.760467673048905*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[" ",
    FontWeight->"Bold"], 
   RowBox[{
    StyleBox["K",
     FontWeight->"Bold"], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       StyleBox["(",
        FontWeight->"Bold"], 
       RowBox[{
        RowBox[{
         StyleBox["c",
          FontWeight->"Bold"], "'"}], " ", "-", 
        RowBox[{
         StyleBox["Y",
          FontWeight->"Bold"], " ", 
         StyleBox["c",
          FontWeight->"Bold"]}]}], 
       StyleBox[")",
        FontWeight->"Bold"]}], 
      RowBox[{"-", "1"}]], 
     RowBox[{"(", 
      RowBox[{
       StyleBox[
        RowBox[{"Y", " ", "s"}],
        FontWeight->"Bold"], 
       StyleBox["-",
        FontWeight->"Bold"], 
       RowBox[{
        StyleBox["s",
         FontWeight->"Bold"], "'"}]}], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7608879566216793`*^9, 3.760887983996698*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["K",
    FontWeight->"Bold"], "=", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         StyleBox["c",
          FontWeight->"Bold"], "'"}], "-", 
        RowBox[{
         StyleBox["Y",
          FontWeight->"Bold"], " ", 
         StyleBox["c",
          FontWeight->"Bold"]}]}], 
       StyleBox[" ",
        FontWeight->"Bold"], 
       StyleBox[")",
        FontWeight->"Bold"]}], 
      RowBox[{"-", "1"}]]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       StyleBox["s",
        FontWeight->"Bold"], "'"}], "-", 
      StyleBox[
       RowBox[{"Y", " ", "s"}],
       FontWeight->"Bold"]}], ")"}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.760446654011819*^9, 3.760446690150737*^9}, {
   3.7604676927389717`*^9, 3.7604677026740627`*^9}, 3.7604677579126577`*^9}],

Cell[TextData[{
 "The boundary condition at the origin is the same for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["u", 
     RowBox[{"j", ",", 
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}], 
     RowBox[{"(", 
      RowBox[{"i", ",", "l", ",", "m"}], ")"}]], "(", 
    RowBox[{
     SubscriptBox["k", "j"], "r"}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.7602890992372313`*^9, 3.760289144203772*^9}}],
 ", namely that "
}], "Text",
 CellChangeTimes->{{3.76028917160529*^9, 3.7602891820519133`*^9}, {
  3.7602892224025507`*^9, 3.76028925912849*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["u", 
     RowBox[{"j", ",", 
      RowBox[{"l", "'"}], ",", 
      RowBox[{"m", "'"}]}], 
     RowBox[{"(", 
      RowBox[{"i", ",", "l", ",", "m"}], ")"}]], "(", "0", ")"}], "=", "0"}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760289261399745*^9, 3.7602892682161493`*^9}}],

Cell[TextData[{
 "But to match the asymptotic boundary condition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["u", 
      RowBox[{"j", ",", 
       RowBox[{"l", "'"}], ",", 
       RowBox[{"m", "'"}]}], 
      RowBox[{"(", 
       RowBox[{"i", ",", "l", ",", "m"}], ")"}]], "(", 
     RowBox[{
      SubscriptBox["k", "j"], "r"}], ")"}], "\[Rule]", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Delta]", 
       RowBox[{"j", ",", "i"}]], 
      SubscriptBox["\[Delta]", 
       RowBox[{
        RowBox[{"l", "'"}], ",", "l"}]], 
      SubscriptBox["\[Delta]", 
       RowBox[{
        RowBox[{"m", "'"}], ",", "m"}]], 
      RowBox[{
       SubscriptBox[
        OverscriptBox["s", "~"], "l"], "(", 
       RowBox[{
        SubscriptBox["k", "i"], "r"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox["c", "~"], 
        RowBox[{"l", "'"}]], "(", 
       RowBox[{
        SubscriptBox["k", "j"], "r"}], ")"}], " ", 
      SubscriptBox["K", 
       RowBox[{"i", ",", "l", ",", 
        RowBox[{"m", ";", "j"}], ",", 
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]]}]}]}], TraditionalForm]]],
 ", we need a set ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]]],
 " linearly independent solution vectors (one for each open channel).  We do \
this by setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["u", "j"], "'"}], 
     RowBox[{"(", 
      RowBox[{"r", "\[Rule]", "0"}], ")"}]}], "=", 
    SubscriptBox["\[Delta]", 
     RowBox[{"j", ",", "i"}]]}], TraditionalForm]]],
 ".  "
}], "Text",
 CellChangeTimes->{{3.7604478624238453`*^9, 3.7604479661036177`*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s first figure out what the bound state structure of a \
single channel potential looks like.\
\>", "Text",
 CellChangeTimes->{{3.7604612504166393`*^9, 3.760461265530319*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"u", ",", "a", ",", "l"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.760461484445665*^9, 3.760461498270171*^9}, {
  3.760461805982617*^9, 3.760461806420911*^9}, {3.760467925210265*^9, 
  3.760467928656272*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vgauss", "[", 
   RowBox[{"V0_", ",", "a_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"V0", "-", 
   RowBox[{"V0", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "/", 
      SuperscriptBox["a", "2"]}]]}]}]}]], "Input",
 CellChangeTimes->{{3.758890029060527*^9, 3.758890079193564*^9}, 
   3.758890297831205*^9, {3.760462386607439*^9, 3.760462418776943*^9}, {
   3.760462769795343*^9, 3.760462770241374*^9}, {3.760463076399395*^9, 
   3.7604631370205297`*^9}, {3.760463322560541*^9, 3.760463349717876*^9}, {
   3.760467783067322*^9, 3.7604677882524023`*^9}, {3.7604680749642153`*^9, 
   3.7604680770663633`*^9}, {3.76046817594525*^9, 3.760468213804969*^9}, {
   3.760527837037397*^9, 3.760527842568421*^9}, {3.760801360529516*^9, 
   3.760801363741158*^9}},
 CellID->584351901],

Cell["\<\
Find the 10 smallest eigenvalues and eigenfunctions on a refined mesh:\
\>", "ExampleText",
 CellChangeTimes->{{3.758898289861843*^9, 3.758898302146721*^9}},
 CellID->759682376],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V0", "=", "10"}], ";", 
  RowBox[{"rmax", "=", "20"}], ";", 
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "funs"}], "}"}], "=", 
   RowBox[{"NDEigensystem", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"u", "[", "r", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Vgauss", "[", 
         RowBox[{"V0", ",", "a", ",", "r"}], "]"}], 
        RowBox[{"u", "[", "r", "]"}]}], "+", 
       RowBox[{"NeumannValue", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["10", "10"], 
          RowBox[{"u", "[", "r", "]"}]}], ",", 
         RowBox[{"r", "\[Equal]", "0"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"u", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "rmax"}], "}"}], ",", "2", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<SpatialDiscretization\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<FiniteElement\>\"", ",", 
          RowBox[{"\"\<MeshOptions\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<MaxCellMeasure\>\"", "\[Rule]", "0.1"}], "}"}]}]}], 
         "}"}]}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.760467940593279*^9, 3.7604680094615307`*^9}, {
  3.760468129183395*^9, 3.760468173161159*^9}, {3.760468223453679*^9, 
  3.760468237263159*^9}, {3.760468268805904*^9, 3.760468271162813*^9}, {
  3.7604866544766703`*^9, 3.760486671046296*^9}, {3.7604867115341377`*^9, 
  3.7604867124169893`*^9}, {3.76048684269737*^9, 3.7604868446428633`*^9}, {
  3.760486887495337*^9, 3.760486906818161*^9}, {3.760486976552658*^9, 
  3.760487025891609*^9}, {3.760487138356318*^9, 3.7604871497637167`*^9}, {
  3.760487305405497*^9, 3.760487305573955*^9}, {3.760527846193276*^9, 
  3.760527855680561*^9}, {3.760527893201016*^9, 3.760527894030076*^9}, {
  3.760801271996097*^9, 3.760801272081757*^9}, {3.760801367079418*^9, 
  3.760801368342031*^9}}],

Cell[CellGroupData[{

Cell[BoxData["vals"], "Input",
 CellChangeTimes->{{3.7604625875348454`*^9, 3.760462589725222*^9}, {
  3.760462647483869*^9, 3.7604626510973253`*^9}, {3.760463000651762*^9, 
  3.760463010569366*^9}, {3.760463670528405*^9, 3.760463671095282*^9}},
 CellID->682200192],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.456614844898123`", ",", "10.006852242798438`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.758889977856668*^9, {3.758890072995689*^9, 3.7588900822279797`*^9}, 
   3.75889829542262*^9, 3.760461876874567*^9, 3.76046244462493*^9, 
   3.760462603444031*^9, 3.7604626517505293`*^9, 3.760462705291011*^9, 
   3.760462778058338*^9, 3.760462899422515*^9, {3.760463001757449*^9, 
   3.7604630110710917`*^9}, 3.7604634362305326`*^9, 3.7604636721752777`*^9, 
   3.760468022594748*^9, {3.7604680703875637`*^9, 3.760468081995471*^9}, 
   3.760468135436453*^9, 3.760468186956159*^9, {3.760468228283381*^9, 
   3.760468239435536*^9}, 3.760468273822872*^9, 3.760486674184122*^9, 
   3.760486849149131*^9, 3.7604869148357353`*^9, {3.760486980869604*^9, 
   3.760486997455167*^9}, 3.76048704205208*^9, 3.7604871602272177`*^9, 
   3.760487308707603*^9, {3.760527868507773*^9, 3.7605278957887363`*^9}, 
   3.760801370433784*^9, 3.761298944595333*^9, 3.761583394317113*^9, 
   3.761662130706613*^9, 3.761662435310505*^9, 3.7650170262101717`*^9},
 ImageSize->{382, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]],

Cell["\<\
Note that only the eigenvalues less than V0 are really bound states, the \
others are not bound by the potential.\
\>", "Text",
 CellChangeTimes->{{3.760487051828826*^9, 3.760487078429831*^9}, {
  3.760801371236114*^9, 3.760801373107373*^9}}],

Cell["\<\
Visualize the eigenfunctions offset by the respective eigenvalue:\
\>", "ExampleText",
 CellChangeTimes->{{3.758898296136777*^9, 3.758898298842918*^9}, {
  3.760487416891386*^9, 3.76048741807813*^9}},
 CellID->705210652],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"funs", "+", "vals"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "rmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"V", "[", 
      RowBox[{"V0", ",", "r"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "rmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameStyle", "\[Rule]", "Large"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7604624712762136`*^9, 3.760462474326426*^9}, {
  3.760462663951518*^9, 3.7604626754828987`*^9}, {3.760462797455183*^9, 
  3.7604628221253147`*^9}, {3.760463489699415*^9, 3.76046350880294*^9}, {
  3.760487096829362*^9, 3.760487119316307*^9}, {3.760487170482382*^9, 
  3.760487187649603*^9}, {3.7604872460735617`*^9, 3.760487256095028*^9}, {
  3.760487339329418*^9, 3.760487362351242*^9}, {3.760526113715567*^9, 
  3.760526118786409*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
35HNHBGVVRqg9X+XLcj8Wl/XAMX/+3/x/2p6
        "]]},
      Annotation[#, "Charting`Private`Tag$1780#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$1780#2"]& ]}, {}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, 7.4566148448982785`},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.760462822832739*^9, {3.760463503130313*^9, 3.7604635129807053`*^9}, 
   3.760487192532941*^9, {3.7604872487911453`*^9, 3.7604872580880404`*^9}, {
   3.760487336176668*^9, 3.760487365344376*^9}, 3.760526122201578*^9, {
   3.760527889178029*^9, 3.760527901371797*^9}, 3.760801375235785*^9, 
   3.761298947242371*^9, 3.761583394729424*^9, 3.761662133079443*^9, 
   3.761662438266354*^9, 3.7650170266162443`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"se", "[", 
    RowBox[{"l_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{
    SqrtBox[
     FractionBox["k", 
      RowBox[{"\[Pi]", " "}]]], "r", " ", 
    RowBox[{"SphericalBesselJ", "[", 
     RowBox[{"l", ",", 
      RowBox[{"k", " ", "r"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ce", "[", 
    RowBox[{"l_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", 
     SqrtBox[
      FractionBox["k", 
       RowBox[{"\[Pi]", " "}]]]}], "r", " ", 
    RowBox[{"SphericalBesselY", "[", 
     RowBox[{"l", ",", 
      RowBox[{"k", " ", "r"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sp", "[", 
    RowBox[{"l_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"se", "[", 
       RowBox[{"l", ",", "k", ",", "r"}], "]"}], ",", "r"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cp", "[", 
    RowBox[{"l_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"ce", "[", 
       RowBox[{"l", ",", "k", ",", "r"}], "]"}], ",", "r"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.760446739302959*^9, 3.7604468265501013`*^9}, {
   3.7604468589448833`*^9, 3.760446874142839*^9}, {3.760799967110409*^9, 
   3.760799987643536*^9}, 3.7616620503191843`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"l1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V11", "=", 
   RowBox[{"-", "40.0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V22", "=", 
   RowBox[{"-", "50.0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V12", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalEpsilon]", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmin", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eth", "=", 
   RowBox[{"{", 
    RowBox[{"0.0", ",", "40.0"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.760463895869998*^9, {3.7604652795835257`*^9, 3.7604652937003193`*^9}, {
   3.760487529196664*^9, 3.760487537759488*^9}, {3.760487574747527*^9, 
   3.760487575163813*^9}, {3.7604876640009117`*^9, 3.760487664080207*^9}, 
   3.760487910979722*^9, {3.760526573150894*^9, 3.760526573692224*^9}, {
   3.760526765457453*^9, 3.760526765543088*^9}, {3.760526810702909*^9, 
   3.760526822534019*^9}, {3.760527104178308*^9, 3.760527105177443*^9}, {
   3.7605279218120747`*^9, 3.7605279227794456`*^9}, {3.76053652887854*^9, 
   3.760536528961141*^9}, {3.760536915615451*^9, 3.760536937121585*^9}, {
   3.7608011134965343`*^9, 3.7608011192056704`*^9}, {3.760838112714916*^9, 
   3.7608381167451077`*^9}, {3.7608381779830837`*^9, 3.760838178886475*^9}, {
   3.760838215471702*^9, 3.760838272486395*^9}, {3.760986758401897*^9, 
   3.760986782001977*^9}, {3.760986843620055*^9, 3.760986843678916*^9}, {
   3.7609868749459963`*^9, 3.760986906691394*^9}, {3.760986944311584*^9, 
   3.7609869444168177`*^9}, {3.760987219474265*^9, 3.760987220608313*^9}, {
   3.7609877433249187`*^9, 3.7609877595457478`*^9}, {3.7609878547729*^9, 
   3.760987876551284*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol1", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"u1", "''"}], "[", "r", "]"}]}], "-", 
         RowBox[{"\[CapitalEpsilon]", " ", 
          RowBox[{"u1", "[", "r", "]"}]}]}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"V11", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["r", "2"]}], "/", 
                SuperscriptBox["a", "2"]}], "]"}]}], "+", 
             FractionBox[
              RowBox[{"l1", 
               RowBox[{"(", 
                RowBox[{"l1", "+", "1"}], ")"}]}], 
              SuperscriptBox["r", "2"]], "+", 
             RowBox[{"Eth", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], 
          RowBox[{"u1", "[", "r", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", "V12", ")"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["r", "2"]}], "/", 
            SuperscriptBox["a", "2"]}], "]"}], 
          RowBox[{"u2", "[", "r", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"u2", "''"}], "[", "r", "]"}]}], "-", 
         RowBox[{"\[CapitalEpsilon]", " ", 
          RowBox[{"u2", "[", "r", "]"}]}]}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", "V12", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["r", "2"]}], "/", 
            SuperscriptBox["a", "2"]}], "]"}], 
          RowBox[{"u1", "[", "r", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"V22", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["r", "2"]}], "/", 
               SuperscriptBox["a", "2"]}], "]"}]}], "+", 
            FractionBox[
             RowBox[{"l2", 
              RowBox[{"(", 
               RowBox[{"l2", "+", "1"}], ")"}]}], 
             SuperscriptBox["r", "2"]], "+", 
            RowBox[{"Eth", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], 
          RowBox[{"u2", "[", "r", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u1", "[", "rmin", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"u1", "'"}], "[", "rmin", "]"}], "\[Equal]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u2", "[", "rmin", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u2", "[", "rmax", "]"}], "\[Equal]", "0"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u1", "[", "r", "]"}], ",", 
       RowBox[{"u2", "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "\[Rule]", "\"\<ExplicitRungeKutta\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760289298112718*^9, 3.760289559014316*^9}, {
   3.760289660114814*^9, 3.760289715558907*^9}, {3.760289837480768*^9, 
   3.760289959932892*^9}, {3.760290522108724*^9, 3.760290546803*^9}, {
   3.760290584915709*^9, 3.7602906107654667`*^9}, 3.7602907024294024`*^9, {
   3.7602908248044252`*^9, 3.760290829650358*^9}, 3.760290968768178*^9, {
   3.7602910011258297`*^9, 3.76029102691086*^9}, {3.760291074563528*^9, 
   3.760291101608306*^9}, {3.760295613689272*^9, 3.760295614022181*^9}, {
   3.760295671124189*^9, 3.760295692279748*^9}, {3.760295744545409*^9, 
   3.760295798461917*^9}, {3.7603617617615757`*^9, 3.7603618801003027`*^9}, {
   3.760362088299526*^9, 3.760362182165002*^9}, {3.7603622155940228`*^9, 
   3.760362260068877*^9}, {3.760362303362267*^9, 3.7603623456208563`*^9}, 
   3.7603624133155212`*^9, {3.76036270370453*^9, 3.7603627576406803`*^9}, {
   3.76036285860331*^9, 3.7603628768432207`*^9}, {3.7603629119599237`*^9, 
   3.7603629698201723`*^9}, {3.7603655013473663`*^9, 3.760365555071097*^9}, {
   3.760370250254034*^9, 3.760370269252935*^9}, {3.760370540010907*^9, 
   3.760370571689014*^9}, {3.760370601896635*^9, 3.760370667319703*^9}, {
   3.760370819447657*^9, 3.760370912158787*^9}, {3.760370973769594*^9, 
   3.760370994326984*^9}, {3.760371063531157*^9, 3.76037111850076*^9}, {
   3.760371203102269*^9, 3.760371204740012*^9}, 3.7603784918559723`*^9, {
   3.760378522502902*^9, 3.760378551694223*^9}, {3.760378610249859*^9, 
   3.76037862156283*^9}, {3.7603786629616337`*^9, 3.760378711893034*^9}, {
   3.7603787520605993`*^9, 3.760378776593272*^9}, {3.7603788097613773`*^9, 
   3.760378838049327*^9}, {3.760378874166945*^9, 3.760378913283492*^9}, 
   3.760442430270956*^9, {3.760442687085631*^9, 3.760442710553391*^9}, {
   3.760443434931081*^9, 3.7604434431476097`*^9}, {3.760447251488379*^9, 
   3.76044725591896*^9}, 3.7604476738255243`*^9, {3.760447995423705*^9, 
   3.760447996947336*^9}, {3.760463559275723*^9, 3.7604635645681267`*^9}, {
   3.760463881757642*^9, 3.760463894110568*^9}, 3.760487572172614*^9, {
   3.760488190634225*^9, 3.760488200026075*^9}, {3.7605266423129263`*^9, 
   3.760526675191626*^9}, {3.76052673848564*^9, 3.760526743931376*^9}, {
   3.760526788028369*^9, 3.760526797935165*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"u1", "[", "r", "]"}], "/.", "sol1"}], ",", 
     RowBox[{
      RowBox[{"u2", "[", "r", "]"}], "/.", "sol1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\!\(\*SubscriptBox[
StyleBox[\"u\",
FontSlant->\"Italic\"], \"i\"]\)\!\(\*
StyleBox[\"(\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\")\",
FontSlant->\"Italic\"]\)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7605266930625*^9, 3.760526725091762*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
/D8DCg0Q
       "]]},
     Annotation[#, "Charting`Private`Tag$2035#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$2035#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\n StyleBox[\\\"u\\\",\\nFontSlant->\\\"Italic\
\\\"], \\\"i\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"(\\\",\\nFontSlant->\\\"Italic\\\
\"]\\)\\!\\(\\*\\nStyleBox[\\\"r\\\",\\nFontSlant->\\\"Italic\\\"]\\)\\!\\(\\*\
\\nStyleBox[\\\")\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"\\!\\(\\*\\nStyleBox[\\\"r\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.760526704043248*^9, 3.760526825188169*^9}, 
   3.76052711057365*^9, 3.760527930887319*^9, 3.760536533119934*^9, {
   3.7605369287700443`*^9, 3.7605369402317038`*^9}, 3.760799992557967*^9, 
   3.760801124865597*^9, 3.7608381198430777`*^9, 3.760838185755515*^9, {
   3.7608382245807734`*^9, 3.760838274588934*^9}, {3.760986744487052*^9, 
   3.760986786012833*^9}, 3.760986846746234*^9, {3.760986879002427*^9, 
   3.7609869107620564`*^9}, 3.7609869480109873`*^9, 3.760987223383219*^9, {
   3.7609877486365623`*^9, 3.7609877713712254`*^9}, {3.7609878599650497`*^9, 
   3.760987879311545*^9}, 3.761298956674636*^9, 3.761583395561406*^9, 
   3.7616620648022118`*^9, 3.761662143489216*^9, 3.761662312252697*^9, 
   3.761662445206277*^9, 3.765017027176079*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindK", "[", 
   RowBox[{
   "l1_", ",", "l2_", ",", "a_", ",", "V11_", ",", "V22_", ",", "V12_", ",", 
    "Eth_", ",", "rmin_", ",", "rmax_", ",", "\[CapitalEpsilon]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "K", ",", "r", ",", "u1", ",", "u2", ",", "Y", ",", "sol1", ",", "k"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sol1", "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"u1", "''"}], "[", "r", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"V11", " ", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["r", "2"]}], "/", 
                  SuperscriptBox["a", "2"]}], "]"}]}], "+", 
               FractionBox[
                RowBox[{"l1", 
                 RowBox[{"(", 
                  RowBox[{"l1", "+", "1"}], ")"}]}], 
                SuperscriptBox["r", "2"]], "+", 
               RowBox[{"Eth", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}], 
             RowBox[{"u1", "[", "r", "]"}]}], "+", 
            RowBox[{"V12", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["r", "2"]}], "/", 
               SuperscriptBox["a", "2"]}], "]"}], 
             RowBox[{"u2", "[", "r", "]"}]}]}], "\[Equal]", 
           RowBox[{"\[CapitalEpsilon]", " ", 
            RowBox[{"u1", "[", "r", "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"u2", "''"}], "[", "r", "]"}]}], "+", 
            RowBox[{"V12", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["r", "2"]}], "/", 
               SuperscriptBox["a", "2"]}], "]"}], 
             RowBox[{"u1", "[", "r", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"V22", " ", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["r", "2"]}], "/", 
                  SuperscriptBox["a", "2"]}], "]"}]}], "+", 
               FractionBox[
                RowBox[{"l2", 
                 RowBox[{"(", 
                  RowBox[{"l2", "+", "1"}], ")"}]}], 
                SuperscriptBox["r", "2"]], "+", 
               RowBox[{"Eth", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], 
             RowBox[{"u2", "[", "r", "]"}]}]}], "\[Equal]", 
           RowBox[{"\[CapitalEpsilon]", " ", 
            RowBox[{"u2", "[", "r", "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"u1", "[", "rmin", "]"}], "\[Equal]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"u1", "'"}], "[", "rmin", "]"}], "\[Equal]", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"u2", "[", "rmin", "]"}], "\[Equal]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[CapitalEpsilon]", "<", 
             RowBox[{"Eth", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"u2", "[", "rmax", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"u2", "'"}], "[", "rmin", "]"}], "\[Equal]", "0"}]}], 
           "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u1", "[", "r", "]"}], ",", 
          RowBox[{"u2", "[", "r", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Method", "\[Rule]", "\"\<ExplicitRungeKutta\>\""}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"k", "=", 
      SqrtBox[
       RowBox[{"\[CapitalEpsilon]", "-", 
        RowBox[{"Eth", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Y", "=", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"u1", "[", "r", "]"}], "/.", 
           RowBox[{"sol1", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "r"}], "]"}], "/.", 
       
       RowBox[{"r", "\[Rule]", "rmax"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"K", "=", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"sp", "[", 
           RowBox[{"0", ",", "k", ",", "rmax"}], "]"}], "-", 
          RowBox[{"Y", " ", 
           RowBox[{"se", "[", 
            RowBox[{"0", ",", "k", ",", "rmax"}], "]"}]}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"cp", "[", 
           RowBox[{"0", ",", "k", ",", "rmax"}], "]"}], " ", "-", " ", 
          RowBox[{"Y", " ", 
           RowBox[{"ce", "[", 
            RowBox[{"0", ",", "k", ",", "rmax"}], "]"}]}]}], ")"}]]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->{{3.760463785489588*^9, 3.760463907884902*^9}, {
   3.7604639536465607`*^9, 3.7604639552781773`*^9}, {3.76046406298223*^9, 
   3.760464067316107*^9}, {3.760464104756826*^9, 3.760464276593796*^9}, {
   3.760464344727811*^9, 3.760464435367854*^9}, {3.760488086145154*^9, 
   3.760488088462756*^9}, {3.760536603634328*^9, 3.76053664181698*^9}, {
   3.760799886227038*^9, 3.760799898132492*^9}, {3.7607999314095697`*^9, 
   3.7607999484285927`*^9}, {3.760800020785405*^9, 3.760800085436734*^9}, {
   3.7608002278641043`*^9, 3.7608002507864943`*^9}, {3.760800384784164*^9, 
   3.7608003860060453`*^9}, {3.760800436114058*^9, 3.760800437149988*^9}, {
   3.760801010090539*^9, 3.760801014193609*^9}, {3.760836628787183*^9, 
   3.7608366323390017`*^9}, 3.760888006935258*^9, {3.7616622176270733`*^9, 
   3.761662218169013*^9}, {3.761662386786969*^9, 3.7616623876011353`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Kdat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"EE", ",", 
       RowBox[{"FindK", "[", 
        RowBox[{"0", ",", "0", ",", "1", ",", 
         RowBox[{"-", "1.0"}], ",", 
         RowBox[{"-", "10.0"}], ",", "1.0", ",", "Eth", ",", "rmin", ",", 
         "rmax", ",", "EE"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"EE", ",", "0.01", ",", "9.9", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760464658614422*^9, 3.760464717240347*^9}, 
   3.7604648014709377`*^9, 3.76046487095011*^9, 3.760464983849264*^9, {
   3.760526858659697*^9, 3.76052686089879*^9}, {3.760527079005144*^9, 
   3.760527094857325*^9}, {3.7605272892416697`*^9, 3.7605272893509607`*^9}, 
   3.760527944859088*^9, {3.760528006438838*^9, 3.7605280182535954`*^9}, {
   3.7605280519955053`*^9, 3.760528054683057*^9}, {3.760801022686965*^9, 
   3.7608010237344227`*^9}, {3.7608011944151773`*^9, 3.760801200897887*^9}, 
   3.7616623236990843`*^9, 3.7616624612953653`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Kdat", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.761662197049221*^9, 3.761662210184814*^9}, {
  3.7616624552778187`*^9, 3.761662455395166*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.01`", ",", "0.06966989394130325`"}], "}"}]], "Output",
 CellChangeTimes->{{3.76166219932909*^9, 3.761662210572031*^9}, 
   3.761662263494931*^9, 3.761662328934227*^9, 3.7616623950146437`*^9, 
   3.761662455888329*^9, 3.761662505983617*^9, 3.765017068906052*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Kdat", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Energy/(\!\(\*SuperscriptBox[\(\[HBar]\), \
\(2\)]\)/2\!\(\*SuperscriptBox[\(\[Mu]a\), \(2\)]\))\>\"", ",", 
      "\"\<tan \[Delta]\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76046471130578*^9, 3.76046473338358*^9}, {
   3.760465054257175*^9, 3.760465054886938*^9}, {3.760527075116304*^9, 
   3.760527081610579*^9}, {3.7605276571010017`*^9, 3.760527724351461*^9}, 
   3.761662476331896*^9, {3.761662521658807*^9, 3.761662530149028*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
5HbemXnFC71SDixu2jusuJhH/gUHObPO
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"tan \[Delta]\"", TraditionalForm], None}, {
     FormBox[
     "\"Energy/(\\!\\(\\*SuperscriptBox[\\(\[HBar]\\), \
\\(2\\)]\\)/2\\!\\(\\*SuperscriptBox[\\(\[Mu]a\\), \\(2\\)]\\))\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 9.860000000000001}, {0, 0.3346915753160363}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.760527220539453*^9, 3.760527311945757*^9, {3.76052769095352*^9, 
   3.760527724868939*^9}, 3.760527989705648*^9, 3.76052809982738*^9, 
   3.760536582675037*^9, 3.760536955708048*^9, 3.760799909502249*^9, {
   3.760800004197328*^9, 3.760800030571563*^9}, {3.76080007737184*^9, 
   3.76080009482159*^9}, 3.760800218792235*^9, 3.7608002617566223`*^9, 
   3.760800447049656*^9, 3.760801035796212*^9, 3.760801148161591*^9, 
   3.760801220044091*^9, 3.760888056766934*^9, 3.761299003153364*^9, 
   3.761583439791836*^9, 3.761662118304991*^9, 3.761662192934966*^9, 
   3.761662263988331*^9, 3.7616623361265707`*^9, 3.761662457889186*^9, {
   3.761662506143702*^9, 3.761662531316297*^9}, 3.7650170690046673`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["General N-channel code...", "Subsection",
 CellChangeTimes->{{3.76083698781649*^9, 3.760836994328259*^9}}],

Cell["\<\
Ok so let\[CloseCurlyQuote]s see if we can now construct a more general \
N-channel code with Mathematica!  I\[CloseCurlyQuote]ll start by re-defining \
our functions just so we have everything here in one place.\
\>", "Text",
 CellChangeTimes->{{3.7608017741572447`*^9, 3.760801843075706*^9}, {
  3.760836997056918*^9, 3.760837043907638*^9}, {3.760888093632738*^9, 
  3.760888094118661*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s try using the Morse potential as the template for the \
single-channel potentials.  The Morse potential is:\
\>", "Text",
 CellChangeTimes->{{3.760888658054769*^9, 3.760888664982224*^9}, {
  3.760888776964892*^9, 3.760888802986388*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"V", "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["D", "e"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"r", "-", 
             SubscriptBox["r", "e"]}], ")"}]}], "/", "a"}]]}], ")"}], "2"]}], 
    "-", 
    SubscriptBox["D", "e"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760888805731721*^9, 3.760888856657877*^9}, {
  3.760894189781477*^9, 3.7608941911729803`*^9}, {3.7608944577017107`*^9, 
  3.760894458004922*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vmorse", "[", 
   RowBox[{"a_", ",", "re_", ",", "De_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"De", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"r", "-", "re"}], ")"}]}], "/", "a"}]]}], ")"}], "2"]}], 
   "-", "De"}]}]], "Input",
 CellChangeTimes->{{3.760888868748076*^9, 3.760888900969314*^9}, {
  3.76088893918783*^9, 3.760888939695993*^9}, {3.760888999205988*^9, 
  3.760888999443983*^9}}],

Cell["The eigenvalues are:", "Text",
 CellChangeTimes->{{3.7608892258471813`*^9, 3.760889230828949*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["E", "n"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "-", "n", "-", 
          FractionBox["1", "2"]}], ")"}], "2"]}], 
      FractionBox[
       SuperscriptBox["\[HBar]", "2"], 
       RowBox[{"2", "\[Mu]", " ", 
        SuperscriptBox["a", "2"]}]], "     ", "with", " ", "n"}], "=", 
     "0"}]}], ",", "1", ",", "...", ",", " ", 
   RowBox[{"(", 
    RowBox[{"\[Lambda]", "-", 
     FractionBox["1", "2"]}], ")"}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760889283322484*^9, 3.760889294896432*^9}, {
  3.760889378908608*^9, 3.760889385594524*^9}, {3.760889446089889*^9, 
  3.76088946383175*^9}}],

Cell["where", "Text",
 CellChangeTimes->{{3.760889297822998*^9, 3.760889298288409*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[Lambda]", "=", 
   FractionBox[
    RowBox[{"a", 
     SqrtBox[
      RowBox[{"2", "\[Mu]", " ", 
       SubscriptBox["D", "e"]}]]}], "\[HBar]"]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760889301193098*^9, 3.760889348012155*^9}}],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"r", "/", "a"}]}], TraditionalForm]]],
 " and the eigenfunctions are"
}], "Text",
 CellChangeTimes->{{3.7608894713880653`*^9, 3.760889482103163*^9}, {
  3.760889613559083*^9, 3.760889622950633*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["u", "n"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["N", "n"], 
     SuperscriptBox["z", 
      RowBox[{"\[Lambda]", "-", "n", "-", 
       FractionBox["1", "2"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "1"}], "2"], "z"}]], 
     RowBox[{
      SubsuperscriptBox["L", "n", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "\[Lambda]"}], "-", 
         RowBox[{"2", "n"}], "-", "1"}], ")"}]], "(", "z", ")"}], "  ", 
     "with", " ", "z"}], "=", 
    RowBox[{
     RowBox[{"2", "\[Lambda]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "e"]}], ")"}]}]], " ", "and", " ", 
      SubscriptBox["N", "n"]}], "=", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"n", "!"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "\[Lambda]"}], "-", 
          RowBox[{"2", "n"}], "-", "1"}], ")"}]}], 
       RowBox[{"\[CapitalGamma]", "(", 
        RowBox[{
         RowBox[{"2", "\[Lambda]"}], "-", "n"}], ")"}]]]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760889488175811*^9, 3.760889675308693*^9}}],

Cell[TextData[{
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["L", "n", 
     RowBox[{"(", "\[Alpha]", ")"}]], "(", "z", ")"}], TraditionalForm]]],
 " is the generalized Laguerre polynomial."
}], "Text",
 CellChangeTimes->{{3.760889680835792*^9, 3.760889714660103*^9}}],

Cell["The single-channel SE reads", "Text",
 CellChangeTimes->{{3.760894144971703*^9, 3.760894157296486*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["\[HBar]", "2"]}], 
      RowBox[{"2", "\[Mu]"}]], 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"u", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["r", "2"]}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["D", "e"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"r", "-", 
               SubscriptBox["r", "e"]}], ")"}]}], "/", "a"}]]}], ")"}]}], "-", 
       SubscriptBox["D", "e"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[HBar]", "2"], 
         RowBox[{"l", "(", 
          RowBox[{"l", "+", "1"}], ")"}]}], 
        RowBox[{"2", "\[Mu]", " ", 
         SuperscriptBox["r", "2"]}]]}], ")"}], 
     RowBox[{"u", "(", "r", ")"}]}]}], "=", 
   RowBox[{"E", " ", 
    RowBox[{"u", "(", "r", ")"}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.760894162248043*^9, 3.760894222397455*^9}, {
  3.7608943807612267`*^9, 3.7608944073984222`*^9}}],

Cell["The zero-energy scattering wavefunction looks like:", "Text",
 CellChangeTimes->{{3.7608992401283627`*^9, 3.760899247762088*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "re", ",", "De", ",", "l"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.760963361546363*^9, 3.7609633703305187`*^9}, {
  3.760963417697844*^9, 3.760963418207325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rmin", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "6"}]]}], ";", 
  RowBox[{"rmax", "=", "20"}], ";", 
  RowBox[{"sol", "=", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{"u", "''"}], "[", "r", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Vmorse", "[", 
               RowBox[{"a", ",", "re", ",", "De", ",", "r"}], "]"}], "+", 
              FractionBox[
               RowBox[{"(", 
                RowBox[{"l", 
                 RowBox[{"(", 
                  RowBox[{"l", "+", "1"}], ")"}]}], ")"}], 
               SuperscriptBox["r", "2"]], "-", "ksqr"}], ")"}], 
            RowBox[{"u", "[", "r", "]"}]}]}], "\[Equal]", "0"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ksqr", "\[Rule]", "0.00001"}], ",", 
           RowBox[{"a", "\[Rule]", "1"}], ",", 
           RowBox[{"re", "\[Rule]", "1"}], ",", 
           RowBox[{"De", "\[Rule]", "1"}], ",", 
           RowBox[{"l", "\[Rule]", "0"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"u", "[", "rmin", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "'"}], "[", "rmin", "]"}], "\[Equal]", "1"}]}], "}"}], 
      ",", 
      RowBox[{"u", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", "r", "]"}], "/.", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r/a\>\"", ",", "\"\<u(r)\>\""}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.7608944172332172`*^9, 3.760894444383512*^9}, {
  3.760894483654386*^9, 3.7608945398996468`*^9}, {3.7608946109905376`*^9, 
  3.760894627167238*^9}, {3.7608946645291157`*^9, 3.7608946740956182`*^9}, {
  3.760894710249648*^9, 3.7608947366089067`*^9}, {3.760894799135096*^9, 
  3.760894876852388*^9}, {3.760894909256813*^9, 3.7608949538444777`*^9}, {
  3.760894985252802*^9, 3.7608949853708143`*^9}, {3.7608950491202297`*^9, 
  3.760895136335137*^9}, {3.760895166856563*^9, 3.76089526476057*^9}, {
  3.76089537240722*^9, 3.760895387570801*^9}, {3.760963347719829*^9, 
  3.760963352402348*^9}, {3.760963385002467*^9, 3.760963385125659*^9}, {
  3.760965948947035*^9, 3.760966022220852*^9}, {3.760966083450109*^9, 
  3.760966125662958*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$18960#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"u(r)\"", TraditionalForm], None}, {
     FormBox["\"r/a\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Rational[1, 1000000], 20}, {-10.08886571637133, 
     1.1615655074729232`}}, {{1.*^-6, 20}, {-10.08886571637133, 
     1.1615655074729232`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.760895245618189*^9, 3.7608952657739563`*^9}, 
   3.7608953890208693`*^9, 3.76096240594368*^9, {3.760963372089499*^9, 
   3.760963385699795*^9}, 3.7609634210946074`*^9, {3.76096608602071*^9, 
   3.760966126974577*^9}, 3.7610447281028748`*^9, 3.761299016961132*^9, 
   3.761426336954627*^9, 3.761583440259233*^9, 3.761662558488532*^9, 
   3.765017069111161*^9}]
}, Open  ]],

Cell["What about the bound states?", "Text",
 CellChangeTimes->{{3.7608992527560377`*^9, 3.760899259145697*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", "=", 
   RowBox[{"1", "/", "2"}]}], ";", 
  RowBox[{"De", "=", "4"}], ";", 
  RowBox[{"a", "=", "1"}], ";", 
  RowBox[{"re", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "0"}], ";", 
  RowBox[{"rmin", "=", "0"}], ";", 
  RowBox[{"rmax", "=", "20"}], ";", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "funs"}], "}"}], "=", 
   RowBox[{"NDEigensystem", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", "r", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Vmorse", "[", 
            RowBox[{"a", ",", "re", ",", "De", ",", "r"}], "]"}], "+", "De", 
           "+", 
           FractionBox[
            RowBox[{"l", 
             RowBox[{"(", 
              RowBox[{"l", "+", "1"}], ")"}]}], 
            SuperscriptBox["r", "2"]]}], ")"}], 
         RowBox[{"u", "[", "r", "]"}]}]}], ",", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", "r", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"r", "\[Equal]", "rmin"}]}], "]"}], ",", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", "r", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"r", "\[Equal]", "rmax"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"u", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", "3", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<SpatialDiscretization\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<FiniteElement\>\"", ",", 
          RowBox[{"\"\<MeshOptions\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<MaxCellMeasure\>\"", "\[Rule]", "0.2"}], "}"}]}]}], 
         "}"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"channel2states", "=", 
  RowBox[{"vals", "-", "De"}]}]}], "Input",
 CellChangeTimes->{
  3.760895342686124*^9, {3.760895393899364*^9, 3.760895399145371*^9}, {
   3.760895433926098*^9, 3.760895556272444*^9}, {3.7608955972967453`*^9, 
   3.760895610348291*^9}, {3.760895652957098*^9, 3.760895656386681*^9}, {
   3.7608959560341597`*^9, 3.760895977352529*^9}, {3.760923816425218*^9, 
   3.7609238197723513`*^9}, 3.760924135556025*^9, 3.7609241755024548`*^9, {
   3.760960320829804*^9, 3.760960323458501*^9}, {3.76096413064393*^9, 
   3.7609641471995087`*^9}, {3.760966136143968*^9, 3.7609661665246887`*^9}, {
   3.760966216104239*^9, 3.760966260787303*^9}, {3.760966396932228*^9, 
   3.7609663985061607`*^9}, {3.760966452663094*^9, 3.760966492899673*^9}, {
   3.7609668480263157`*^9, 3.7609668528645782`*^9}, {3.760967092223907*^9, 
   3.760967093971057*^9}, {3.760967367408793*^9, 3.760967376380934*^9}, {
   3.761387220703306*^9, 3.761387247359776*^9}, {3.7613873886688128`*^9, 
   3.761387389491275*^9}, {3.761387425476398*^9, 3.7613874710760717`*^9}, {
   3.7614080866122704`*^9, 3.7614080867554703`*^9}, {3.7614127372392483`*^9, 
   3.761412737461357*^9}, 3.761427755494809*^9, {3.761430302364284*^9, 
   3.7614303038432302`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.1746851975810646`"}], ",", 
   RowBox[{"-", "0.20645364796980115`"}], ",", "0.04133758595522785`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.761412754079505*^9, 3.761426340279744*^9, 
  3.761427756234874*^9, 3.761430304771022*^9, 3.761583440415311*^9, 
  3.761662564443006*^9, 3.7650170691609793`*^9}]
}, Open  ]],

Cell[TextData[{
 "Compare to the (approximate?  got this from Wikipedia, so grain of salt \
here.) analytical values: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["E", "n"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]", "-", "n", "-", 
           FractionBox["1", "2"]}], ")"}], "2"]}], 
       FractionBox[
        SuperscriptBox["\[HBar]", "2"], 
        RowBox[{"2", "\[Mu]", " ", 
         SuperscriptBox["a", "2"]}]], "     ", "with", " ", "n"}], "=", 
      "0"}]}], ",", "1", ",", "...", ",", " ", 
    RowBox[{"(", 
     RowBox[{"\[Lambda]", "-", 
      FractionBox["1", "2"]}], ")"}]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    FractionBox[
     RowBox[{"a", 
      SqrtBox[
       RowBox[{"2", "\[Mu]", " ", 
        SubscriptBox["D", "e"]}]]}], "\[HBar]"]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.7608989495100603`*^9, 3.7608990012911787`*^9}, {
   3.760923822200286*^9, 3.760923823159278*^9}, {3.760924178074564*^9, 
   3.760924178921213*^9}, 3.7609603254427013`*^9, 3.7609662801440496`*^9, {
   3.7610447323811483`*^9, 3.761044733412633*^9}, {3.761430009448677*^9, 
   3.761430035433416*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"evals", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "-", "n", "-", "0.5"}], ")"}], "2"]}], "/.", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       RowBox[{"a", 
        SqrtBox["De"]}]}]}], "/.", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760899022633902*^9, 3.760899122250299*^9}, {
  3.760924153398368*^9, 3.7609241534925823`*^9}, {3.7614278062929564`*^9, 
  3.7614278195228443`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.25`"}], ",", 
   RowBox[{"-", "0.25`"}], ",", 
   RowBox[{"-", "0.25`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.760899078647732*^9, 3.760899124566327*^9}, 
   3.760923824547596*^9, {3.76092415389498*^9, 3.760924180464004*^9}, 
   3.7609603286605787`*^9, 3.7609641367148046`*^9, {3.76096614418095*^9, 
   3.760966174889616*^9}, 3.760966267256288*^9, 3.7609664167975397`*^9, 
   3.760966471567033*^9, 3.7609673802368*^9, 3.761044734939107*^9, 
   3.761299026230274*^9, {3.761427789574575*^9, 3.761427819807227*^9}, 
   3.761583440620336*^9, 3.761662568043206*^9, 3.765017069239213*^9}]
}, Open  ]],

Cell[TextData[{
 "Deloff gives the analytical bound states ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalEpsilon]", "=", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], 
     RowBox[{"2", "\[Mu]"}]]}], TraditionalForm]]],
 " at the zeros to "
}], "Text",
 CellChangeTimes->{{3.761430046746089*^9, 3.761430097259123*^9}, {
  3.761430290543413*^9, 3.761430292870776*^9}, {3.761430355126215*^9, 
  3.761430400685048*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Hypergeometric1F1", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "+", "x", "-", 
      SqrtBox[
       RowBox[{"2", "\[Mu]", " ", 
        SuperscriptBox["a", "2"], "De"}]]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"2", "x"}]}], ",", 
     RowBox[{"2", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"re", "/", "a"}]], 
      SqrtBox[
       RowBox[{"2", "\[Mu]", " ", 
        SuperscriptBox["a", "2"], "De"}]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761430105003461*^9, 3.761430131226857*^9}, {
  3.761430169102768*^9, 3.7614301770749617`*^9}, {3.761430225575025*^9, 
  3.761430284049199*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw1lwlUjdv7x1OmBjQoleaT5uENEarnSTRJGq9UGs7RjOgqJIVKRVFuiETD
NYRyJV2NtgZNGsgtVDQPpzSdRqX+53ev/17rXXt91vp+9/4+e73vu/eWpftZ
u3NycHBMs5//9ckh9OVahy7r96C+3577bljWKGO+X8Ybrq5TGTE55IaLb4vD
ZGROw5bkShFBeTdMJrHSy2SigfZn7Mb5+654WC/gyLT0LRgzTdtX6e6CjXNe
CaPSGTA11eB2u80RAyukqJHnj8Hi3rLJO/6OKP7Hx5rvhk+hLcnjY99KR6Sr
INeg5zPY96g8aPc2Bzz1lDdvvDkbLIp0TDMf2eOKlk7F79J5EBzB4V9TbIef
SFHAUH8efEBl35Medvj4QWLp4PN8OHxNmltzjR1a+Fu4MA0LoQYruHIYtniD
O/9Gn+drOKw55lkgaoOCdyo5x5pLgKV295T4X5Y4tzo345huKdQESYut9rTE
7vPplqMppVCeKjveJmWJuZ4hd0e8yyAmp6B2jdw+dNi0efvwXDl0q6ZQwQvm
mFp97/igdBWc8atS1uY0xYnElyrfYqrgp0ZvsX6oCRp51nR9mK2Ct8F8kpM/
jXGIa9ouv7EaCHfZGhsOY9TRs9geHfkOftc2F94luhsbns1zKo7Ug077RGBe
nAEKArfzKo0GOMJ/T1pXwQB3KCRsjzzUANstnplKFyFemchgBb1vgHeis1lD
bYCb4/9xpz95Dx5XPq9jluliaLWamZZLI0RsGa5K4dmKj57/rfDkeiNsq3qS
ssR5C35I3Mm14V0j9N0sKsh4oY3ynvaFots+glnUgaoc981YzRWuwSH0D0hM
3Axb6NJCEb0Wwfq3TUAuiWV+iFRBlPcYMfnZBPZfansijiujN+9YTcmmZoDa
FlcuFyUs/Lw8IjelGZL68o5q7VZAeuDG6eSgT9C2z6BFU08Os55FtxzW+AIV
f9wwenRfGJmCzBgzty9gF26+eXzZWlQMNNNXSvgCey79KCrxFcQUXd7Urtkv
oKYmyAq6uhqvVcV4OJS3wI6webt1oZwY2HV1zNipDRZ5hT4w/2l7nW00mrbh
ahv08G6M3Xpg4PVIhqUtV0kb8Md4D801jL32Oibwd7HiV3BPKjHY0Tn32uHn
tWBt1le4fMXGfvz6CrKE43+tHUz2fcsRSBUg93hrwgR2t0N46ZKPAylrib7e
Gadzzu2gB80C6zKESetRVe2Rk+1Aa+EUMs4UIaIfLve+e9wONltejjdniJL4
RHPTKP4O6A7UFmw8IUGo6nnZaeUOiFhjKaPuLEnq5p7+cDfsADcLW/NPhlKE
x2XVU8NANvs8T6RxypCwDXWrF1s6oHXfuRWGmbJEbn9I35HJDiiIS7XKEZIj
JEqDtK7uhK3nFsX8T8mR+cErx/MNOuGq9VKdbl0aCcje9zHgYSe8CmvMWJct
Tzzh/a0h/y5QmkgzACtFwpE2ld9yuQsyG5wbO+4oksSlEq3Vf3aBjsFMklSf
Iqms8pDKaOoCem2374mTSkTJdj7NfXs3UHs8bIcjlQnJlS2ztemGPTJrVEil
MrEXM+4xPNwNldl5l4xWqpCor/GKcne74fnbg6fOhqmQfi/Fp1+X9EBM8Sdh
po8qOVdjXlsr3gMa31Sv5KaqElEN/+HCTT0gu/NJy75mVWLCKqSS3HvA/Jbb
pQl9NZJx1vrl/qoeqLWpeGrHoU52tp9sMursgbMLm05/UlcnX3YmT2vP9UA2
KzxK30Gd8Kzs37ZWvRcmr1rKvX6mTnyunS1uiOsFgUt3n7Xs1SCck2nfXmf0
QsITK6rEX4Pc3l/J8aykF/56QWWl3NAg1RJChrETvcDRHxqxr0WD0EN1DgWv
6oM9Gx68kZ/XID86Dkb4KvTB4MOLZG69JlF9+KjC1L4PPkmORL+y1yRl3HX9
Osf74PjopRXpAZrE6TCLW+lSH6j9ppyVGK9JYrT0zZcX9sHXHSeSs95qkqGC
xoYS6X7Q0Lg63CFIkXCp2bHnOv3QsXTOKl2SIhLnpYRSrfrhpae1MkuRIuZG
3nahYf0Q/Tbt2M4dFOl+dCXw6J1+sI9LmjHcRZFg3pybB1/2w0x0rPwnc4pk
Nix83tHXD35BqcGFThQx2iQ/p8IxADyT+U9XH6LI1+umEuJiA/Cdqzpq2oci
gTNH9bg3DkB1WhHfqeMUWe2Y4DxjNgBiPBs2xp+kyIOivNA+xgDYiGwZNTxL
EX2ZbylNwQNwK6lxR/wFijRdWFpSfn0ADB78sSIokiJHe5S7crIG4NHDcsPF
yxRpd/688k3VAKisqBQ5GUcRm09RGrXdA/Aq6faK4ASKvLXSsf28OADNVutw
TSJFdGr6TveIM4E+I9SnlUSRJ7tu3hvTZsLBaR+ZnmSKSBUblf+0ZMIck2uV
SgpF4rZOMbkPM+GGbGv1kjSKcD2/zy8SyYSohdUBR9LZ9anYbZFLY4KgwVfa
0T8p0p++1EmjiAmlVP7Q0vsUcZTMOb/9ExMas0w7N7K57gbjoRGLCYHq/mtn
2XrkF6q1Xj0IYbEucfZsfhFdMu6sPAjbOy+7WrPHV+DyF/XdNQg6EhUxfakU
SQyW1T/pMgjPkvTFxdj5eKYaGGFBgyD5OJy3n53/rN+56KvXB4HVctPVjl3f
aL/ms6S/BuGOA1OEzq6fTv/28WHNIGiv81Zec50iH1uu/HjROwgLPRfiDsZT
xNhOX4YsGYKwMM2dFrEUUTNJ9v20dQhCFKYsxcMpcveNeXy39RAEyTFjp0Mo
IrBjPnf0yBBImm38J+g0RabUHTm5/xwCk/O3lU4eoYj3Qx4l4ddDsKFsYMm4
B0VaZfL3yn4Zgvv0mVARV4q8ERK7tY3/O7CkJwddrCiyObayeLfqd5gx33z9
oin7/Vh+qtvK6Dtcluw44GBAkZjZJk2f4O/gnBWYwEdR5LdvCW9v93+H38ZX
jmdzU6TSftfQA65hEBW+bv1iQZPs+MASeCE1DBsOGK30GtAkMuXWB2tsh2Ev
bU3EqiJNwnzMPzFHhiF9g3bc7wfZ35c8EVvZOgw3Ur5JK+zSJPXJfrB2ehi6
BBp4zVU0SU5c3SU19RE4PsBVND2hQUIDY2QP3hqBiltvpKbCNMi/v3+OUZjq
fmFhvEqD8MiGK37TGYXwB/tDSbQ6qdSN1wzZPQpJdXwfY33UyUX7u1slrUfB
9OGmAywzdcIZ98rY0XcUBmKE5y7xqJMfC0OezcmjoOU1ZLoyQo0Mtto9qucc
A2F+AUMBL1XyLlFRmbwbg49pF3enDimRSzmbtVw+j4GfN48TlCgRkwaDbQs9
Y7Asamtb/E0lUrbCyVR3cQz0DtQq7TdQIoWBcd6vtMZB8tVkxcl4RZJpO5vx
141xEIg9x8yWVyBX+GtUUl1Z4LNp0bZuPY3kbZV8aXGUBc0auWKiPXKk29kP
5s+w4ISvsK5clhzZkSlku/8mC7pT/SODQI70mzqdXVXHgr8XROz3ucgSw7Dv
9ad3TEBmp0idmZI0mZlcE2AtMgkq6fUG4lnrCL3F9jXXuynw8t38cyPf4uv/
1nMGUp2s9JPYdR8vD6f7Kf4A+XOnAuJLxfD5MT4bUdOfsK3+uYE2tzr+p+fA
tjLjRd3T2ph6xpdJ7edAx86az0I6W/HCvXmriaEluERc7MoTCUCOxnYsDOLC
3pBikazdhr/8S5HB/XR06sQuVDjhccpWZRlubDYa6VtvjN2TN3/jLVqOC8bC
pZahZvjffr8SD8nGeTHW7EWzHp+z146vxL/vFGisn9qLFt1xqlJSPHjOzFNg
XYIlMkvp5yozedHdJ09745zVLz8fLnt3KOQFWqOGQJOkocsq/NG157eH3jbI
A5NurazV+Ltlm57XE9tf+fjxS0utKfcJOzT+7jAtZ8ePymVU0DEW+7xbcmiJ
g5oA5tJLPSXl9uPLqDJnmUkBPGbtpeijZv/LL4gLoQVBy7fbo8eygPa6OkEs
0mLJd+seQIb/mZd8t4Vw+eK3aRl1h1/51qLeAXlv23sOqOmpWmfutha7Ur5a
WvM5Yr2gGm/ANmE0eRninjrm+Gt8Eew12Ufp5TlhQdaFJDUuEWx/HKp0tNAJ
zyxRsXzXJoKmGdul+2IOIk9rkMnRnHV4sCrh90EL519+UWyLDxzruuqMPQ9k
E+4Fi+Ju1cP83HPOmKAktjTPTgyrVR9wZT91Qc5/9eKon/lI6aWoK8bd9qhw
kxFHjqf1jTYbXNEh4WAdX584im/uMTX3c8WZXfdn7xWvx+jP5UZjBa6/5pNA
wa6vIQofXLGrZ+epkkgJdBw0uLaLww3T9LTW17pJYq343ZvCxm6/9FLIS6Bc
95QbZkYECHiqS2F+7pH19hfdMNKOsYdrUgq9tW9lNb1xQ+3W1IzIWmlsXt17
LHeRfT/6t0ljTm+jTcwqOiYqJ2XW7pHB6PTHVeu30jGUxCbuyZPBgmx94fxj
9F/zyWKhWme3bwId9663u18tL4t/7OapW3hAR4OjFY4C0bL4jAm+Wc10vCdB
l383KYusI7TO0zyMX3451B8rP8q/hoHypQ9vWDjK4f27yyaldRgYp16i8qFY
DjNTr1vvZfy/noY3T0znXgthoAdr6fsqFRr2eZu+Px3HQPrzcZnoqzQMD4v8
Sstj4OELNvNm8TSs9GCaNbE5wCanme8PGk6vkrkTlc/AqMmAK3E3aPhkdv33
oQIGZm2bnbuZTMMzUhxmOcUMnH2z2PTgCQ1ZN0om9MrYeT7wxZZV0DCdIaGj
V8/A2+lHvC5W0bBQJcRsiM3pJ+oMTWpoKD58fGdSAwNzReJ+1NTRkNGm0DXz
noGtDkJejf/QMEDZpz/7IwMVu8QMO7to2Grmt0LuCwOpnCCpP3toqNn/NKCe
zdsjWmbd+2joEfu5KriFgeaKyX8NMGnYPy0i39zKQH9fGamxMRoeUi1NufSN
gcG652ezWTS8OyYGW9sZGLGq8+OJSRrG348t7WJz4rP0yzMzNNz1uDNEt5OB
aeeWeub/oGG+a/3LfjY/sXLfGTxPw/0NIx8SuhiYI/dWUn+Bhh0PTZuwm4HF
LIXZxUX2+iR0vh5i8/8BU4A1wg==
       "]]},
     Annotation[#, "Charting`Private`Tag$19069#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-16.645307677258483`, 159.15390009168536`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7614302966316023`*^9, 3.7614303095959167`*^9}, 
   3.7615834414001703`*^9, 3.761662571076441*^9, 3.765017069366562*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"evals", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], 
    RowBox[{"2", "\[Mu]"}]], "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Hypergeometric1F1", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], "+", "x", "-", 
         SqrtBox[
          RowBox[{"2", "\[Mu]", " ", 
           SuperscriptBox["a", "2"], "De"}]]}], ",", 
        RowBox[{"1", "+", 
         RowBox[{"2", "x"}]}], ",", 
        RowBox[{"2", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"re", "/", "a"}]], 
         SqrtBox[
          RowBox[{"2", "\[Mu]", " ", 
           SuperscriptBox["a", "2"], "De"}]]}]}], "]"}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", ".5"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7614304608180847`*^9, 3.761430476660656*^9}, {
  3.76143060020828*^9, 3.761430604520335*^9}, {3.7614306540393476`*^9, 
  3.7614306541584806`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.20647195438307875`"}]], "Output",
 CellChangeTimes->{3.761430477014045*^9, 3.761430605223312*^9, 
  3.76143065455443*^9, 3.761583441501648*^9, 3.7616625757851*^9, 
  3.765017069396175*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"evals", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], 
    RowBox[{"2", "\[Mu]"}]], "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Hypergeometric1F1", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], "+", "x", "-", 
         SqrtBox[
          RowBox[{"2", "\[Mu]", " ", 
           SuperscriptBox["a", "2"], "De"}]]}], ",", 
        RowBox[{"1", "+", 
         RowBox[{"2", "x"}]}], ",", 
        RowBox[{"2", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"re", "/", "a"}]], 
         SqrtBox[
          RowBox[{"2", "\[Mu]", " ", 
           SuperscriptBox["a", "2"], "De"}]]}]}], "]"}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1.5"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.761430499621937*^9, 3.7614305163332376`*^9}, {
  3.761430607233407*^9, 3.761430609960326*^9}, {3.761430651619936*^9, 
  3.761430651752914*^9}}],

Cell[BoxData[
 RowBox[{"-", "2.1747063357234846`"}]], "Output",
 CellChangeTimes->{{3.7614305042439537`*^9, 3.761430516596084*^9}, 
   3.761430610523382*^9, 3.761430655338353*^9, 3.761583441603149*^9, 
   3.761662577485755*^9, 3.76501706947311*^9}]
}, Open  ]],

Cell["The relative errors are:", "Text",
 CellChangeTimes->{{3.760899147544609*^9, 3.760899155022388*^9}, {
  3.760899187416768*^9, 3.760899190126586*^9}, {3.761662579782642*^9, 
  3.761662580612197*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"evals", "-", 
   RowBox[{"(", "channel2states", ")"}]}], "evals"]], "Input",
 CellChangeTimes->{{3.760899126330656*^9, 3.7608991342428617`*^9}, {
  3.760899174658176*^9, 3.760899176135708*^9}, {3.7614306280502653`*^9, 
  3.761430629448629*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9.719998545442262`*^-6", ",", "0.00008866295343743103`", ",", 
   "1.1653503438209114`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7608991355668287`*^9, {3.7608991817732973`*^9, 3.760899192302763*^9}, 
   3.760923831355884*^9, {3.7609241568337603`*^9, 3.760924186578743*^9}, 
   3.7609603310393867`*^9, 3.760964138384194*^9, {3.760966150658229*^9, 
   3.760966177326919*^9}, 3.760966269440439*^9, 3.760966418613913*^9, 
   3.7609664774194117`*^9, 3.760967381915102*^9, 3.761044736537932*^9, 
   3.761427883283169*^9, {3.761430613091819*^9, 3.761430657121043*^9}, 
   3.7615834416857443`*^9, 3.761662581882305*^9, 3.765017069541176*^9}]
}, Open  ]],

Cell["\<\
Which is not so bad, but I can\[CloseCurlyQuote]t seem to make it better by \
using a finer grid, which is troubling.\
\>", "Text",
 CellChangeTimes->{{3.76089916287157*^9, 3.760899168830332*^9}, {
  3.760966305947768*^9, 3.760966323354965*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"scalef", "=", "1.0"}], ";", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Vmorse", "[", 
        RowBox[{"a", ",", "re", ",", "De", ",", "r"}], "]"}], "+", 
       FractionBox[
        RowBox[{"l", 
         RowBox[{"(", 
          RowBox[{"l", "+", "1"}], ")"}]}], 
        SuperscriptBox["r", "2"]]}], ",", 
      RowBox[{"vals", "-", "De"}], ",", 
      RowBox[{
       RowBox[{"scalef", " ", "funs"}], "+", "vals", "-", "De"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "rmax"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "De"}], ",", "2"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "Black", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
       RowBox[{"{", "Red", "}"}]}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<r/a\>\"", ",", "\"\<V(r)/\!\(\*SubscriptBox[\(D\), \(e\)]\)\>\""}],
       "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.760895638586276*^9, {3.7608956711286097`*^9, 3.760895794829739*^9}, {
   3.760895824831327*^9, 3.760895891935568*^9}, {3.760895993095789*^9, 
   3.760896030614614*^9}, {3.760896069414565*^9, 3.760896069755311*^9}, {
   3.760898870998766*^9, 3.760898906876465*^9}, {3.760924194632416*^9, 
   3.760924194710793*^9}, {3.760964239865788*^9, 3.76096424116853*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
/3zDEVCc6+NpKEe4Wuir+DDIPKC8rcmOsJLCWcogqDJmCdk4Tzi0Yt+vX+DX
ucGJXU6EBXkMq38BieAHZWHuhM1HlyJ+gexPa6dRP3Kf4sf7C+Qcr0p+fZ+w
JS+z2gDIszPjT6klrNkQKfUT1HnKB9R9JpwcKbn8A4yFMIysNBHOeMRe/QPI
PH37xqydsMfnOvsfIH9imwX7AOG56Y6s7+CZ19C9oHXCMom/VPtA4W0frosK
irjjUnIiusHU/rPBt5UIy/xZsO0G8ku6i1mqhF/yBeztBs/seTv69xI2mT86
2QXykNfJVvqEBefLT3SB7LU5UeNzhLHtqbu+gRS3S4p74sl9dIG2A/RImqeb
3Sc8Fnb4VzvY2reP0zOJcF1iS2U7SDZkXShKI8zZdfVWO3gg/eyNzDPCYtZb
6dpB3MDofuGPpBtdqV9BuIXDUbplwkH/DAy/gMzjfdYXVsn9K+IKX0DFEQv3
2g3yeZgVOL+AhQOH46Npd+NGz7V3tgJrKblvPJyE50rsHVuByu8Fe0k5wkHP
PIRbwI/k4Bt6doSVDjn/bQBrCRvRuecJU3I0mxsAb6x3GrMTYbHEU+kN4Mgt
R6zJnbAtNVinAZQ4GzKe9CfPG7sR8xlEaXEnOCaRto9WrAd7+p7khzeR52s0
5n4CnIpOqy9ayfOFJEM/galAxcNdX0lvK7H9BLIlyodkesj7CPoJfQK8ru2i
n0cIZ3g/iqsB6/50RxkpSkTfwd6watDNql5psJUwurb9YRX4pPZwrE+IcGtK
l18VKDn7h3pFmLRRpU0ViHtRZfNQlLBY7badVcDA7Pif8Z1kn+r060rwLsVJ
I1qFMKWtuhsDybseFTYdJYx9G40AYGlRPyfEiPTub+YAHAcLqXuPkzYW3QEA
o5lhTI4p4aDQt2UfgI//msvN04T7A3/PVwDTllMyChfJeS91j3LA5sObFRNM
On009x1wQrAUnVByX/r7zXfgI/OlhNXbpG2EzN+BG48/3jofSd5vwZnmHRiv
9bTdH0c4I9jk3FvwSejL9qk00pHt0qUgEItNPvqenP+XP/YaTHzH7q+Vkefd
sqh9DU5uLMblVpDvo03z6Wsgr24VSYeR79Mh5/xr0PVc6kb5J3JfnW2oGKgk
wTNy7WQ/Q9XUKzDiNi/COkveL+qaxEtwIlpy2/s5sm/Kk+klqMg7JXBxgezj
1uh9Ae4NfqB+XCbnY0c8XgD0dBTF7w+ZGztnFIEUXYlfE8zKxHmxAdRCYLTN
IuezJGnd7bLPQPKQInZGijCWcpDmGRgqZOqdkiYcVJfelQ/80QpOqhyZC4lF
5IOCCxL+Zspk/o19Ig+wvJw37TtA9iUdeZ8LanXvUGZOktaAwTmAm8NpW6Al
uX9rp10OsPmmrc5pRe4bYEgOWHFedlU5S+a0CX+zgdRd629XHch9szS/bBDa
LVu0eZm0FsetLKDtXnuGK5KcjzF48QSsd43rV0eRTj0Z/wSUHGJTuRZDztsl
eT0BUltPMH2/S+YvX2g+AWzVPSV5iYRRWZWaDNC1dYYdzSbn8y41pwOPGl7M
HZK+IZeSCmSVNJ7vqCTvy/jBORUMppxObK8i/SBjbyo46fH4ktYncv7OmZ5H
YP82ma2MTWS+HC/6CDBd2eeZ1kO6L/rdQ5AubC/ZuEy6Q2tHEtBSlVO0//3/
+8j7kwjajyxprK6SfXHHuxIB07Wwo5J/SMsbxiUCjy/PPP1pVYj5qmHaRICG
LWLyVMKUo84L98Gv2dCzsTJk/sN8NQH4MxpflJAlvf1kTwLg3y5w5b0c6Yaw
igRgaJgfOqxIWsfnVgIozm56fmAP2Xc3gD0BhJzmX5/WJnN7OsV4IPkxN9H4
DJm3D2+/C5rlV7P7rElL50/fAdcTDV672JBG3n64Axqcx1vC7Egvv7K5Azw5
5ZjhRdK/ebNjATxb5Lfbm7T/7v0xwGq1xJYzlvTbz48jAb09w+XHd0if4LkW
CYoaLG7Kx5G++fB4JKBJX3locI80+1maSJCnp/k16CHp8tKLEWA5oVxvPuf/
+zog4SBOoUq2DZCWOCB4G+RpnmEOxkjPVy+FAnhoaVS5irRdxJdQMHNaKie+
hnQ6Fh0KjoZFiZ5oJP1mkjYUMP405W3tJr35bSMY+MUN/m1aIn0jjO8WSHjk
33dzhXR242oQePaUr1xhlbTQob4g0FVx+HrsBulnMCsIqI8/XzhGq0o4cUYt
CMxpe482UElHABgAHBfpv9TLkrbZUuAHbJ7pNlvLk+ZOCfIDJ+1CG2YVSM94
WPgB/Ra6T3zKpF3GN28Aqee05XYapBnXT90Aw/aUnLVDpG8gvL7gfNvG9V1n
Vf//+1Z2FVhH7rtaYUM64F/iVWCO+nkdtyW9EuV1FegWrbv5OPy/b6hwFUhG
rdlXOpM2tsryAYPav4+dvkp63fOhN7B/tSAWeff/3PS5J7gUbPbHMP7/582I
8gQ+ZiXf2O6RFpFx8QQRyz534hJJ2w/s8gRFe9c2ktL+f77551fAWuVm59Pn
pHvUyzxAXBtbbHUt6f70NTeQkuXmFFZPOm5HjRvI8m4+ZNBAWmYzzg2U8set
NzSTzmjY5Qb6rHicvnaQNkk+dwlID2499Gvw/33fXhegVHJDJHuY9KpHgQvQ
ut27dmGUNFZ20wUck057OT5BWunQDhfg6SomMj9PekzgkjPw339rrXiR9MsE
xBncZv/V7r1M2uMMjzNIfpEVvbpK+l17uRPIDKK/WLb+f19onBN4fuKCjv8f
0kGBF5xAifin7Qf//f88n7ScAFiUWtvc/P95TnE6gf8A8+SJuA==
       "]]},
     Annotation[#, "Charting`Private`Tag$19126#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wZbbdlaWhUQdTGQ+w336k/lb+pD2Mv/DU
/MLX8jfh/HXrO2/n6L2C89PtL858U/QZzs97qvl4y7qfcD6XYov6fQsGBxi/
T+C01sIEZjg/6XbIfuYzbHB+4dGWpHx1Ljh/YwFPsIQnL5y/sDr7lUG4AJzf
NP9P4Jc3gnA+w+UHDnuqhOF8tZK0ihAtUTj/ydfpYdx7xeB8r6dZtZMKJeB8
vycTtOXkpOD8V4eTGk6slYbz9QSvyTrHy8L5XPZfE+98loPz3d9GfVcKVYDz
bxxKYYzSUYTzt3YciVP4iuCnsZY+OHdOCc5PLqreyjNLGc7XT9c+55OoAuef
F9LhLrVUhfN3r2uarcOsBudXM2oFnLmL4HPdqfLI26IO5z9dpjhlfo0GnD9F
Q5JlZ6gmnD9hVtrxRAUtOD9qSuw5nucI/g+XpT/n79OG8x8/dao41K4D5y+y
NZQ+m6gL569tLRVM19WD89tDk72ZvyL4pncWrmw/qw/nz9CcvfastwGcX3+g
d4b3TgTfVzp06SkVQzjfMe94tGAngj9fJknlzFcEX+Xw8ml+0UYI/+ke0rq0
D8FP+8xy8aSWMSI9bvyk0NmP4E+4xNN75DiCv++z2s///xF8AHQ9hy4=
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wZbbdgxOiO4VyT+1nv/1I/a38SXsYf+Gp
+YWv5W/C+evWd97O0XsF56fbX5z5pugznJ/3VPPxlnU/4XwuxRb1+xYMDjB+
n8BprYUJzHB+0u2Q/cxn2OD8wqMtSfnqXHD+xgKeYAlPXjh/YXX2K4NwATi/
af6fwC9vBOF8hssPHPZUCcP5aiVpFSFaonD+k6/Tw7j3isH5Xk+zaicVSsD5
fk8maMvJScH5rw4nNZxYKw3n6wlek3WOl4Xzuey/Jt75LAfnu7+N+q4UqgDn
3ziUwhilowjnb+04EqfwFcFPYy19cO6cEpyfXFS9lWeWMpyvn659zidRBc4/
L6TDXWqpCufvXtc0W4dZDc6vZtQKOHMXwee6U+WRt0Udzn+6THHK/BoNOH+K
hiTLzlBNOH/CrLTjiQpacH7UlNhzPM8R/B8uS3/O36cN5z9+6lRxqF0Hzl9k
ayh9NlEXzl/bWiqYrqsH57eHJnszf0XwTe8sXNl+Vh/On6E5e+1ZbwM4v/5A
7wzvnQi+r3To0lMqhnC+Y97xaMFOBH++TJLKma8Ivsrh5dP8oo0Q/tM9pHVp
H4Kf9pnl4kktY0R63PhJobMfwZ9wiaf3yHEEf99ntZ///yP4AIVdnbo=
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wZbYdw9tuc2Otpfbstx+pv5U/aQ/jLzw1
v/C1/E04f936zts5eq/g/HT7izPfFH2G8/Oeaj7esu4nnM+l2KJ+34LBAcbv
EzittTCBGc5Puh2yn/kMG5xfeLQlKV+dC87fWMATLOHJC+cvrM5+ZRAuAOc3
zf8T+OWNIJzPcPmBw54qYThfrSStIkRLFM5/8nV6GPdeMTjf62lW7aRCCTjf
78kEbTk5KTj/1eGkhhNrpeF8PcFrss7xsnA+l/3XxDuf5eB897dR35VCFeD8
G4dSGKN0FOH8rR1H4hS+IvhprKUPzp1TgvOTi6q38sxShvP107XP+SSqwPnn
hXS4Sy1V4fzd65pm6zCrwfnVjFoBZ+4i+Fx3qjzytqjD+U+XKU6ZX6MB50/R
kGTZGaoJ50+YlXY8UUELzo+aEnuO5zmC/8Nl6c/5+7Th/MdPnSoOtevA+Yts
DaXPJurC+WtbSwXTdfXg/PbQZG/mrwi+6Z2FK9vP6sP5MzRnrz3rbQDn1x/o
neG9E8H3lQ5dekrFEM53zDseLdiJ4M+XSVI58xXBVzm8fJpftBHCf7qHtC7t
Q/DTPrNcPKlljEiPGz8pdPYj+BMu8fQeOY7g7/us9vP/fwQfAELXTOI=
       "]]},
     Annotation[#, "Charting`Private`Tag$19126#2"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
hP+7cpo2v7q6Bdoe/d//AxGEGcE=
       "]], LineBox[CompressedData["
1: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
CwifXiiTxfw/Ia5KHQ==
       "]], LineBox[CompressedData["
1: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
yZkZjGt7rfvv/9n/BxOOyHY=
       "]]},
     Annotation[#, "Charting`Private`Tag$19126#3"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"V(r)/\\!\\(\\*SubscriptBox[\\(D\\), \\(e\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox["\"r/a\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 19.999999591836733`}, {-4, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.760895714155471*^9, 3.760895764622898*^9}, 
   3.760895795581663*^9, {3.76089582569989*^9, 3.76089586213524*^9}, {
   3.760896009179061*^9, 3.7608960172121563`*^9}, 3.760896053201901*^9, 
   3.760896097174481*^9, 3.760898899025774*^9, 3.7608989387546*^9, 
   3.7609238579471617`*^9, 3.760924200302503*^9, 3.760960335097604*^9, {
   3.760964234877467*^9, 3.760964258403161*^9}, {3.760966410015155*^9, 
   3.76096642156011*^9}, 3.760966480261939*^9, 3.760967384953347*^9, 
   3.7610447397076063`*^9, 3.761299061360311*^9, 3.761427907931321*^9, 
   3.761430674534215*^9, 3.7615834434248333`*^9, 3.761662592997315*^9, 
   3.765017070693019*^9}]
}, Open  ]],

Cell["\<\
Before we can go any further, we must make some decisions about the model we \
want.  How many channels?  What is the energy range and how many channels are \
open?  What are the channel threshold values?  For this code I\
\[CloseCurlyQuote]ll keep the parameters of the potential fixed for the \
calculation and study the energy dependence of the potential.  Eventually we\
\[CloseCurlyQuote]ll want to make the thresholds magnetic field dependent and \
keep the energy fixed while changing the field.\
\>", "Text",
 CellChangeTimes->{{3.760837724579483*^9, 3.76083778277254*^9}, {
   3.760837906487105*^9, 3.7608379947875547`*^9}, 3.760900193599544*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "k", ",", "se", ",", "ce", ",", "dse", ",", "dce", ",", "s", ",", "c", ",", 
   "ds", ",", "dc", ",", "V12", ",", "V13", ",", "V21", ",", "V22", ",", 
   "V33", ",", "V11", ",", "K", ",", "\[CapitalEpsilon]", ",", "Eth", ",", 
   "Nchan", ",", "Nopen", ",", "Nclosed"}], "]"}]], "Input",
 CellChangeTimes->{{3.7608372755945053`*^9, 3.7608373298298407`*^9}, {
  3.760899521948402*^9, 3.7608995328513327`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Nchan", "=", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eth", "=", 
   RowBox[{"{", 
    RowBox[{"0.0", ",", "3.0", ",", "5.0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"re", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmin", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmax", "=", "12.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D11", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D22", "=", "4.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D33", "=", "6.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V12", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V23", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r12", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r23", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a12", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a23", "=", "0.5"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7609060173496437`*^9, {3.7609242287430162`*^9, 3.760924238911872*^9}, {
   3.7613173208649473`*^9, 3.761317324413205*^9}, {3.7614280043467007`*^9, 
   3.7614280329194202`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"k", ",", "l", ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.761431554185151*^9, 3.761431561343659*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"se", "[", 
    RowBox[{"l_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{
    SqrtBox[
     FractionBox["k", 
      RowBox[{"\[Pi]", " "}]]], "r", " ", 
    RowBox[{"SphericalBesselJ", "[", 
     RowBox[{"l", ",", 
      RowBox[{"k", " ", "r"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ce", "[", 
    RowBox[{"l_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", 
     SqrtBox[
      FractionBox["k", 
       RowBox[{"\[Pi]", " "}]]]}], "r", " ", 
    RowBox[{"SphericalBesselY", "[", 
     RowBox[{"l", ",", 
      RowBox[{"k", " ", "r"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dse", "[", 
    RowBox[{"l_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"se", "[", 
       RowBox[{"l", ",", "k", ",", "r"}], "]"}], ",", "r"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dce", "[", 
    RowBox[{"l_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"ce", "[", 
       RowBox[{"l", ",", "k", ",", "r"}], "]"}], ",", "r"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7608371558994083`*^9, 3.7608371953688993`*^9}, 
   3.761662613238188*^9}],

Cell["\<\
\[LineSeparator]I\[CloseCurlyQuote]ll also assume for simplicity that we only \
care about s-wave scattering.\
\>", "Text",
 CellChangeTimes->{{3.760900342114902*^9, 3.7609003536925163`*^9}, 
   3.7609238692780027`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nopen", "[", 
   RowBox[{"Emin_", ",", "Emax_", ",", "Eth_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nmin", ",", "nmax"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nmax", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"Eth", ",", 
         RowBox[{
          RowBox[{"#", "<", "Emin"}], " ", "&"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nmin", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"Eth", ",", 
         RowBox[{
          RowBox[{"#", "<", "Emax"}], " ", "&"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nmax", "\[NotEqual]", "nmin"}], ",", "0", ",", "nmin"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.760907238797736*^9, {3.7609074181294928`*^9, 3.760907506246154*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Setupdiagsc", "[", 
   RowBox[{"\[CapitalEpsilon]_", ",", "Nopen_", ",", "Eth_", ",", "r_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "ii", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], "=", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"se", "[", 
          RowBox[{"0", ",", 
           SqrtBox[
            RowBox[{"\[CapitalEpsilon]", "-", 
             RowBox[{"Eth", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}]], ",", "r"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", "Nopen"}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], "=", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ce", "[", 
          RowBox[{"0", ",", 
           SqrtBox[
            RowBox[{"\[CapitalEpsilon]", "-", 
             RowBox[{"Eth", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}]], ",", "r"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", "Nopen"}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ds", "[", 
       RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], "=", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"dse", "[", 
          RowBox[{"0", ",", 
           SqrtBox[
            RowBox[{"\[CapitalEpsilon]", "-", 
             RowBox[{"Eth", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}]], ",", "r"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", "Nopen"}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dc", "[", 
       RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], "=", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"dce", "[", 
          RowBox[{"0", ",", 
           SqrtBox[
            RowBox[{"\[CapitalEpsilon]", "-", 
             RowBox[{"Eth", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}]], ",", "r"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", "Nopen"}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], ",", 
       RowBox[{"c", "[", 
        RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], ",", 
       RowBox[{"ds", "[", 
        RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], ",", 
       RowBox[{"dc", "[", 
        RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7609058098739767`*^9, 3.760905902519767*^9}, {
  3.760905989124296*^9, 3.760906000963758*^9}, {3.760906065145056*^9, 
  3.760906136733049*^9}, {3.760906189505601*^9, 3.760906345576845*^9}, {
  3.760907283255412*^9, 3.760907356056431*^9}, {3.760907593711342*^9, 
  3.760907627436557*^9}, {3.760907677051978*^9, 3.760907738803472*^9}, {
  3.760907789669012*^9, 3.760907791555159*^9}, {3.760907978119948*^9, 
  3.760907978517593*^9}}],

Cell["\<\
We must choose an energy range that lies between thresholds so the number of \
open channels is fixed through the calculation.  Let\[CloseCurlyQuote]s \
choose \
\>", "Text",
 CellChangeTimes->{{3.760907834071692*^9, 3.76090786628006*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Erange", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Eth", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", "0.001"}], ",", 
     RowBox[{
      RowBox[{"Eth", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "-", "0.001"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760907869498549*^9, 3.760907923126754*^9}, {
  3.760960356125565*^9, 3.7609603592015247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nopen", "[", 
  RowBox[{
   RowBox[{"Erange", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"Erange", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "Eth"}], "]"}]], "Input",
 CellChangeTimes->{3.761431495035241*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.761431495463543*^9, 3.761431579338237*^9, 
  3.76158344403876*^9, 3.7616626293753653`*^9, 3.765017071041424*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"diagsc", "=", 
   RowBox[{"Setupdiagsc", "[", 
    RowBox[{"\[CapitalEpsilon]", ",", 
     RowBox[{"Nopen", "[", 
      RowBox[{
       RowBox[{"Erange", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Erange", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "Eth"}], "]"}], ",", "Eth", ",", 
     "r"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7609063564730797`*^9, 3.760906426247964*^9}, {
  3.7609064711542463`*^9, 3.7609064786861477`*^9}, {3.760906975102282*^9, 
  3.760906988008697*^9}, {3.760907022393428*^9, 3.7609070512078943`*^9}, {
  3.76090712501618*^9, 3.760907139174947*^9}, {3.760907169212905*^9, 
  3.760907258957427*^9}, {3.760907331110999*^9, 3.7609073339435663`*^9}, {
  3.760907514526574*^9, 3.760907525782035*^9}, {3.760907641285722*^9, 
  3.7609076872653103`*^9}, {3.760907761666252*^9, 3.760907764074071*^9}, {
  3.7609078005714617`*^9, 3.7609078045056*^9}, {3.760907901299436*^9, 
  3.760907987388158*^9}}],

Cell[TextData[{
 "Access the diagonal ",
 Cell[BoxData[
  FormBox[
   StyleBox["s",
    FontWeight->"Bold"], TraditionalForm]]],
 " matrix by (and display as a matrix)"
}], "Text",
 CellChangeTimes->{{3.760908016441029*^9, 3.760908059199667*^9}, {
  3.76092388062164*^9, 3.7609238813880653`*^9}, {3.760924256582108*^9, 
  3.760924258957139*^9}, {3.7614280573564873`*^9, 3.761428058758554*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"diagsc", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.760908032883737*^9, 3.760908041474659*^9}, {
  3.761065655252276*^9, 3.761065716249467*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[CapitalEpsilon]"}], 
          ")"}], 
         RowBox[{"1", "/", "4"}]], " ", 
        RowBox[{"SphericalBesselJ", "[", 
         RowBox[{"0", ",", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{
            "0.`", "\[VeryThinSpace]", "+", "\[CapitalEpsilon]"}]]}]}], 
         "]"}]}], 
       SqrtBox["\[Pi]"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7609080419669733`*^9, 3.760923882625072*^9, 3.760924260260456*^9, 
   3.760960367911903*^9, 3.7610447530254507`*^9, {3.761065655795512*^9, 
   3.761065716714402*^9}, 3.7612990802411213`*^9, 3.7614280602639227`*^9, 
   3.76143158524541*^9, 3.7615834441545486`*^9, 3.7616626346381903`*^9, 
   3.7650170711430387`*^9}]
}, Open  ]],

Cell["Now choose the form of the potential matrix:", "Text",
 CellChangeTimes->{{3.760908224694847*^9, 3.760908235684738*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Vdiag", "[", 
    RowBox[{
    "r_", ",", "a_", ",", "re_", ",", "D11_", ",", "D22_", ",", "D33_", ",", 
     "Eth_"}], "]"}], ":=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{"Vmorse", "[", 
         RowBox[{"a", ",", "re", ",", "D11", ",", "r"}], "]"}], "+", 
        RowBox[{"Eth", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "0", "0"},
      {"0", 
       RowBox[{
        RowBox[{"Vmorse", "[", 
         RowBox[{"a", ",", "re", ",", "D22", ",", "r"}], "]"}], "+", 
        RowBox[{"Eth", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "0"},
      {"0", "0", 
       RowBox[{
        RowBox[{"Vmorse", "[", 
         RowBox[{"a", ",", "re", ",", "D33", ",", "r"}], "]"}], "+", 
        RowBox[{"Eth", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vcoupling", "[", 
    RowBox[{
    "r_", ",", "a_", ",", "V12_", ",", "V23_", ",", "r12_", ",", "r23_", ",", 
     "a12_", ",", "a23_"}], "]"}], ":=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"V12", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "r12"}], ")"}], "2"]}], "/", 
          SuperscriptBox["a12", "2"]}]]}], "0"},
      {
       RowBox[{"V12", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "r12"}], ")"}], "2"]}], "/", 
          SuperscriptBox["a12", "2"]}]]}], "0", 
       RowBox[{"V23", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "r23"}], ")"}], "2"]}], "/", 
          SuperscriptBox["a23", "2"]}]]}]},
      {"0", 
       RowBox[{"V23", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "r23"}], ")"}], "2"]}], "/", 
          SuperscriptBox["a23", "2"]}]]}], "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.760837336398272*^9, 3.760837346404428*^9}, {
   3.760888275178083*^9, 3.760888316874516*^9}, {3.7608883471789017`*^9, 
   3.760888408510597*^9}, 3.76088844734932*^9, {3.760895926926167*^9, 
   3.760895932859624*^9}, {3.760899363158866*^9, 3.7608993903760843`*^9}, {
   3.760899428797505*^9, 3.760899513819395*^9}, {3.760899553339733*^9, 
   3.760899609424547*^9}, {3.760899654696042*^9, 3.7608997626082993`*^9}, {
   3.76089984787138*^9, 3.760899862325897*^9}, {3.760899899539295*^9, 
   3.76090000019153*^9}, {3.760906010310008*^9, 3.7609060264438267`*^9}, {
   3.760908301637195*^9, 3.760908302992464*^9}, {3.760908864919338*^9, 
   3.7609089627261868`*^9}, {3.7609090055201817`*^9, 
   3.7609090056709127`*^9}, {3.76090912302573*^9, 3.76090912461499*^9}, {
   3.7609242843269167`*^9, 3.760924291131659*^9}, {3.7613141063595943`*^9, 
   3.761314236583239*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vmat", "[", 
   RowBox[{
   "r_", ",", "a_", ",", "re_", ",", "D11_", ",", "D22_", ",", "D33_", ",", 
    "V12_", ",", "V23_", ",", "r12_", ",", "r23_", ",", "a12_", ",", "a23_", 
    ",", "Eth_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Vdiag", "[", 
    RowBox[{
    "r", ",", "a", ",", "re", ",", "D11", ",", "D22", ",", "D33", ",", 
     "Eth"}], "]"}], "+", 
   RowBox[{"Vcoupling", "[", 
    RowBox[{
    "r", ",", "a", ",", "V12", ",", "V23", ",", "r12", ",", "r23", ",", "a12",
      ",", "a23"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.761314242560975*^9, 3.761314295021367*^9}, {
   3.761315585838612*^9, 3.7613156681790733`*^9}, 3.7614280806967497`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"vcscale", "=", "1"}], ";", 
  RowBox[{"Clear", "[", "VV", "]"}], ";", 
  RowBox[{
   RowBox[{"VV", "[", "r_", "]"}], "=", 
   RowBox[{"Vmat", "[", 
    RowBox[{
    "r", ",", "a", ",", "re", ",", "D11", ",", "D22", ",", "D33", ",", "V12", 
     ",", "V23", ",", "r12", ",", "r23", ",", "a12", ",", "a23", ",", "Eth"}],
     "]"}]}], ";", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Diagonal", "[", 
       RowBox[{"VV", "[", "r", "]"}], "]"}], ",", 
      RowBox[{"vcscale", " ", 
       RowBox[{
        RowBox[{"VV", "[", "r", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{"vcscale", " ", 
       RowBox[{
        RowBox[{"VV", "[", "r", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "Black", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<r/a\>\"", ",", "\"\<\!\(\*SubscriptBox[\(V\), \(ii\)]\)(r)\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760908282953938*^9, 3.760908349334855*^9}, {
  3.760908824475815*^9, 3.7609088560720987`*^9}, {3.760909019015587*^9, 
  3.760909021893359*^9}, {3.760909116181752*^9, 3.7609091510300198`*^9}, {
  3.760924303365341*^9, 3.760924303642734*^9}, {3.761314474265399*^9, 
  3.761314524604003*^9}, {3.761315686723035*^9, 3.761315720784141*^9}, {
  3.761316659091219*^9, 3.76131668196987*^9}, {3.761316722758033*^9, 
  3.761316751893943*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
r/h/vDxUoA==
       "]], LineBox[CompressedData["
1:eJwV13k4VU0YAHDZs7vHvruue1FJSBGdl0RalTUhS0nyRVIkSkLZdylbaJNS
SZTkILsshVDInv3aSegb/9z7/J45Z84778y8c46sg9uJs4wMDAyq6GfjX4Pv
v8NQU48fvi0encogBWXh4R+PUBtx9v7QxyVp4lAy1vmFM7sRr/GQMI6mikPx
AVpP7ZYmvEvxxO6yV2JwitGeIUukGS+ybhtTqxIFs5K/ZGmpr/jc1/XrzEwi
cFBjh7OwYgtepa0b/viDABwYane/6tKCm3FfnF4yEwDD+BvX2nJacPPprbrX
5jDQn60PjVNuxb9lf/dc24HB3lynl7zqbfjS/Vpeopgf1Kgps2x4O76sG5qW
xc0Dqm16f5382/HEW9WBaee5QSVwlKmqrB2vimVfzazmAuV+DcFA/Q5cvc1d
8F0IJyikfd3FcLATZ922PdJLfjNICLH5LZv+xLWF9p45U8gMYpUvgywSf+Jz
A5tWPu9gBlFP08iC9p94wpUbOQMvmUDoW0a6p1UX7i19xuZEDiPwRWqXT5/u
xrmU3o14FTEAC6sH26jLL5wvcsjvzeEVfMToJu/c01+42CbeH5W3/+B1EeHC
a4O/8Mb2Rk/vT8t4dWhL3N3tvfigrLvuw91LeBhpKisluxePNNWcMjkyjwuQ
5SoqUvvw10/7JQK+T+IsFYo1RsV9+PLCz5DV2Al88azKl8YffbjAy0faaybj
eEe2TmuHcD/uYPSK99zACJ66w3JwIqYfVx8B3/cagzhVN4JZMHgAL6V/ODF7
uB0XHohjf/BoAFewfJ0seqQNZw96wCX9eQDf/S43ldusBR+reSqgyDCI1zQ9
7CIvN+KvjMspOj6DuHttyCE+o1L84WyNQnnSIG53/quAceAHPDa+aath4SAu
wzIu5haXh3t2dKkfnx/EoXdgPF4yHt9tt6R/9uIQPi2oxHy4LJ9QZFw/MBY+
hDuff0wh04sIsUfMR9xyhnD2/aHR2K1SYvU3v9m1EdSuu1XV3rWKKHXbejbC
YRj3n0o+2NzSTBjdtA96Z/4bT5PuKZge+kGoRpUZZHj+xiXOkOPK2LoIiXRZ
9ojY37iMUf0rLko3MV3SF3qm8Tf+aLDJ0/DwLyJx3T4aMxjBlTkcmuxy+wh/
nvLj/xxHcHKVy89xxX7CRYqMjd8awQ+kCF0YyewndPb2J5R/GsFnWVgNjkUM
EIN+DsmXdo7il/vP2t/SHyIaI8qtbUxGcdNs79MGL4aI96lkKaNLo3jKj4np
l/zDRNin/ocyL0fxtKPbzvi2DROqaw5PmihjOEW+ZOG97gghwf353Ee9MfxM
XonxznsjBKuknOJTuzGcN05aOWBshOjUHsi5kTKG9y8eC8wKHSX8fR3fbBMY
x6UWFB6lvBkjXMI/e4iqjuMN3S0uOxfHCNMUOXUW43FcUVwsr3b3OEErHijo
CkPXD7O4/ikcJ/i+7POuyR7HmT9KiKTPjxMrP7M086vHcfxhV6Hp9gmi8a9j
cRjTBG6+raqRKX2CeM9Z4eclO4H/sX6qyNY6QWSKU3BHfAJXiq3DldkmiSt7
Bsu0rk/gPqbusyvnJgmJ62eqR2cncJHxzEBMYIpgDau428Y3iTfF7xUq0poi
ph9QDpYpT+Kz/h+Zn5+eIj4XDX5JcpnE7f4Fcnk/miJe1OlHBt6dxL86fRY+
XTFFJP54dMz9ySTeyzjpmNE/RbisnPlm2D+Jew0c0DISoxOmHJVxagxTeNRK
oUuhGp3QEZM3k5aawiP53ijEHqITVKUgIU7tKXzPDvx1tz2d4NMaal88OYWz
Opuop12lEytG++/3e03hw9+/97SH0InBk4+tGhOmcPfnxc2RyXSi8TyLRNHb
KdxpHCNX59CJwmtnux9/ncJ5lUX7A4voxJO9F9rFZlH/Z/rEf9bQiUSmS1+j
SHS84bhwvl8bnQiuuVrPrEbHxz2SCi710omrEb6V10zouOZBN7niUTrhdCKA
mLpMx4mxiSn7GTphLnz3g2M8Hc88XL7JeYlOGHRFvO3Ip+MLrqKaLX/phEZG
3MsjbXScqpnr9Gwdjc/p/tPyBTrubPDbeOIfnQhLaGoW55zGw8ym8rKQmby/
HTEXn8afZtVot6zRietWbXXRW6ZxJna3uJsrdGJOu8Owfs80/vjXkPHLBTpx
QfpnBcvhaXyyypTZnk4nBjb16IL1NJ4tK6Wa/ptOnBrsLfFxncb/Xlo0ce2h
E9+qBva8853Gb9/42/GlhU4czB5+Tw+fxhUP1MtXVtOJ8rDRnUqp0/hs04P4
kyhfWhcn8s68nMZ3vzx8JRLlM8+Yvj390zT+wvMOtzPKt5La7IvOBhT/dH3S
GJoPseWlJ0enpvFrBtr6fx3oROyPFbmQ9WlcR9UjO+YIneD4tPbwM88MbkOZ
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
/aOBww3pqxv+Hy8SMEI=
       "]]},
     Annotation[#, "Charting`Private`Tag$19184#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
LzKOYS9e6CqJnCGhoW/iX1pvjWKYZEpY3AUSOqrlejaD9Atryhr8xXSZhMSI
Sfe+5Q1jJoJS4GtGQieeKjiQLIcwP47SmevOJNR6r7l5hWcA4wjb0u73JKGd
nMNvQrh/Yo9Imk/0/Eioxniu4YBIL6Z4N2KjPoiERLt3tL071YN9XuvUh0gS
uqJ076ZaTDem5y5U8DaBhNKro6WaF79hI9MWTAfSSUg6x9++xK0TI43OvefO
JyEbez5dcnkblmh6lCf0LQl5lPDNOfq1Yvt/3HPYek9CfG9YDkobtmClFxvq
XD+TUOevb7rDIU3YqRaOvRMNJJST/UFjT0Aj1qNtePtqGwk9dFG42ZjVgN2o
yWzv+E5CanmEJw19NCysTC6wYoyE9I9acv15XoMJHfLoV54mocHQ5VE3tWrs
5auPKnlL2/FrNKbyDlZh+AFSjMgWCR2739uvkf4Ja35ydjKOREbXvK/wRDtV
YqYi8RrMO8joYYOvqnr+R2w6ufehLw8Z6ZKVkq+ll2OckbY6N8TJiKNISuvE
aCn2mOlNbr80GdU431x4p1KCKfuv0l9UIqOpB69lQnOKsJrNY1ca1MhoLiSI
Y1D+LaZ/K6QI1Mlo+In0ZXJ7IfZ7rmVH0Sky2i9cf+9a2GvM02GXzYHzZHRW
qpzN4XIBlmyeI8BjSkay2gKSojdeYHand1XJ2JBRxmvT3KTzeRiuFHJdw4mM
vJr6qnuuPsPYd6+yX/EkowLCsL1UTDY2RG9betOPjPYKfcQXfz3B3k78uPog
mIz4ezsPDhg8xoLazpAfR5GR+OqOuwVjWZjMo4P6bZlklLMZmNaVn45thmRs
jD8jo43kvk5N8zSsxZn9KeE1GQWpVL18dTwFe2R49wz/OzLiuy/WtXI6CXM7
Njsn/4mMGucNrLRuJWBaUuapWvVk1F43sWOGFocJcHSom7aSUZ/y2dhbKrHY
x4Gi6MhBMlKevjMh5BCFRdEkVHPGyWhir1GTgmkEZlaQOPBxhoyWHp8mG3KF
YcpJlOBvK2Rk3JY1pD4bgpH9bsn9JVBQdUfGfxUrQViP9cQ3RmYKYtjLZ9st
EYi9OHf5jhAnBd0o4PdqcvfHdESwr2dEKSihcaNG2+0uJkp+6WpxgIIeOsh7
gIgftvBXWNBbkYLsr0qaN9f4YLRvkZ9j1Sgo35P5yAdvLyzlI53tc3UKChaa
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
       "]]},
     Annotation[#, "Charting`Private`Tag$19184#2"]& ], 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
Q0eQ9X8/YAWl
       "]]},
     Annotation[#, "Charting`Private`Tag$19184#3"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(ii\\)]\\)(r)\"", TraditionalForm], 
     None}, {
     FormBox["\"r/a\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 12.}, {-0.9999984356585325, 7.500601054839375}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7609083525540543`*^9, 3.7609088276125393`*^9, {3.760908860323814*^9, 
   3.760908870461879*^9}, {3.760908947998766*^9, 3.7609089653851557`*^9}, {
   3.760909007914953*^9, 3.760909022417005*^9}, {3.760909137500537*^9, 
   3.760909151474886*^9}, 3.7609238902711287`*^9, 3.760924304064851*^9, 
   3.7609603774793873`*^9, 3.761044756305483*^9, 3.76129908849535*^9, {
   3.761314500486137*^9, 3.761314525987007*^9}, 3.761315721362479*^9, 
   3.761316686454266*^9, {3.7613167406658373`*^9, 3.7613167524208593`*^9}, 
   3.7614281044797297`*^9, 3.761431595829731*^9, 3.761583444399172*^9, 
   3.761662639882359*^9, 3.7650170713627462`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"no", "=", 
   RowBox[{"Nopen", "[", 
    RowBox[{
     RowBox[{"Erange", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"Erange", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", "Eth"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"umat", ",", "u"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"umat", "[", "r_", "]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"i", ",", "j"}]], "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Nchan"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "Nchan"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.760910570740905*^9, 3.760910577010962*^9}, {
   3.760911112490136*^9, 3.760911130992275*^9}, {3.7609112129553328`*^9, 
   3.760911241308817*^9}, {3.760911286599764*^9, 3.760911302127116*^9}, {
   3.760911395612715*^9, 3.7609114001657143`*^9}, 3.760911454456538*^9, {
   3.761316693460566*^9, 3.761316694238353*^9}, {3.761431627909865*^9, 
   3.761431633651945*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqs", "[", 
    RowBox[{"r_", ",", "\[CapitalEpsilon]_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"umat", "''"}], "[", "r", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "\[Alpha]"}], "]"}], "]"}]}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"VV", "[", "r", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ")"}], 
          RowBox[{
           RowBox[{"umat", "[", "r", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "\[Alpha]"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "Nchan"}], "}"}]}], "]"}], "-", 
       RowBox[{"\[CapitalEpsilon]", " ", 
        RowBox[{
         RowBox[{"umat", "[", "r", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "\[Alpha]"}], "]"}], "]"}]}]}], "\[Equal]", "0"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Nchan"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1", ",", "Nchan"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760911246886544*^9, 3.760911281174945*^9}, {
   3.760911321057433*^9, 3.7609113877433653`*^9}, 3.7609114946426086`*^9, {
   3.760922975375099*^9, 3.7609229755958567`*^9}, {3.7609233849903803`*^9, 
   3.760923390715756*^9}, {3.760961847355032*^9, 3.760961850952837*^9}, {
   3.760962031215859*^9, 3.760962036149405*^9}, {3.760962122358541*^9, 
   3.760962155543449*^9}, {3.760967898283214*^9, 3.760967899422976*^9}, {
   3.7613145764714003`*^9, 3.761314593976475*^9}, {3.76131466115737*^9, 
   3.761314662001965*^9}, {3.761316708887898*^9, 3.7613167094140177`*^9}, {
   3.761316771279443*^9, 3.761316771488545*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"boundarycond", "[", "\[CapitalEpsilon]_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"umat", "[", "rmin", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "\[Alpha]"}], "]"}], "]"}], "\[Equal]", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"\[CapitalEpsilon]", "<", 
          RowBox[{"Eth", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"umat", "[", "rmax", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "\[Alpha]"}], "]"}], "]"}], "\[Equal]", "0"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"umat", "'"}], "[", "rmin", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "\[Alpha]"}], "]"}], "]"}], "\[Equal]", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"i", ",", "\[Alpha]"}], "]"}]}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Nchan"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1", ",", "Nchan"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760911693746217*^9, 3.760911895089065*^9}, {
   3.760911967385696*^9, 3.7609119716021223`*^9}, {3.760912001945868*^9, 
   3.760912020906372*^9}, {3.760922586873879*^9, 3.760922597045718*^9}, {
   3.760922700448195*^9, 3.760922721901044*^9}, {3.760923030318969*^9, 
   3.760923030971725*^9}, 3.760961306908559*^9, 3.760961731576598*^9, 
   3.760962200734623*^9, 3.760962267827141*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"alleqs", "[", 
   RowBox[{"r_", ",", "\[CapitalEpsilon]_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"eqs", "[", 
          RowBox[{"r", ",", "\[CapitalEpsilon]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "\[Alpha]", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"boundarycond", "[", "\[CapitalEpsilon]", "]"}], "]"}], "[", 
        
        RowBox[{"[", "\[Alpha]", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "1", ",", "Nchan"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.76091202290924*^9, 3.7609120348785963`*^9}, {
  3.7609222438322353`*^9, 3.760922291466112*^9}, {3.760922389326725*^9, 
  3.760922390804599*^9}, {3.760922496607397*^9, 3.7609225217856627`*^9}, {
  3.760922610942306*^9, 3.7609226116535254`*^9}, {3.7609227550136347`*^9, 
  3.760922756989731*^9}, {3.7609227889276257`*^9, 3.760922789998665*^9}, {
  3.760923402798691*^9, 3.760923404410578*^9}, {3.7613054233222523`*^9, 
  3.761305435174752*^9}, {3.7613055605609083`*^9, 3.761305564398048*^9}, {
  3.7613146716040277`*^9, 3.7613146947530193`*^9}, {3.761316806030738*^9, 
  3.761316806219936*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Erange"], "Input",
 CellChangeTimes->{{3.7613056478266563`*^9, 3.761305648664023*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001`", ",", "2.999`"}], "}"}]], "Output",
 CellChangeTimes->{3.761305649399658*^9, 3.761314608355317*^9, 
  3.7613147019975348`*^9, 3.7613154879423943`*^9, 3.761428257352137*^9, 
  3.76143166265452*^9, 3.761583444804503*^9, 3.7616626517502613`*^9, 
  3.765017071528955*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalEpsilon]test", "=", "4.5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"2", " ", "channels", " ", "open"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "1"}], ";", 
  RowBox[{"rmax", "=", "15"}], ";", 
  RowBox[{"sol1", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"alleqs", "[", 
       RowBox[{"r", ",", "\[CapitalEpsilon]test"}], "]"}], "[", 
      RowBox[{"[", "\[Alpha]", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"umat", "[", "r", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "Nchan"}], ",", "\[Alpha]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", "\"\<Automatic\>\"", "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.761314745520122*^9, {3.7613170865784187`*^9, 3.761317087470606*^9}, {
   3.761428267361539*^9, 3.761428267720908*^9}, {3.761428317489649*^9, 
   3.761428350019367*^9}, 3.761428489005992*^9, {3.761428525195106*^9, 
   3.761428525552607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["u", 
           RowBox[{"i", ",", "\[Alpha]"}]], "[", "r", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "/.", "sol1"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "Black", "}"}], ",", 
        RowBox[{"{", "Red", "}"}], ",", 
        RowBox[{"{", "Blue", "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"alleqs", "[", 
       RowBox[{"r", ",", "\[CapitalEpsilon]test"}], "]"}], "[", 
      RowBox[{"[", "\[Alpha]", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"umat", "[", "r", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "Nchan"}], ",", "\[Alpha]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Automatic\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["u", 
           RowBox[{"i", ",", "\[Alpha]"}]], "[", "r", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "/.", "sol2"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7609228437046957`*^9, 3.760922954523758*^9}, {
   3.760923510476204*^9, 3.76092352261665*^9}, {3.760923767870668*^9, 
   3.7609237739073277`*^9}, {3.760924015373334*^9, 3.760924095120471*^9}, {
   3.760924338419701*^9, 3.7609243562934227`*^9}, {3.760924433016068*^9, 
   3.7609244331482983`*^9}, {3.760960005262362*^9, 3.7609600095710707`*^9}, {
   3.760960053078266*^9, 3.7609600566509123`*^9}, {3.760960171624714*^9, 
   3.7609602069138536`*^9}, {3.7609602449926987`*^9, 3.760960288931018*^9}, {
   3.7609603924913387`*^9, 3.760960442872386*^9}, 3.76096159424107*^9, 
   3.7609619272266607`*^9, {3.7609619846014013`*^9, 3.760961997800658*^9}, {
   3.760962226437891*^9, 3.7609622301546087`*^9}, {3.760967945183846*^9, 
   3.760967951237352*^9}, {3.761044617686099*^9, 3.7610446209883423`*^9}, {
   3.761045394541411*^9, 3.761045394936282*^9}, {3.7610454435918493`*^9, 
   3.761045474809362*^9}, {3.761045507543765*^9, 3.7610455339753304`*^9}, {
   3.761045635420673*^9, 3.7610456364182*^9}, 3.7610456771677732`*^9, {
   3.761045713646616*^9, 3.7610457173193808`*^9}, {3.761047134593875*^9, 
   3.761047319523312*^9}, 3.761047406017967*^9, {3.761047441551046*^9, 
   3.761047497038887*^9}, {3.761047554989463*^9, 3.761047688981134*^9}, {
   3.7610510947231627`*^9, 3.761051104357847*^9}, {3.761055355184572*^9, 
   3.7610553554729853`*^9}, {3.761305445541285*^9, 3.7613054571156797`*^9}, {
   3.761305654197935*^9, 3.761305655675952*^9}, {3.7613057158547564`*^9, 
   3.7613058233473063`*^9}, {3.761306041257526*^9, 3.761306044825738*^9}, {
   3.761314721718013*^9, 3.761314743977275*^9}, {3.7613168316831903`*^9, 
   3.7613168422672033`*^9}, 3.761428272042185*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
hiAQuO6z7ktmsBqsq1A5p7eLwI3NqXk/TqvBcvUeZT8nAre186QunSXzCSg8
UUvyZU/3yTixSDX49rnUBHwJzGb0halfVgOTO66buwMJPEjY+q+9qgZ/OkeN
rpF8PT7w9oD5DTWYPSPHfYDk4ckRvd0OKWrgLcV92iqSwDPf7qDDd9RgKnqD
r0M0gf/85Ft7OlsNWjKy3obFEphj+jQlJlcNmqrTPSuvEJh3fkAqtUAN3J4v
mCtdI7DwX3uegkI1KFoxt/c2aUtyVM2+LlGDqOeQtYq05bkNRj+VqQHF6JdM
H+mvyp/ZS69Ugy9hSZ+LyPiawoKfv71Xg5hysaZMcn6aeGjl31o12MesX59H
5mcgPVwo0qgGKDtKoYHM31De8a5qqxooVvvfFyL5fbPyh8TVXWqQslNp/ijJ
6/2aWuwxuhrk//OfDDhC4Ct6MXoPCDUICqjxeuxB4DXrR0PdBtXgawdvJGUf
qedm61r5MTX4j//n+c7dBI40fyrV/kMNcrolUqstyHysRT0TfpH9cZEp+MOY
wGdc2hZX/FWDt20O8r81CHxjTbqWG4c67I/isWqRJvAhw127KjjVoeeaB+c4
L4GFthSmneZTh7Sg8eMdo2zMRm64TUAdGteGD+X1sHHJNrHh1cLqcPDAqQOv
SB533XV8/bi4OqjvbOVKzGVjA1uKq6WUOnyceyJ3IJGNOR3aIx/IkOP1emZ8
z7HxI9cNTW6K6vDhm5yw2R42nj+6cKRdUx2WuSyi+WZYuPHY4xtrtNXhm9Cl
wq8MFr53fH9pAk0dJDLaxZfes7Bl2FuunavUQWmgUoY/noVvx13MrtyoDvc1
AwQC5FjYL37dRwVjdVgpnNoeNs/EpokD30JM1GEb+0Rgaw8TD6VuN14L6iD5
dLeRZyoTGz4U6MizUodQgYUZBWEm5n/y5g+njTpE1x7nTRhhYOYzfw2P3eqw
9tntTLsPDHyp9EugooM6OHxV4PtymoHbPiYJ3DigDp3cnJGvOug4/5P5mu9u
6sATf9267jEdn/3y29nKUx0+T1kcWhtJxxqdTg+4fNRBXutNiaQuHQcPKqDQ
IHW4ht/L0k72YlGu+6c8o9RB8JKrb9ZYN+ZdwA5T0aRevqd2uxZ346UJ1rqL
serQkXZq/ZHQbvyTrjB1L14dzpZx3TjP3Y1bSpKOfb2tDh4bFurfSnfhm14X
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
K6Szj3Bkk5MUrPaQajTuEtL/B9RTKrw=
        "]]},
      Annotation[#, "Charting`Private`Tag$19292#1"]& ], 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
b1/nJhag/wGrVDWg
        "]]},
      Annotation[#, "Charting`Private`Tag$19292#1"]& ], 
     TagBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVl3c8le8bx23HKiR7O8gqSsg490WlQjbnHEdljwqVkr1SGvKloZIkLSEV
JVTPLS0kyY5sKXvv8Du/v57X53Xd4/q878/z3K9HwSPI3puNhYWlh5WF5f/P
uc6qj+RL1ygsZfUao8oclMZM8TDT1hNoXG6ENyOilwIbv3uIt8Yj4WKTIv7I
KUqIbW4Le+sV1C2vdd8qmg0JjYldWWzJRoW10osyicKo66110ExLIVpSjWRI
PFZE5uShjsmWClRIeaqzZd02tNiif32ipR5lmuZ3bWbfhUq2ktweqzWgo266
r6zcd6GQy63qByMaUHsTbToO70JTZmHlX2UbUXi+sxA5cjcaelo2/Mi7CbXZ
3HT9NWuOfp0xMTsw3YLejJkPpvzZh8q37ByvWteBjh/yDWR5aIOiL24oi3Xr
QNaM7f0dKzbI+Hdfgn5hB4qPaLmoqGGLStMTJB86dSK2UtEvtfG2qJDz8+7Y
jC4Upu/WvbDZDtUHkK2lNvagJwaJbedD7ZHO7aSiOZMeJP/ftIRmlj1KqZwR
r/fpQVSfnV5BX+yRtdKnvvMlPSgkei31m4gDqm71Dptj9KKOMlONglwH9GHn
4wc/svtQp+Eba4v3jkg7+dngfGUf6t6X2dzS5YgyW19vlh3vQ6aPo6jzK44o
NKCy5LBRP3pPvaL6x8AJbb4xWMPe2I+22dZw+D1xQhk9k0LqS/0oRVBKxfOj
E+LRXHK2lf+NKn8oDwx0OqH+ct6ejKO/UbK/hGmCsDNKH9KY3c45gIbTxZ3+
BTsj0nZdQ1eNAXSa97Wi4iVndCrGOCbebgDdeZweVXXPGdmK7Of5fmcA5QsI
8aZ/c0aclEAZP70/yCZNtUtbjopOnA/xSHb9g05Hvte120pF3fXRj1/GM+uu
TkFju6iozPc/Hdbvf5AJo2fhjh8VHUt9vjvd9y8az3CgVD6hos72kovll/8i
6VIB6ucSKrJUef99oOgvCrq7Swx9oSKVNz/o21gGUVkzr2JWLxVd5WzLpKsM
Ikkb6v7z41TEYtvbF2M1iAr73HuGlqmovX8qoObmIBrdusFXbgMN7d2yXDhF
DKJ32yRjJ2VoqDiMfUH89yAyszhnS9lEQ0of+UwQ3xByPB7ByrWVhlLWicR7
6wyhggrVj3uNaGiVJv3lEnUISa9k/uDaRUNH7pP5C6OGEO1fxWGwoiFzg+1p
q1VDSEpc+LAqg4Zexpu0kyeGUFHRttAmdxpS+LZb3lJ0GC2zlbuz+NFQspi1
93HjYfRk0epyTgAN/XN3zr3hMYyMdl70qz1BQ/75B8ffnR9G+0IjfU+cpqHm
OR/d/oJh5Fdiz3E9goZ2mQaF8TYNo0EjGtaLoaEXl04T2svD6Orv37K0eBqS
bY5hpyqMIP9Gh2eLCTSUJH9+b9SeEeQ+O8QmnUhDi4dTLt8PGEGa15tf4PM0
5PPqZn3V1REUpS/h8vsCDTWuZYlNlI6gqTWxu5cv0pCpxRNX0e4R9DH9+qZS
pi649uKeMdco8roTle3H1NJdpQMemqOop777bQZzPsv08ZtVdqPortmT8gPM
9fu51C20T48iBaLg4pNzNFQp2bucljGKKpwP1cQy+3u6Of3pyvtR5Ptv3LA/
joaumNkf8vozihKLaf81RtNQiDOv0Ff+MVSrOn7Wnunf5XBFhc7WMUQ5tbvj
IJMPJTr85E3qGEr+3O60xOSneGWrylrkGFr/U7lQOZCGuB4NtXhnj6Fe1dTi
Hib/odLsCzVfxpCiyCW1LZ40VPvNxWjb6BgSFUhsWHeAhgp7hEdvCY8jtxKO
mDhnGkqbrc5kMRhHI3+uLyTa0NAhGSO22vhxtM3BJsUBmOehM12kmzOOEq7+
spI0oKFNu/O8b38bR9YhnzeEbqGh0OLLXrr8E2jIq39tWZqGDpf7v/sjO4F8
neM+KTHz6Vq9W/S2zgQqTvVt/k2iIehc+cJKnUDJucFyxtNUtPXvT/lX/szx
XrSlH3+oiDz1KswvcgLpudO8OH9REYkrUOP7vQnUyP9Odu8HKvqh1ZmcMTKB
8uh5UQ6Xqeijftkfm7UJpPLVRGMkmoqKTdOAXXgSZV6XIDYdo6J0J+spf/1J
1BL/+36KHRV5RBFO+vGTKEx4zUtbkIocE9MLhq5NotcDXDtXVp2ReWoId+bj
STQ/JToePOqM1B9uLuX4NonEFvOj3Kuc0VRNpnS92BSSzN19zDbKGfU3h586
qz6FUp5510b7O6PmbudaA5MpNCfka+Xq5IzKZtbF3vWYQp0XnWRVNZ3RGemY
vqNPp9DlpqZi/mYnJHL0UC73zmlEvbNYdVXKCalz3/9sS51GMeu7BLpYnBBk
D/TeOjKN6IUb7Zt+O6KjrQFSmtemUYhpIflTgSP6uCsyyfb3NHLfPrrnvbEj
OilzK/BW4gx6fQpN3d7ngBpq67dq1MyiUJO3qSNqduivv6jNye5ZNKZbGXaG
0w6tcrgceTcziywWXeIbum2RulHPfRuZOdQRyXIuK80WxT8eFzkZOIdkinYu
TjHvl62x/PNvBeeRCirqIJ3bj67omL+xdlpAfU+/Labp70Vb2ul7TPwW0HL1
gvPb/j2oJiGgQSNiAVVn+IzEpe5BXK3Xhkn3FtAq/xDf1KA5iojuk/owsoCy
20f3nU3bjby+xkbqJywi7aI5i7guM6Tn/cZEvmgJxYptcOkNNkQ/b2qXTwqu
IOmjRyrI+7lQekPe+hDlFXRzJ8/3mdtrFJd1qoeWdqygOsXSP0l3pii/zsis
snmuIJYn55yJsA6iO5DXWOTVCpJ9bhzy+6EA/rur/7UefRU5/hl2tqSR8cLE
jWcR99aQUa76890DerhUY8Pa2qs11LTWUXa+QB+H+yRbJ1SvoUNrj5dsQwzw
v/aE0aTpNaTebnXLk8MQx/aVbPyuyALdx5bndCVNcELtQ4fukyyg/Uo5qu+a
Kb70IOY7mwQrUAYounSPPdhC1194oxIrCJQm3NhTtgeTPto7qWqxgk51oGqd
0F6c0KfcbmnKCvJO1F95eC+OVKwZuObPCm6X3/EFi1rgwCzxVZUyVmDJWSuM
eGaF7TJeaFoy2MD/B6uw4idbLKh5O+iANxtExS5MTg/a4to3CYVBQWwg/qPk
cuI6O2zRTjW4doYNZm68l5t2tsNmkqs7O/LYoC3yypbmfjuse9OCEfSPDQLv
lR56NGOPxa71Xbh6hx0cRCbds/scsbjGq4SFR+xQ/9DRNWzVEUtWnIs58Jwd
7BT5rcUknLDshNop1Q/s8LynQzJnvxNWtjrm9uYvO+z0E30m89IJb+NY0evb
xgG/YlTaD4Y4Y93btTp7TTgAtq3vfXzZGettzdJ8as4Bx/IP+JQ8cMaGbjsV
T9M5QNw9Wl273hmbvr0gwBfDAZcC9HMj1anY5qRo/9ZqDlhbT87IqKNiW76/
nTcaOCCzW1nZt5+K7bNLf/77xQHvW8LTl+ap2LnO9fvncQ6wuSn4PlKWhg9o
3i9z2cgJpTdmvSf9aPhI/5bUeDdOCM1eiyqdpuGjEaxJf/w54QDdXlGRg44D
hRvOWQVzwtVBaHcSoeMTEBIpeo4T2NzU1OV06Tgs461vbh4nrB3MfWlynI4T
HfdR6uc44Wy62e/vPXQs+bJWko2VCyrMPJrFJui4YIPjvA4fFwidMPtAXqXj
5vqDz1PluEAnYiAuWcIFk+1OKtrt5QIfuXbLnP0uuOT54mqsPRfUxErXybq4
YCvBmPbnrlxwo7ccXH1ccPD3C9cEj3NBnk/2X81oF1yx/y5X3S0ukL0gd0oz
zwU7PyX3rd3ngvazCRE9r1zwEH8u3lLABQL5GyIPlbtgoZqXof9VcMFOzeGw
140u2M2iesh6mAvqfvR1di654JknNl+iZ7kgJThAvY+dgRN5mu4XrHEB4wHb
9UJ+Bi6o7HJdJ8INBk5+XUUyDLxiPlv7zZgbSKfFWPaaMHDKo/C8FXNuSHKa
XsjfxcBkLpbzWnbccG3ToT1dlgxs9YnX9LI3N9zUMOV4SmfgbnKKzLsgbpCX
b2Xb58bAwQkbl0bCuCHG0eR0kQ8Dp++UL7JK5oZFrvN9MycYePP9h/9F3uSG
Fa6WozWhDFzBpnE0P5sbVKoqkoOjGXjw/XZl/tfcoPC5qFznAgMbgOWNr13c
EPuxpftUBgPX3K0LXh7kho8TCzr1WQzstuZkqzHD3M/gsw/LQ6Zfwo3nEokE
XSuHshvyGVhSduB3mTAJzi5VGYc9Z/qPOlIxJE2CEjOx3skiBm42Domw0CHB
d+HlkwfKGPhwxjI13Iip8wPnbN8x+SzH6ubuJsEQW2SueDmTD4NLqM2GBElP
RdtfVjD5vLk0yuNCAs857XrlTwxcIilUvcOLBBdWS38e+cLkFZ72yD+QBMX9
t40Sq5i8fkqduRVKgpj2UtPQr0xeO+4dqoonweOsse3oGwNbZK2bsUwigda4
jkFFLQMrckeer71OAr+BG/wKdQy8GDAobXeXBKlfZccZPxi4rtH5RUMOCcYq
y6SC6xk4x+jjbudCEjxqdKz1aWDgmGydttY3JEi5UWWm38jAzjx3AxmfSCDs
+PdlP1NvPsbP3llLgpGa425BTQzM2RJ2w62VBCKaYnEtTP3L5I9GXw8JLg6G
2ss0M/DLB47l3sMkUCtUFjRl6kt8FY5/Z0gQb31r1oypPU5sGTy8SoK8C0YU
JaY2/JkRNcrNA5Lih5R7mesJAa/wMSEeOBkNAzFM/ffR6UdTkjzgu8Dx9h+z
Hyzw2/AUmQdqM0t7aEyddtL++7wWD/x3zfHKNaafwHbsGa7PA1HDRaTnTL+7
zbQW/gEPPJy8HZPH5CH9JD0pxoIHmn2LdRKZvGbWkxTYHHkgoCyVvvM7A38N
OfUq4QAPKBlm6XQzeWd39O7j9uWBNkf9mQM1DBy2y7bzwjEeOFqb3P62moFt
896d4A/ngdOLWGGlkoHXQm/eFrrM9PPtdKEi87ybuzi1r6XxAHt/6jHSB2a+
zIM/imbxwN2l3JN1zLy4iliPShXxwK2aJF3SWwbeFvEmLvMtD6RYNXuEljIw
b+8mUYXPPMD7Rfbt12IGLn3GjlR+8oBsoniD9Atm3kSPN+T08oA8iyKbVAED
+0V1+mqM8MDP4p+UlVwGFrUsTdFe44GIcXpF4AMGHn2holxE4oV7h03DVpnv
x0fxa6XbhXmhZXmDbPAdZt4GAnsNlXkhRGVmPX8aMz9xZN3dlrww+uJhFts5
Bn78N7XyiyMvyFvyNOI4Bo62WXO1OMgcf+LvU88oBtaSaTtrc5wXdtQIbnY7
ycAXS/5rod9g6q1Xd211Z+Bd40vhgX28sLxto72/HpPn3mvq70d4IV8ZyX/R
ZvK5p9W2YY7Z38OOd+s1GFjc0W1HKYkPPnx33uQhx8AjJZ/m2TfzQVln+awg
NwNfjU85eSuUWRf+8BTXu+DejSqBHwX4gYP2RvKeqwsWC8IyYmL8sP6G2K1C
R+b3tpL2zV+eHzo2mia/tHLBxeGXNNdv4weeYIeEi8Yu+GLXxBCdxg+t941V
z0i54K1P3viOZ/PDo9nylupmOo4ztnOXNBCAXPzi6KeddLz3YOaUvpkAqIXQ
RT120PG62OEzTlYC8FLvs9rUZjrO+HD2UYqbAMzNRpmOStBxiUXZMNcFAXD9
YCrgOE7DEzSlkOmfAjD6e2WU5yYNHzw1e7EmYh2c9+Zo0+ulYsOCWy+j8Xrw
nFlRfeHujI8uTMZWCgjBTtcKx2MhDnhRQ7BTy0kYWCpHTBQ8bbFxXn5WWtoG
IN87/NXS3BJPClu4OVeIQMYUJkt+MMf9SW7OJ7hFwVfwWJFqqhkOHNJU1OYX
hZL3uqgp3gzP71kcHRUUhRSeJs+kk2aYl/3KWX9JUdDlXvUXo5lh7bAPL920
ROE5OxdPlpwZjvJW2WDjIAp8MyGhoc9NsShl5LvGXVGI5/Peo/kT8L7x0/t+
64nB7cyvB89domBpHdlzJGMxWDxCqQg6TsFjJz5WaJiKwc24CNcAKgVfmxM0
PmEpBkGYzPNQiYI7V55sXjskBpfJX/k535ngE/y/NkhcEIMB8upS1LQxTleD
Tqt2MVCNNb3FEWSERzxJwS9jxOFfU635wB0DPJa56x1OEIevu1HTn/MGePxn
LPfXC+JwmsdGcSnYAE/ZLN7uuSoOP2T+1dhaGOB5o6GP63LEoY09a/uneX3M
JlIj6l8nDhXzx3rKnfSxxMf/ymQUJODP8OGAEhk9bE4WY0uskIA7cU8fOrdv
w4Mee3KMvkhA1oTqB/rXbTjp3mnria8SwF7utsn/zTbcINuaTm+SgIkd8k/y
b2/DbhK3tmn+lYAhYfbMT67bcNg6Ke8fApIwlN6ubdCzFecvyFZK0SXB+vDB
6D9TOlj4m0ry83FJqP3q3/NKXxuvjms/rJ6RBEcBh45jatp4SNjobf+iJAwz
jJf1pbRxBc1mSJxDCp7ms403rmzBwf2nzePEpUDHVLuVuLwFNy5XrtqZSkFE
WJwdW+FmfEP9SND0FSn4mgyUSj4tLH3+ma2enjTk9cQNn2JRx7kFTz8sGkqD
6EwB/9yQGjZoytN7h6Qh2uvFucQmNeyomCO9a580mIQRtp25ajjpbdZfO1dp
qM0I/U53VsPLE6mxAfHScPrgP+Wo55twG/3k8we10tBzzshB+rgqvqmxQ3CD
rww42P0qX6+gjJ0sv6UQR2TgcRnxt329MhY+4i50+JgMXAiVqX+1SsaXci8I
vw+TgSP/2eIrv8g4Wq1NJChJBtJSJLvGb5Kxl2qExNcXMrCO+4rqZhEy1lF6
p3jmnwzIv8/oCRZRwtWSptunU2VhZQ+rJ5uhAq6TfabCcUMW9hbfC8LqCrhZ
UUZ8Y4YsTBuEN1yQUsA96otLeo9kQV3oXbD5ijxeMHxRHl4mCyUODb8OvJfH
KgwFK7Y+WcAeTXeXLeVx/G1WTyFdOahJ3G1g3SSLDaUrUrY0y0FV7I7ds2lS
uFeJ3DnYJgd9we/9RGOl8AWNcxoPuuTAuGGTvYW/FG41tPgsPigHVkEBhkNG
Uvg0vX6Z9Z8cBI1qEKReSexieXzbkKA8eElvzy7SkcRp55nXh548XI8YvMPo
FMfr2LNPusfLgwTb+9RRf1HMtYgdJhPkQZfCOvTeSRSvjnVsjUuUh1oJH/Mc
U1E83iYxmZUkD+a+njW5EqK4rjA1oDtNHhITw5zOVm/EVzzifA7lyUPjbEJV
/JaNWLTCjXagUR6G+uv2bucSwbJxcsZ0FQVQJ13vs+sTwgXBJMWOTQogsM51
KapBCFN8JrndNRTA6HHxyusPQviA5YcGP20FyDn66ZbTAyGcsdH3SKihAsyu
/Gze7iOEJXIL0m9YK8DTch+22BFBLNJgstgUogAv16cKDbEJYh5l12L7LwoQ
xJKfR33Cjw9LIIu8KgXIftodnJPKj6sFFDvZaxSgsulOMX84P06a+8P5qk4B
1m5pHV1vyY/XVQY7ibUpAF9PVcfyKB8zX5dm2kcUYIf59u2e+nxY+kXZVm9h
RRDQi+JjbeXBm00knp0+oAjw5m6fxX5uXKTkv8zmpgidz+R/exlwYwPe0j3J
HorAXcmWkqrEjc1aaN0PfBVhx6mcu4pLXNj5+E2h+uOKIBPW8FMhhwvHPBQ7
qXlOEfgDdp45x82F6wREd/QUKAJDVK8prIEDn+gU/mDBogStVquN7zLYcOVn
13e5bEqwXu7CUfJlNiz77NFrXk4lCDoiSroZxYarYwzzq3mUYP78sNyjg2xY
UcHjusUGJeB44PTQVYEN//B84WuhogRch7LK1J6wYu1BG34LKyXw0IkLXH7P
gsenk5z23VQCg8ZF00eaq8Sv1nvOd9KVIK4znLNpwypR/a6YOpmhBNG2XGLi
yyvEg8Ru+q17SpC22tDTVrVCuEjpHhzMZe73z3Wvnd8K8cms3efCOyXIUNDd
OJ3zj7idqhZa1asE8vx9BrcNlok9Wz6n79Mig0jOYX6N5AWCxrXXsW4LGdRG
v3cahi4QhzuqBKhbyZCSyad20GOBSL70LdZLnwynND93deotEM1/Gn1iTMlw
IfznzOfuecIrq2/rKycynCmy6lM0mCfihVi/ykeTIeoKN0fazCxBTBstz9eS
4XY5bF7Mmibu1bz2cPhBhm6F1IhrKdNEwsNt1QUNZFB0sqSZxE4T+6gat7xb
yaDp9PPK60PTRGOZpH5DD3N+pk+9ldw0MRS3eKJghgx+c4+rJrKmCFHB10Ne
ksoQwMHbV/90kgjU3Nr2w1sZ2Ok1HyNbxolT85JLh/yUwa7+5vcbZeNEZAW7
5NhhZdARyXlVc2ecuERrovMeUwa5F4uvzniNEzkJoT/NwpVBha37n9L0GNH7
i2gtSlaG1I6WKxIbxwjny5Yt118rg4ZVz2njIyOEyZhXI51HBa7obRR/xxgk
RN/syX7LpwLu9/lV1M0HibFE9WNy61TgWfQujSfag0SmwgTfb2EV0Kg+2fmL
c5BYdYzYeUxaBTLOXkcSL/4S+E1q4bktKnD5UXlDK+9fwvQCkVLkpAJVdREr
/F8HiN1k8f0C2Srwu9er0CSin3g5+knB64EKeBhr1K8/3E+QXwfPlT1SgamV
W7/Haf0Eh8X3u355KjDWVVzyU6+fqAg6N/XhpQq43hustp/uIyhvZm6Ef1GB
eZWX1+sC+wg9+x+9f0ZUQGjKn54f1Etsir0YWqGvCvs3Koglp3UTb40ecloZ
qkKJ2idFamI3YTuPrzQZq4Jm8qUwrdBuIjRwNv+vqSqQj9e0sLp0E5Wubj3r
rFRB5/gljr2y3YTfDj0LhpsqdNBP02Psu4gnUz1SM+dV4ZN3QPTG1A5C3XsH
Vm5TBUPG2+t7HduI/xStl878UgV1B//TgSZtxEyXx/beTlV4lNf+5pFKG0G4
JOVl9qnCsJy1lvXiT8LetuuG2Kgq7Envnwu5+5MIMzp7jIdlE1jqy5xQHG8l
KoV+KIwqb4LjLyz/nbrdQngTfgkvj2+CL24pfzvITcRYwNDp3Sc3AVlTwTdN
sIkIlTl6pDlkE6TxHTRy+9dIXIwMsl+I2AT01/7Zqo2NxHPDEHnjc5tg3KA8
40xCI/Gv+MzbD+mbwMh0ac39bwNx5VnmTP2HTRAu9XDHvrf1BM5q9JrcqAZ3
iwjWE6l1RLeVwqEQcTXYWqXGbR9XR7AsBtCXJdWA18mTjI7XEWZ23Nac8mog
bGgTDHZ1xGdWQ30JdTXoKcph6RSqI2o87vKYUtQgX+LI92n170Qb+XBBio8a
/NuX9Zmw/EbM5KzNb3mtBsXSz9fl/KgiBpzNsy6UqkFTj0rGSkkV0cpxeW/f
GzXwEjwy7JVVRbxxk7yVVq4Gys6xl/yCqoh48e2GK1VqwDGXuGi6rooQPH84
svqXGsx/Kp/cbFNJaPo2sXizqcPeB+nd0R2fCU/lPJ70/eoQ5J3en7jpIzGp
flWvcIJZf65EcLEQRMmD5Z7Z8xoQ/PxKUf/7V4TLLiUwktWEOyK2kuFGTwmp
gMTSzeWaUL7IubPJNJPYyHv0xX6qFhirL4kvO50iHuyMCp+ga4H9g8ozKpnB
xNao5J1XXbWgeEZ+wWPgOGE98byp1Z2pM+7zCY8dJc41zy56HtWCHDuD6hjP
g8RCdoxZeJwWuJ9xf+hwkUZpM7ra8CiPuV4R1yPjuliK36kHGfsKtCCNVK9x
Pj+OMlfwynvkuRYotrLy9Z2Ppwgrts7rFGsBcVi8oco0gWJJkpF+V64FSXSJ
yGMvEylvGx95NTRpgfRjgYWqO8kUi3UlWiGtWsy/7PZhr4j/KK17qubE27XA
Kzbi9mXNFMpM2fD5g91acLyt8HAgbypF657208EhLVghHB/0f75CedtmGpI0
qgXNjCFOdb2rFAsRB7RlQgs+HqgQjX14leKTeOrHyVktuL9HoOpQwjXKTPm5
dLEFLTgQtl5zaPoaJX7phmfZkhbM7wx+f87zOkVQ94nmgRUtkFRSHdrecJ2S
GVA2u7amBRl5atwLZmmU/wEcfEBv
        "]]},
      Annotation[#, "Charting`Private`Tag$19292#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwU13c8ld8fAHA72Xuv616jSFZEOB8lRSqUkVXJKMmOSkW2yOaOB6mslhQR
yvGNrCTRECXSkEL2qPjd31/39Xk95znncz7P53nueZM8A+292VhYWFY4WFj+
/7sw1NFCSckxY2GJVpam9Gx7XSh11rw/BFmxTu4cfyxmBuIvPaX6Y1CjqMLW
2DELM4lB4fVCFqmoPDJ3aKXrqFm47a137P1ZyO2hODRbnTY7WvX81toVKpKh
vSvbtRxnZiMxceHPjny0W5H4fmp3llm+SWL5n/NFqFjjgorFngIz4UnJrOV3
19H2LnGPZMFSs4Sr5ZGLuiVI3qtex/7+PbO/tkbe81fKkNqRLVZnJx+ahbB1
7psdu4nGOKU9LoY+MRurctk6veMOipnlyyi0ajbz8P5JmiqsQC+GOsOtnrSb
+fE2xi+cr0S8W97l9Wi8NKN4JZw7fes+2iIWejDCsc/s0+N9gXPvHqCQ5e7a
uDvvzBjikl6hnNVo09zIm7ziD2YHAz45z+g+RDls/361qIyYCbaV7Q0+UoO+
n6fa7XL6YtapGLT995VaJM1xgIM68d0s/sxWw8CGR2i7EFSVTP00g1csmpNj
dUiH3/63pe5vsz8bOpROSTSgmr8Oix03Z8xqYjLFf+14jEKiS6rFPOfNggYP
8ZwMfoKofhZX5z2WzDT0ldd+FDYiDt1BSdviP2bfUsdnj3dh5JTXxS9vsGbW
E3JobvZ8E6pvF3q0JZUVaV19ElAl+h/6dZSbeq+MHaU8J/0IufUfclPtcaZN
cSJLyvjH6XdPkeWmDFZ3fl5UbLvP+X5AM7r3aGi15Ds/Yr3woDeIswWVCfzD
RKQQ8rgpsVc7vwV9lrZu1lYUQY/fnGub0n2G0PGAv42fRJE02yfzex3P0Mbu
E6sRjeIoXGvH44Ajrci/YM+mrMeSSCeR9/7ElTaUpbeKPsjKobSqQI27lHak
/PgfPSNKAf361Ffi39COhEOVbN7FKqHSrfmMn2MdaKjy2tfNO8mIw5tF/HZU
JzqW8j2tq5mCjmZ6pftJPEcSJWNkCydVJDeuGfdjRxcK1Ip7GoU3oHMSmavl
A10o41fWUkmuBnq3ff7M8eAX6NvhZOuTsZtQFvHk1PfCbpR6coR28LU2+t1G
Givd8hJlXaVubv+tg/bOxXv6dL1Ez6H9xVkZPRSnWnZ75nwPIj+RS+CjbkEP
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
Yu88ZCAt8xOeRj/lwFIx4Y7ZdQayTvPe3TQnB1XTnCreZxmov/pYQ+yyHDiI
NJxdOcZAPoNHtXatMuu1VGj2fS8Dxah7iHWvk4c8/ed2HYoMVPfUcXhQRh4G
UqLEmxroyPLHwQNXFeVhV9bsTtI1OnoteKDVkyIP9KzTLUPxdPTbbf+dH5vk
4TS8PB68l47UF3edWQR5EOLzcl//hoZoGkZCor7y8FogIup+KxU57HmR0XhS
HlyDpebGr1ORyMmjwn5B8pA/Xm2ffZGKUm4li/x3Vh6gVH6fvj4VXdwwIBaY
Kg/f4kKiemh5yEstUvr5fXkIyV0bs9ydi0i7BBnhNfKQEbbM+Uk2Fw353JBR
bpCHwfMjWfOTOUzfP5c92yIPo7tT913PzkHWKnIKau/koVLq8hbpd9lIh/xE
OfavPOhbQv2FXVlocrvdDS1WBfg4PVAQJ5qFbnl+JQ9wKsA9nYPpcp8yEeU6
v4qOoAL0XCOVcpzORFIkD7VPJAXgZ7t77j2RgVYV1jS27VIALaqWxtm7V1Cn
jPmW2UwF4PJNldwskYB6FO6pclCZ4z+pUf6kxqO3yvJS4vkKwLZ4JFmDPR6N
bFxeMShVgCTlrKn2iVi0ZHy/6Vy9AkAki7DX40tI1ZVkwzaqALapoVgr/hyK
IViPCesrguOd8OFu0yMo6WrgQWUjRZAMiG6tfu2K0m583KlnpgiMA31tbJuc
EP12nbrDbkV4pHs0Nqd2D6psCJ6kuSmCEN3s9YYNenhocOSsUrwi3Hv2o6OV
3Rsbyz3N2PxWEbxUw1eX357Hn8mUoR8DijDMPXkoZfQCTtZI0Cj+pAj+gi2P
j0xdxP3G1q1SPxShu/BkqUdMNI441PuH9a8iiAcN2DRnxWCXPcF640JKkLP3
z9j7/AScl3Sp8LEBM/7+y8UG0rBfqu4zaSMl2AgeB+5Vp2GzjNGf4duUYEiO
Q89OPR1/pe400gElcD24Wf0GVwbWL1v/usRKCcZpjv193zJw77PM9eluSrB7
wxh1JisLl3Zs1/7loQRfbBt9w1uz8LkXs45WR5Wgs/mCatxyFia9cShm92Gu
p30tcKtHNg76Io3OBCpB0o7U7hFSDhZgvx52NEYJPhzOf6SVmYu5lvGB6Tgl
yF1V9vBsysWrkx91LyUqgeTmFuf5yVw8NSA9XZSqBFZuW2b0rPNwz4PMU8N5
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
Va2OlFh0y1P4dX6ehJe9BU1FsrHo/4FQZPI=
        "]]},
      Annotation[#, "Charting`Private`Tag$19395#1"]& ], 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1: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
L9v2C4WbJyrb/WlH2sue19of+IU8p/xvXUpoR5DKHH509hdqe2+p1m7Ujs51
eijSHvxCC+4eU8cvtKEai2tR9oxfyG60g5u/vwV5Kz86/yhsGh0sk50PTmhC
LQ3f9XXqZ9DOYGOLN07V6P56y3Jbhzl02KB7zv3ya6zX47xj6+k5pDPNTz+t
/RbXh3i06PjPocGNXrM9PUVYoPMBIfhsDvmzDSWZJmXYP4CuWD02hx68fE7X
9q/EJ74GXtsY8gdtsEitTFT5hI3cy7eqvp5H0kks46/TzbhFrLFOrHYeqQzP
ipUe+I69SoYdFjrnETrywVy/7DvOFhE+3704j/izpvkqrrfgVYVOTx5Y/UWR
iwdfLy62YsGlmUXB4b/oeKWsqgOrA3clrKucEl9A7XEPOpft6sOJLTkrfFcv
oKwLNH3zlD7sIkY9Mr95AVmInf6SO9uHe4OVF3mOL6A2lx8WEs/68eB5YRPp
twtI5GqwXAcxgFkWI8VGzotIOaHk0S+dIZx148iyco9FdCDp48vX9kP4TFm3
IwpaRMtfnnJd8h7CY3rNMztyFhG/x81Ro3dD+IdCxQbnhUUU4P3ytfT2YTz3
I/6V/7MltFpoSE0I6LhUR2pp6e0SKudV69jiSsdXT0bbhnxZQs+WS6PJK3T8
rydkPOrXEtrtnuLXX0DHgfSSlY0ULnDcRY//qjiCBwN9t0rocoF3zouWZYYj
2EzFwH3fRi7I2af1qXr3COZxfvWmw5oLTGy1Ukqvj+CQhvR9g95ckCV9z+9h
xwgeOXvcn3KDCxbnc15/GhvB24XUnp+I4IKob9HJftwMLGCR9JOVzAUnN3LK
7NYw8MkhZwWdTC6IX3U13s+EgT8FyJp7FHKBofn8JSU7Bg4vvX9vqpYL7nhu
zOi9yMAsR/vSDc1cIGZ/5MPvYAbeNS065NPDBcN1tFN3HzCwsF7EuvlJLuCd
JngM3jBwZNqNRh55blDLlBTaM87AVgb/Sa5U5wbP+GEfqXkGFqzZ60DV5Ya9
YsOjjgJMHEJf3WNtxg2vv4VMuykzsfmlFSqHrbnB203wOVWLibl4/7h5OXCD
vKdngKc+E1+j1DMf/McN1ptv8AZvZ+IthW/XvLjEDdUslU5bWyaeM3t6rvQ6
NzQbR+glOTJxUXP4q69h3PBfi4Pm2cNM7HP04s++e9zwyWaip9ydiQ2mDhr+
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
        "]]},
      Annotation[#, "Charting`Private`Tag$19395#1"]& ], 
     TagBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$19395#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 14.999999693877552`}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.761047443715105*^9, 3.761047499141102*^9}, {
   3.7610475643904247`*^9, 3.761047616633379*^9}, {3.7610476489542828`*^9, 
   3.761047689945774*^9}, {3.761051095856152*^9, 3.761051105807375*^9}, 
   3.761055357533753*^9, 3.7612992291824293`*^9, 3.761305570630108*^9, 
   3.76130560650746*^9, 3.761305657489006*^9, {3.761305722636722*^9, 
   3.761305824000794*^9}, 3.761306045751809*^9, 3.761314610247416*^9, 
   3.761314704571143*^9, 3.761316848193713*^9, 3.7613170900650263`*^9, 
   3.7614282798420467`*^9, {3.761428323827965*^9, 3.761428352029842*^9}, 
   3.7614284906691313`*^9, 3.7614285271839*^9, 3.761431666181795*^9, 
   3.761583445286965*^9, 3.761662661580971*^9, 3.765017072001256*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"umat", "[", "r", "]"}], "/.", "sol1"}], "/.", "sol2"}]], "Input",
 CellChangeTimes->{{3.7613168831833067`*^9, 3.761316897844329*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TagBox[
         TemplateBox[{RowBox[{
             StyleBox[
              TagBox["InterpolatingFunction", "SummaryHead"], 
              "NonInterpretableSummary"], 
             StyleBox["[", "NonInterpretableSummary"], 
             DynamicModuleBox[{Typeset`open$$ = False}, 
              PanelBox[
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4ACAdrww+RPlIuok6l
TM8/Tm08KUg4zj+dPILS0E7gP4ytgxcJBNs/svFU4o466D/ZKxjwObvdP79p
XTmG/u8/PvGGYyYZ1z9LkQoifjX0PwqEQGDnRb8/vu/ib8Qj+D9vE83XJVbC
v5fukhdKZvw/89ez6WIz2L92524xdkoAQFEbL+xckN6/pJhS+8w9AkAbFRC7
ujDbvwUaInJDWwRAT5n5eZp8zb9o3C+Nv1QGQBSRn1RBrpY/ig8L+klECED0
T0YpiOjQP98S0hP0XQpAYnTRZBZt3D82V9fRo1MMQH9IkTB2I98/wWvIPHNz
DkBSxpQFs4XYP4R4w3yoRBBA8WquC43hxD+q20Etmj0RQIKHDh8Bpra/6iY2
tJtLEkC46Rd8/U7Vv6uSSQ2gRxNAtv7oNM8N3r+G5tI8tFgUQCsRx19nYt6/
wPJClc9kFUAkhNCMCmvVv3sf0r/tXhZAqtLNyQGCvL9QNNfAG24XQP3ZoqvD
tcQ/pmn7k0xrGEDBHcqWoeTXP1tXBpCEYxlATnn7JMnt3j8qLYdizHAaQIKn
DTg6fd0/eiMnBxdsG0CL7iEfNATUP+QBPYJxfBxADtBvVPD4rj+tmDkm04cd
QNaeMO1CXMq/909VnDeBHkBiJQCAnJ7Zv1vv5uirjx9AoxS8LMt737+g18uD
EUYgQO7/Dh4iQty/wpOXp9DBIEAnD/X/tb7Rv/FDnrYXSCFAqg52FRuxlL9h
hLQuYMUhQJWvJzK6B80/3bgFkjBNIkApIegLcTjbP5p9Zl4CzCJAXHat4CeM
3z+Hnjq/V0gjQDycJ63Nhds/gLNJCzXPI0C6QADto1LOP7pYaMATTSRAJEu1
ZIRkhL8B8sFgetUkQGHqzy4cbtG/d+eOlWRbJUDl0RJwHqvcvy5tazNQ2CVA
vqG04dtt37/y5oK8w18mQGvyk2tdJtm/9/CprjjeJkD3RGlZeX7IvytXRDUx
WidA7YZE4qfzrD9ssRmnseAnQD1gk9x5pdM/7pv+gTNeKEAeJIevmFDdP316
Hkg95ihAxCqicX0C3z87tbGiymspQM1NvdfRVNc/OoBUZlnoKUCnd/aqm6DD
P0Y/MhVwbypACwPOalZpvr+Sjh8tiO0qQE7r3QT/3dW/69FHMCh2K0AckE6e
Bqfev3Rx48dL/CtAkVWIUWL63b89oY7IcHksQIY4DO+YKtW/E8V0tB0BLUBy
C2CK8cK1vyp5agnMfy1AUz1ouFu6xT9KHnj3//8tQE9a3j/RXtg/i4DGkw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19445#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.4919307648527342, 
                    0.492929429446894}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4ACAdrww+RPlIuok6l
TM8/Tm08KUg4zj+dPILS0E7gP4ytgxcJBNs/svFU4o466D/ZKxjwObvdP79p
XTmG/u8/PvGGYyYZ1z9LkQoifjX0PwqEQGDnRb8/vu/ib8Qj+D9vE83XJVbC
v5fukhdKZvw/89ez6WIz2L92524xdkoAQFEbL+xckN6/pJhS+8w9AkAbFRC7
ujDbvwUaInJDWwRAT5n5eZp8zb9o3C+Nv1QGQBSRn1RBrpY/ig8L+klECED0
T0YpiOjQP98S0hP0XQpAYnTRZBZt3D82V9fRo1MMQH9IkTB2I98/wWvIPHNz
DkBSxpQFs4XYP4R4w3yoRBBA8WquC43hxD+q20Etmj0RQIKHDh8Bpra/6iY2
tJtLEkC46Rd8/U7Vv6uSSQ2gRxNAtv7oNM8N3r+G5tI8tFgUQCsRx19nYt6/
wPJClc9kFUAkhNCMCmvVv3sf0r/tXhZAqtLNyQGCvL9QNNfAG24XQP3ZoqvD
tcQ/pmn7k0xrGEDBHcqWoeTXP1tXBpCEYxlATnn7JMnt3j8qLYdizHAaQIKn
DTg6fd0/eiMnBxdsG0CL7iEfNATUP+QBPYJxfBxADtBvVPD4rj+tmDkm04cd
QNaeMO1CXMq/909VnDeBHkBiJQCAnJ7Zv1vv5uirjx9AoxS8LMt737+g18uD
EUYgQO7/Dh4iQty/wpOXp9DBIEAnD/X/tb7Rv/FDnrYXSCFAqg52FRuxlL9h
hLQuYMUhQJWvJzK6B80/3bgFkjBNIkApIegLcTjbP5p9Zl4CzCJAXHat4CeM
3z+Hnjq/V0gjQDycJ63Nhds/gLNJCzXPI0C6QADto1LOP7pYaMATTSRAJEu1
ZIRkhL8B8sFgetUkQGHqzy4cbtG/d+eOlWRbJUDl0RJwHqvcvy5tazNQ2CVA
vqG04dtt37/y5oK8w18mQGvyk2tdJtm/9/CprjjeJkD3RGlZeX7IvytXRDUx
WidA7YZE4qfzrD9ssRmnseAnQD1gk9x5pdM/7pv+gTNeKEAeJIevmFDdP316
Hkg95ihAxCqicX0C3z87tbGiymspQM1NvdfRVNc/OoBUZlnoKUCnd/aqm6DD
P0Y/MhVwbypACwPOalZpvr+Sjh8tiO0qQE7r3QT/3dW/69FHMCh2K0AckE6e
Bqfev3Rx48dL/CtAkVWIUWL63b89oY7IcHksQIY4DO+YKtW/E8V0tB0BLUBy
C2CK8cK1vyp5agnMfy1AUz1ouFu6xT9KHnj3//8tQE9a3j/RXtg/i4DGkw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19445#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.4919307648527342, 
                    0.492929429446894}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic], 
               BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
             StyleBox["]", "NonInterpretableSummary"]}]},
          "CopyTag",
          DisplayFunction->(#& ),
          
          InterpretationFunction->(
           "InterpolatingFunction[{{0., 15.}}, <>]"& )],
         False,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "[", "r", "]"}], ",", 
       RowBox[{
        TagBox[
         TemplateBox[{RowBox[{
             StyleBox[
              TagBox["InterpolatingFunction", "SummaryHead"], 
              "NonInterpretableSummary"], 
             StyleBox["[", "NonInterpretableSummary"], 
             DynamicModuleBox[{Typeset`open$$ = False}, 
              PanelBox[
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4AAICztIHCO1Iuok6l
TM8/pGePG1MdMj+dPILS0E7gPwXzrm691Go/svFU4o466D/Lu3QECjeGP79p
XTmG/u8/nHphKzGklD9LkQoifjX0PyTgaVRAVpo/vu/ib8Qj+D/am62LhnuX
P5fukhdKZvw/FPPBO79ViD92524xdkoAQHwlbqIX8Wm/pJhS+8w9AkBnaY1D
GcGQvwUaInJDWwRAVRVB+Bfcmb9o3C+Nv1QGQPjtC33So5q/ig8L+klECEAs
QZUM7gCUv98S0hP0XQpAlBHXI2wEe782V9fRo1MMQASQ7Bfkhn4/wWvIPHNz
DkDnazYTOMSUP4R4w3yoRBBAzx8MC7JHmz+q20Etmj0RQDD1gwNz4pk/6iY2
tJtLEkDkQ8IlwLKQP6uSSQ2gRxNAsM1UcIMfaz+G5tI8tFgUQCJ4vh4G4Ie/
wPJClc9kFUAIcUJhDV6Xv3sf0r/tXhZA6bj6vqGzm79QNNfAG24XQEMrONXW
KJi/pmn7k0xrGEDyHowDpyKMv1tXBpCEYxlAUDJt0EUJPr8qLYdizHAaQNmm
1xoem4w/eiMnBxdsG0BnjTAwtT6YP+QBPYJxfBxAze3xSeC2mz+tmDkm04cd
QBF4v3/4v5Y/909VnDeBHkCaBaZj1daHP1vv5uirjx9A4px4zQ/Xab+g18uD
EUYgQIOz10u5kpC/wpOXp9DBIEB8YunEdV6Zv/FDnrYXSCFAg+01eaZ/m79h
hLQuYMUhQG0KmsfX+pW/3bgFkjBNIkD8zEUTPhWDv5p9Zl4CzCJAORJtVv1L
cz+Hnjq/V0gjQOYK3HApq5E/gLNJCzXPI0Dzm8ux1VWaP7pYaMATTSRA1ZL/
JuQ2mz8B8sFgetUkQPe9ODDzCZQ/d+eOlWRbJUC8ndDcyKJ7Py5tazNQ2CVA
89EptyI0fb/y5oK8w18mQDNntYD7b5S/9/CprjjeJkCGV1EfChmbvytXRDUx
WidAuDnU7YmSmr9ssRmnseAnQA+7y+m8S5K/7pv+gTNeKEC4/19ZygB2v316
Hkg95ihAE5ZYFXLHgz87tbGiymspQDAU3PU5DJY/OoBUZlnoKUBH78Ra5oCb
P0Y/MhVwbypAHDtUzrBSmT+Sjh8tiO0qQJgGj5qpQ5A/69FHMCh2K0C3Zv6e
P4xaP3Rx48dL/CtAPBCrF+Bsir89oY7IcHksQFsmhgDbk5e/E8V0tB0BLUDk
k5k4lMObvyp5agnMfy1ApneJvCvyl79KHnj3//8tQKsIJnmyDou/way82g==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19508#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.0271132621332021, 
                    0.027064804566618684`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4AAICztIHCO1Iuok6l
TM8/pGePG1MdMj+dPILS0E7gPwXzrm691Go/svFU4o466D/Lu3QECjeGP79p
XTmG/u8/nHphKzGklD9LkQoifjX0PyTgaVRAVpo/vu/ib8Qj+D/am62LhnuX
P5fukhdKZvw/FPPBO79ViD92524xdkoAQHwlbqIX8Wm/pJhS+8w9AkBnaY1D
GcGQvwUaInJDWwRAVRVB+Bfcmb9o3C+Nv1QGQPjtC33So5q/ig8L+klECEAs
QZUM7gCUv98S0hP0XQpAlBHXI2wEe782V9fRo1MMQASQ7Bfkhn4/wWvIPHNz
DkDnazYTOMSUP4R4w3yoRBBAzx8MC7JHmz+q20Etmj0RQDD1gwNz4pk/6iY2
tJtLEkDkQ8IlwLKQP6uSSQ2gRxNAsM1UcIMfaz+G5tI8tFgUQCJ4vh4G4Ie/
wPJClc9kFUAIcUJhDV6Xv3sf0r/tXhZA6bj6vqGzm79QNNfAG24XQEMrONXW
KJi/pmn7k0xrGEDyHowDpyKMv1tXBpCEYxlAUDJt0EUJPr8qLYdizHAaQNmm
1xoem4w/eiMnBxdsG0BnjTAwtT6YP+QBPYJxfBxAze3xSeC2mz+tmDkm04cd
QBF4v3/4v5Y/909VnDeBHkCaBaZj1daHP1vv5uirjx9A4px4zQ/Xab+g18uD
EUYgQIOz10u5kpC/wpOXp9DBIEB8YunEdV6Zv/FDnrYXSCFAg+01eaZ/m79h
hLQuYMUhQG0KmsfX+pW/3bgFkjBNIkD8zEUTPhWDv5p9Zl4CzCJAORJtVv1L
cz+Hnjq/V0gjQOYK3HApq5E/gLNJCzXPI0Dzm8ux1VWaP7pYaMATTSRA1ZL/
JuQ2mz8B8sFgetUkQPe9ODDzCZQ/d+eOlWRbJUC8ndDcyKJ7Py5tazNQ2CVA
89EptyI0fb/y5oK8w18mQDNntYD7b5S/9/CprjjeJkCGV1EfChmbvytXRDUx
WidAuDnU7YmSmr9ssRmnseAnQA+7y+m8S5K/7pv+gTNeKEC4/19ZygB2v316
Hkg95ihAE5ZYFXLHgz87tbGiymspQDAU3PU5DJY/OoBUZlnoKUBH78Ra5oCb
P0Y/MhVwbypAHDtUzrBSmT+Sjh8tiO0qQJgGj5qpQ5A/69FHMCh2K0C3Zv6e
P4xaP3Rx48dL/CtAPBCrF+Bsir89oY7IcHksQFsmhgDbk5e/E8V0tB0BLUDk
k5k4lMObvyp5agnMfy1ApneJvCvyl79KHnj3//8tQKsIJnmyDou/way82g==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19508#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.0271132621332021, 
                    0.027064804566618684`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic], 
               BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
             StyleBox["]", "NonInterpretableSummary"]}]},
          "CopyTag",
          DisplayFunction->(#& ),
          
          InterpretationFunction->(
           "InterpolatingFunction[{{0., 15.}}, <>]"& )],
         False,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "[", "r", "]"}], ",", 
       RowBox[{
        SubscriptBox["u", 
         RowBox[{"1", ",", "3"}]], "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TagBox[
         TemplateBox[{RowBox[{
             StyleBox[
              TagBox["InterpolatingFunction", "SummaryHead"], 
              "NonInterpretableSummary"], 
             StyleBox["[", "NonInterpretableSummary"], 
             DynamicModuleBox[{Typeset`open$$ = False}, 
              PanelBox[
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4AAABeFojCO1Iuok6l
TM8/7FvuQRHzMT+dPILS0E7gP5+pZs2dkmk/svFU4o466D93tN2oOi2EP79p
XTmG/u8/7BbdRGDokT9LkQoifjX0P9ZT2F103pU/vu/ib8Qj+D8Kek6arteS
P5fukhdKZvw/lwWJeooEgz92524xdkoAQGkqf5RUNGS/pJhS+8w9AkD1mm+F
epGKvwUaInJDWwRARjSRtnLylb9o3C+Nv1QGQN/RHpqH8pm/ig8L+klECEC+
3im/3L6Zv98S0hP0XQpAI8JXbh5dlb82V9fRo1MMQEtaIKPmhoy/wWvIPHNz
DkBOZhtuwUtyv4R4w3yoRBBAakZ5gMVJdj+q20Etmj0RQDQISrsI4Iw/6iY2
tJtLEkA/TUDpZlOWP6uSSQ2gRxNAkxpPvwxRmz+G5tI8tFgUQNx/PyJEnp0/
wPJClc9kFUBPKeRxwI+cP3sf0r/tXhZATzjsehvDmD9QNNfAG24XQBGJS3t+
CpI/pmn7k0xrGEC6sGHNufSDP1tXBpCEYxlA9lRFFpiDUj8qLYdizHAaQGpR
PK9kAoG/eiMnBxdsG0C0VxB7mbyQv+QBPYJxfBxAHkb7+yvrl7+tmDkm04cd
QFoPhLNVf5y/909VnDeBHkCeLp81LCWev1vv5uirjx9ARGJrjz3nnL+g18uD
EUYgQHu+hWIuBJm/wpOXp9DBIEBSXqVF+/6Sv/FDnrYXSCFA6SeJJJA3hb9h
hLQuYMUhQOboJ4DwhFy/3bgFkjBNIkD0tHpCXMJ/P5p9Zl4CzCJAk8CnbVZJ
kD+Hnjq/V0gjQEYu0Cw2B5c/gLNJCzXPI0APRucHswmcP7pYaMATTSRANPL2
Bpsbnj8B8sFgetUkQPTsapx8Sp0/d+eOlWRbJUBfOfmjm3qZPy5tazNQ2CVA
ZQfsksWSkz/y5oK8w18mQPicpPaWdYY/9/CprjjeJkBE8N58suxiPytXRDUx
WidASv/tIgQner9ssRmnseAnQAygt3ebDo+/7pv+gTNeKEAttkRuJn+Wv316
Hkg95ihACcKVbsvCm787tbGiymspQMHfTJ2kGJ6/OoBUZlnoKUBBeVEAlYed
v0Y/MhVwbypAke9KsxX7mb+Sjh8tiO0qQDzlg+rTOpS/69FHMCh2K0BM0h5y
HOqHv3Rx48dL/CtAG85s0G/IZL89oY7IcHksQApQwv1yknk/E8V0tB0BLUAs
6eyrgPKOPyp5agnMfy1A9iFe86+Clj9KHnj3//8tQLeUA9OXips/jhG8rg==

                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$19552#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.0294386775711205, 
                    0.02940218191155193}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4AAABeFojCO1Iuok6l
TM8/7FvuQRHzMT+dPILS0E7gP5+pZs2dkmk/svFU4o466D93tN2oOi2EP79p
XTmG/u8/7BbdRGDokT9LkQoifjX0P9ZT2F103pU/vu/ib8Qj+D8Kek6arteS
P5fukhdKZvw/lwWJeooEgz92524xdkoAQGkqf5RUNGS/pJhS+8w9AkD1mm+F
epGKvwUaInJDWwRARjSRtnLylb9o3C+Nv1QGQN/RHpqH8pm/ig8L+klECEC+
3im/3L6Zv98S0hP0XQpAI8JXbh5dlb82V9fRo1MMQEtaIKPmhoy/wWvIPHNz
DkBOZhtuwUtyv4R4w3yoRBBAakZ5gMVJdj+q20Etmj0RQDQISrsI4Iw/6iY2
tJtLEkA/TUDpZlOWP6uSSQ2gRxNAkxpPvwxRmz+G5tI8tFgUQNx/PyJEnp0/
wPJClc9kFUBPKeRxwI+cP3sf0r/tXhZATzjsehvDmD9QNNfAG24XQBGJS3t+
CpI/pmn7k0xrGEC6sGHNufSDP1tXBpCEYxlA9lRFFpiDUj8qLYdizHAaQGpR
PK9kAoG/eiMnBxdsG0C0VxB7mbyQv+QBPYJxfBxAHkb7+yvrl7+tmDkm04cd
QFoPhLNVf5y/909VnDeBHkCeLp81LCWev1vv5uirjx9ARGJrjz3nnL+g18uD
EUYgQHu+hWIuBJm/wpOXp9DBIEBSXqVF+/6Sv/FDnrYXSCFA6SeJJJA3hb9h
hLQuYMUhQOboJ4DwhFy/3bgFkjBNIkD0tHpCXMJ/P5p9Zl4CzCJAk8CnbVZJ
kD+Hnjq/V0gjQEYu0Cw2B5c/gLNJCzXPI0APRucHswmcP7pYaMATTSRANPL2
Bpsbnj8B8sFgetUkQPTsapx8Sp0/d+eOlWRbJUBfOfmjm3qZPy5tazNQ2CVA
ZQfsksWSkz/y5oK8w18mQPicpPaWdYY/9/CprjjeJkBE8N58suxiPytXRDUx
WidASv/tIgQner9ssRmnseAnQAygt3ebDo+/7pv+gTNeKEAttkRuJn+Wv316
Hkg95ihACcKVbsvCm787tbGiymspQMHfTJ2kGJ6/OoBUZlnoKUBBeVEAlYed
v0Y/MhVwbypAke9KsxX7mb+Sjh8tiO0qQDzlg+rTOpS/69FHMCh2K0BM0h5y
HOqHv3Rx48dL/CtAG85s0G/IZL89oY7IcHksQApQwv1yknk/E8V0tB0BLUAs
6eyrgPKOPyp5agnMfy1A9iFe86+Clj9KHnj3//8tQLeUA9OXips/jhG8rg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19552#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.0294386775711205, 
                    0.02940218191155193}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic], 
               BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
             StyleBox["]", "NonInterpretableSummary"]}]},
          "CopyTag",
          DisplayFunction->(#& ),
          
          InterpretationFunction->(
           "InterpolatingFunction[{{0., 15.}}, <>]"& )],
         False,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "[", "r", "]"}], ",", 
       RowBox[{
        TagBox[
         TemplateBox[{RowBox[{
             StyleBox[
              TagBox["InterpolatingFunction", "SummaryHead"], 
              "NonInterpretableSummary"], 
             StyleBox["[", "NonInterpretableSummary"], 
             DynamicModuleBox[{Typeset`open$$ = False}, 
              PanelBox[
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4ATwdrww+RPlIuok6l
TM8/RW6de00L0D+dPILS0E7gP2grk71lIOA/svFU4o466D8PQcpty+PjP79p
XTmG/u8/aOqkBwix4T9LkQoifjX0P9/6KJARRdI/vu/ib8Qj+D/GbM/dswyu
v5fukhdKZvw/JbYwtDVV2r92524xdkoAQCzkPHGPeuS/pJhS+8w9AkCzoXLd
NpfmvwUaInJDWwRA6bJ12CrN479o3C+Nv1QGQIQQciRK2tq/ig8L+klECEDG
pB52egvEv98S0hP0XQpAPt7ZH12mwz82V9fRo1MMQA5eqwnwEds/wWvIPHNz
DkBHqazIlPTkP4R4w3yoRBBA3Vi494Fz6T+q20Etmj0RQHftzd+ixeo/6iY2
tJtLEkBdhg0LRwrpP6uSSQ2gRxNAUM+wIVK75D+G5tI8tFgUQEAN6j52dNs/
wPJClc9kFUBCducTGzjFP3sf0r/tXhZAh/R1hlrEuL9QNNfAG24XQBEbnsNK
tde/pmn7k0xrGECxZbpoTOPiv1tXBpCEYxlASE61Rb0Q6L8qLYdizHAaQOg2
ZttIO+u/eiMnBxdsG0A9y0VDBJ3rv+QBPYJxfBxA6U+Yp5Ux6b+tmDkm04cd
QAzlM6AbNeS/909VnDeBHkCUgE5rv1vbv1vv5uirjx9AT4F017D7xL+g18uD
EUYgQDJji8ZPHbk/wpOXp9DBIEBgydEUsyzWP/FDnrYXSCFA0FUk/MKY4j9h
hLQuYMUhQGCDSlly5ec/3bgFkjBNIkCOqdDtRDjrP5p9Zl4CzCJAIeHSsTPA
6z+Hnjq/V0gjQF0B0GOrzuk/gLNJCzXPI0A95R9aLSXlP7pYaMATTSRA1f1X
HFOf3T8B8sFgetUkQFzJRYkS2sk/d+eOlWRbJUD4ElnTOzizvy5tazNQ2CVA
elXCqLbw1L/y5oK8w18mQDGNWv3pJeK/9/CprjjeJkDfeMH735/nvytXRDUx
WidAqxHriavp6r9ssRmnseAnQJ/xAyiO0eu/7pv+gTNeKEDkYKZDDhbqv316
Hkg95ihAdd0bVSyV5b87tbGiymspQLTtf9le6N2/OoBUZlnoKUBIBRvo3JDN
v0Y/MhVwbypATiE2zuhgqD+Sjh8tiO0qQJPfs+xdcdM/69FHMCh2K0Au6qNx
ZpfhP3Rx48dL/CtAcLAx/LGC5z89oY7IcHksQBJxwF+k4Oo/E8V0tB0BLUBS
AipqktLrPyp5agnMfy1ALZeL6ngU6j9KHnj3//8tQGx/ayzv5eU/c2DPow==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19596#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.869330480723466, 
                    0.8694545815961396}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4ATwdrww+RPlIuok6l
TM8/RW6de00L0D+dPILS0E7gP2grk71lIOA/svFU4o466D8PQcpty+PjP79p
XTmG/u8/aOqkBwix4T9LkQoifjX0P9/6KJARRdI/vu/ib8Qj+D/GbM/dswyu
v5fukhdKZvw/JbYwtDVV2r92524xdkoAQCzkPHGPeuS/pJhS+8w9AkCzoXLd
NpfmvwUaInJDWwRA6bJ12CrN479o3C+Nv1QGQIQQciRK2tq/ig8L+klECEDG
pB52egvEv98S0hP0XQpAPt7ZH12mwz82V9fRo1MMQA5eqwnwEds/wWvIPHNz
DkBHqazIlPTkP4R4w3yoRBBA3Vi494Fz6T+q20Etmj0RQHftzd+ixeo/6iY2
tJtLEkBdhg0LRwrpP6uSSQ2gRxNAUM+wIVK75D+G5tI8tFgUQEAN6j52dNs/
wPJClc9kFUBCducTGzjFP3sf0r/tXhZAh/R1hlrEuL9QNNfAG24XQBEbnsNK
tde/pmn7k0xrGECxZbpoTOPiv1tXBpCEYxlASE61Rb0Q6L8qLYdizHAaQOg2
ZttIO+u/eiMnBxdsG0A9y0VDBJ3rv+QBPYJxfBxA6U+Yp5Ux6b+tmDkm04cd
QAzlM6AbNeS/909VnDeBHkCUgE5rv1vbv1vv5uirjx9AT4F017D7xL+g18uD
EUYgQDJji8ZPHbk/wpOXp9DBIEBgydEUsyzWP/FDnrYXSCFA0FUk/MKY4j9h
hLQuYMUhQGCDSlly5ec/3bgFkjBNIkCOqdDtRDjrP5p9Zl4CzCJAIeHSsTPA
6z+Hnjq/V0gjQF0B0GOrzuk/gLNJCzXPI0A95R9aLSXlP7pYaMATTSRA1f1X
HFOf3T8B8sFgetUkQFzJRYkS2sk/d+eOlWRbJUD4ElnTOzizvy5tazNQ2CVA
elXCqLbw1L/y5oK8w18mQDGNWv3pJeK/9/CprjjeJkDfeMH735/nvytXRDUx
WidAqxHriavp6r9ssRmnseAnQJ/xAyiO0eu/7pv+gTNeKEDkYKZDDhbqv316
Hkg95ihAdd0bVSyV5b87tbGiymspQLTtf9le6N2/OoBUZlnoKUBIBRvo3JDN
v0Y/MhVwbypATiE2zuhgqD+Sjh8tiO0qQJPfs+xdcdM/69FHMCh2K0Au6qNx
ZpfhP3Rx48dL/CtAcLAx/LGC5z89oY7IcHksQBJxwF+k4Oo/E8V0tB0BLUBS
AipqktLrPyp5agnMfy1ALZeL6ngU6j9KHnj3//8tQGx/ayzv5eU/c2DPow==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19596#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.869330480723466, 
                    0.8694545815961396}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic], 
               BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
             StyleBox["]", "NonInterpretableSummary"]}]},
          "CopyTag",
          DisplayFunction->(#& ),
          
          InterpretationFunction->(
           "InterpolatingFunction[{{0., 15.}}, <>]"& )],
         False,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "[", "r", "]"}], ",", 
       RowBox[{
        SubscriptBox["u", 
         RowBox[{"2", ",", "3"}]], "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TagBox[
         TemplateBox[{RowBox[{
             StyleBox[
              TagBox["InterpolatingFunction", "SummaryHead"], 
              "NonInterpretableSummary"], 
             StyleBox["[", "NonInterpretableSummary"], 
             DynamicModuleBox[{Typeset`open$$ = False}, 
              PanelBox[
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4A6uKds7sAPlIuok6l
TM8/b/3rh2NdQD+dPILS0E7gP0Um6Esds1E/svFU4o466D/Gh3D/aJdXP79p
XTmG/u8/ApXjPpAjWD9LkQoifjX0PxshSD0bx1M/vu/ib8Qj+D/QHzd2mQ5J
P5fukhdKZvw/hTAowvsQIz92524xdkoAQKMCaz1nBkC/pJhS+8w9AkDWzwdF
61dQvwUaInJDWwRAC9GJRX7WVr9o3C+Nv1QGQCaCQg7WXFq/ig8L+klECEDA
9KQWu79bv98S0hP0XQpA35cmq4t9W782V9fRo1MMQO/VuE28H1q/wWvIPHNz
DkDfmHoJzetXv4R4w3yoRBBATVTyQ59pVb+q20Etmj0RQOUj7yeBAFO/6iY2
tJtLEkBmUWtfS3lQv6uSSQ2gRxNALyBkzLyQTL+G5tI8tFgUQH2BOFkHSEi/
wPJClc9kFUCc1TAHeZNEv3sf0r/tXhZAsACP9eOOQb9QNNfAG24XQIsCNVZF
dz2/pmn7k0xrGED+gQ4sgPM4v1tXBpCEYxlAoQjKSpooNb8qLYdizHAaQJ06
i/FHqjG/eiMnBxdsG0BFgGOX99Etv+QBPYJxfBxAVIPYIULKKL+tmDkm04cd
QNd4ghWMqSS/909VnDeBHkCe3BnHyWwhv1vv5uirjx9AnY+2du70HL+g18uD
EUYgQA2Chz+zWRi/wpOXp9DBIECdmtC7rooUv/FDnrYXSCFABHmFonITEb9h
hLQuYMUhQAWti30PvQy/3bgFkjBNIkD+yNoJv9QHv5p9Zl4CzCJAtx3h+F8B
BL+Hnjq/V0gjQA9k1CVv2QC/gLNJCzXPI0A0YWB13ff7vrpYaMATTSRAcWQ5
upR/974B8sFgetUkQFZop0rUc/O+d+eOlWRbJUDW6falOSfwvi5tazNQ2CVA
ls2iZRQn677y5oK8w18mQPkfDlZ8eea+9/CprjjeJkB71YL8PNLivitXRDUx
WidABQmR3OeY375ssRmnseAnQCQqs+tIFdq+7pv+gTNeKEA3KvYpPMHVvn16
Hkg95ihAvha6cKvM0b47tbGiymspQP/4jzVZD82+OoBUZlnoKUBNElP4z9vH
vkY/MhVwbypA5Lel41sDw76Sjh8tiO0qQEsG1QElL76+69FHMCh2K0D2TTqB
Ure2vnRx48dL/CtAC3+T06ossL49oY7IcHksQMpmZszBJ6W+E8V0tB0BLUBJ
ilODVXOTvip5agnMfy1AuEyCJZ0pVD5KHnj3//8tQATBAFH4QpY+AzS+gg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19640#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.0016936614070595518`, 
                    0.001473322739508121}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4A6uKds7sAPlIuok6l
TM8/b/3rh2NdQD+dPILS0E7gP0Um6Esds1E/svFU4o466D/Gh3D/aJdXP79p
XTmG/u8/ApXjPpAjWD9LkQoifjX0PxshSD0bx1M/vu/ib8Qj+D/QHzd2mQ5J
P5fukhdKZvw/hTAowvsQIz92524xdkoAQKMCaz1nBkC/pJhS+8w9AkDWzwdF
61dQvwUaInJDWwRAC9GJRX7WVr9o3C+Nv1QGQCaCQg7WXFq/ig8L+klECEDA
9KQWu79bv98S0hP0XQpA35cmq4t9W782V9fRo1MMQO/VuE28H1q/wWvIPHNz
DkDfmHoJzetXv4R4w3yoRBBATVTyQ59pVb+q20Etmj0RQOUj7yeBAFO/6iY2
tJtLEkBmUWtfS3lQv6uSSQ2gRxNALyBkzLyQTL+G5tI8tFgUQH2BOFkHSEi/
wPJClc9kFUCc1TAHeZNEv3sf0r/tXhZAsACP9eOOQb9QNNfAG24XQIsCNVZF
dz2/pmn7k0xrGED+gQ4sgPM4v1tXBpCEYxlAoQjKSpooNb8qLYdizHAaQJ06
i/FHqjG/eiMnBxdsG0BFgGOX99Etv+QBPYJxfBxAVIPYIULKKL+tmDkm04cd
QNd4ghWMqSS/909VnDeBHkCe3BnHyWwhv1vv5uirjx9AnY+2du70HL+g18uD
EUYgQA2Chz+zWRi/wpOXp9DBIECdmtC7rooUv/FDnrYXSCFABHmFonITEb9h
hLQuYMUhQAWti30PvQy/3bgFkjBNIkD+yNoJv9QHv5p9Zl4CzCJAtx3h+F8B
BL+Hnjq/V0gjQA9k1CVv2QC/gLNJCzXPI0A0YWB13ff7vrpYaMATTSRAcWQ5
upR/974B8sFgetUkQFZop0rUc/O+d+eOlWRbJUDW6falOSfwvi5tazNQ2CVA
ls2iZRQn677y5oK8w18mQPkfDlZ8eea+9/CprjjeJkB71YL8PNLivitXRDUx
WidABQmR3OeY375ssRmnseAnQCQqs+tIFdq+7pv+gTNeKEA3KvYpPMHVvn16
Hkg95ihAvha6cKvM0b47tbGiymspQP/4jzVZD82+OoBUZlnoKUBNElP4z9vH
vkY/MhVwbypA5Lel41sDw76Sjh8tiO0qQEsG1QElL76+69FHMCh2K0D2TTqB
Ure2vnRx48dL/CtAC3+T06ossL49oY7IcHksQMpmZszBJ6W+E8V0tB0BLUBJ
ilODVXOTvip5agnMfy1AuEyCJZ0pVD5KHnj3//8tQATBAFH4QpY+AzS+gg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19640#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.0016936614070595518`, 
                    0.001473322739508121}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic], 
               BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
             StyleBox["]", "NonInterpretableSummary"]}]},
          "CopyTag",
          DisplayFunction->(#& ),
          
          InterpretationFunction->(
           "InterpolatingFunction[{{0., 15.}}, <>]"& )],
         False,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "[", "r", "]"}], ",", 
       RowBox[{
        TagBox[
         TemplateBox[{RowBox[{
             StyleBox[
              TagBox["InterpolatingFunction", "SummaryHead"], 
              "NonInterpretableSummary"], 
             StyleBox["[", "NonInterpretableSummary"], 
             DynamicModuleBox[{Typeset`open$$ = False}, 
              PanelBox[
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4ADIoxnBdKPlIuok6l
TM8/9x0csiuRiT+dPILS0E7gP9T1V+nsJZw/svFU4o466D8RmgSiqeCjP79p
XTmG/u8/H+AhGVajpj9LkQoifjX0PwT+51HnDKU/vu/ib8Qj+D9UwamKfLqc
P5fukhdKZvw/wAqwEhdGdj92524xdkoAQIs8f7Y2UpO/pJhS+8w9AkD+SKoe
OLKjvwUaInJDWwRAc/fVv9+Fq79o3C+Nv1QGQNir2UFVxa+/ig8L+klECEDZ
2LAzhLiwv98S0hP0XQpADIrQg6KQsL82V9fRo1MMQFKp93uye6+/wWvIPHNz
DkBCa3/HEtSsv4R4w3yoRBBAIxSaZifOqb+q20Etmj0RQP8dAtVv5qa/6iY2
tJtLEkCKH3kxdNqjv6uSSQ2gRxNAq9JOynQ2ob+G5tI8tFgUQDOSCKg3Q52/
wPJClc9kFUBWIK1vEcyYv3sf0r/tXhZAxtgYIP4olb9QNNfAG24XQKj09RBd
wZG/pmn7k0xrGEDsO79E2hGOv1tXBpCEYxlArMovlsZ/ib8qLYdizHAaQPmI
8Mr7SYW/eiMnBxdsG0CAUqYj/veBv+QBPYJxfBxA7AEmyRjgfb+tmDkm04cd
QGRMio6X5ni/909VnDeBHkDrqwwdzf90v1vv5uirjx9ASbWTerZycb+g18uD
EUYgQFzUOkw8WG2/wpOXp9DBIEA9eAc6JcFov/FDnrYXSCFAAgazw9STZL9h
hLQuYMUhQDdZkIqwUGG/3bgFkjBNIkAtDQObJLdcv5p9Zl4CzCJAgywY36Ma
WL+Hnjq/V0gjQI2MsjKzTFS/gLNJCzXPI0B5X33sZNhQv7pYaMATTSRAP+4s
9AVNTL8B8sFgetUkQKk2T8rVa0e/d+eOlWRbJUCkmq8X1XBDvy5tazNQ2CVA
hnljno1UQL/y5oK8w18mQOE0t8GNAju/9/CprjjeJkBUXtlCx5c2vytXRDUx
WidA9xDZX/vuMr9ssRmnseAnQBrwlJGrLS+/7pv+gTNeKEDGpj/C7ukpv316
Hkg95ihAvHpz8pEVJb87tbGiymspQNidajncESG/OoBUZlnoKUD8VlGMqLQb
v0Y/MhVwbypAgnvPBb+mFb+Sjh8tiO0qQGAhdW6UrxC/69FHMCh2K0BDOKpr
bb8Hv3Rx48dL/CtAXH8BHmNA/r49oY7IcHksQB0izf1POu6+E8V0tB0BLUD4
G3Hlf5upPip5agnMfy1AgJ/cZuhY7z5KHnj3//8tQDm7J/+hN/8+2NvHQw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19684#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.06531549703581464, 
                    0.04421490723410692}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPkT4ADIoxnBdKPlIuok6l
TM8/9x0csiuRiT+dPILS0E7gP9T1V+nsJZw/svFU4o466D8RmgSiqeCjP79p
XTmG/u8/H+AhGVajpj9LkQoifjX0PwT+51HnDKU/vu/ib8Qj+D9UwamKfLqc
P5fukhdKZvw/wAqwEhdGdj92524xdkoAQIs8f7Y2UpO/pJhS+8w9AkD+SKoe
OLKjvwUaInJDWwRAc/fVv9+Fq79o3C+Nv1QGQNir2UFVxa+/ig8L+klECEDZ
2LAzhLiwv98S0hP0XQpADIrQg6KQsL82V9fRo1MMQFKp93uye6+/wWvIPHNz
DkBCa3/HEtSsv4R4w3yoRBBAIxSaZifOqb+q20Etmj0RQP8dAtVv5qa/6iY2
tJtLEkCKH3kxdNqjv6uSSQ2gRxNAq9JOynQ2ob+G5tI8tFgUQDOSCKg3Q52/
wPJClc9kFUBWIK1vEcyYv3sf0r/tXhZAxtgYIP4olb9QNNfAG24XQKj09RBd
wZG/pmn7k0xrGEDsO79E2hGOv1tXBpCEYxlArMovlsZ/ib8qLYdizHAaQPmI
8Mr7SYW/eiMnBxdsG0CAUqYj/veBv+QBPYJxfBxA7AEmyRjgfb+tmDkm04cd
QGRMio6X5ni/909VnDeBHkDrqwwdzf90v1vv5uirjx9ASbWTerZycb+g18uD
EUYgQFzUOkw8WG2/wpOXp9DBIEA9eAc6JcFov/FDnrYXSCFAAgazw9STZL9h
hLQuYMUhQDdZkIqwUGG/3bgFkjBNIkAtDQObJLdcv5p9Zl4CzCJAgywY36Ma
WL+Hnjq/V0gjQI2MsjKzTFS/gLNJCzXPI0B5X33sZNhQv7pYaMATTSRAP+4s
9AVNTL8B8sFgetUkQKk2T8rVa0e/d+eOlWRbJUCkmq8X1XBDvy5tazNQ2CVA
hnljno1UQL/y5oK8w18mQOE0t8GNAju/9/CprjjeJkBUXtlCx5c2vytXRDUx
WidA9xDZX/vuMr9ssRmnseAnQBrwlJGrLS+/7pv+gTNeKEDGpj/C7ukpv316
Hkg95ihAvHpz8pEVJb87tbGiymspQNidajncESG/OoBUZlnoKUD8VlGMqLQb
v0Y/MhVwbypAgnvPBb+mFb+Sjh8tiO0qQGAhdW6UrxC/69FHMCh2K0BDOKpr
bb8Hv3Rx48dL/CtAXH8BHmNA/r49oY7IcHksQB0izf1POu6+E8V0tB0BLUD4
G3Hlf5upPip5agnMfy1AgJ/cZuhY7z5KHnj3//8tQDm7J/+hN/8+2NvHQw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19684#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 15.}, {-0.06531549703581464, 
                    0.04421490723410692}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic], 
               BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
             StyleBox["]", "NonInterpretableSummary"]}]},
          "CopyTag",
          DisplayFunction->(#& ),
          
          InterpretationFunction->(
           "InterpolatingFunction[{{0., 15.}}, <>]"& )],
         False,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "[", "r", "]"}], ",", 
       RowBox[{
        SubscriptBox["u", 
         RowBox[{"3", ",", "3"}]], "[", "r", "]"}]}], "}"}]}], "}"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7613168848629227`*^9, 3.761316898404804*^9}, 
   3.761317092189934*^9, {3.761428515589746*^9, 3.7614285292435217`*^9}, 
   3.761431668634313*^9, 3.7615834455549088`*^9, 3.761662664682786*^9, 
   3.765017072229018*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Okay, let\[CloseCurlyQuote]s try to put it all together into a module that \
calculates the K matrix at one energy.\
\>", "Subsection",
 CellChangeTimes->{{3.761065781205143*^9, 3.7610658121079893`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nopen", "[", 
   RowBox[{"Emin_", ",", "Emax_", ",", "Eth_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nmin", ",", "nmax"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nmax", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"Eth", ",", 
         RowBox[{
          RowBox[{"#", "<", "Emin"}], " ", "&"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nmin", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"Eth", ",", 
         RowBox[{
          RowBox[{"#", "<", "Emax"}], " ", "&"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nmax", "\[NotEqual]", "nmin"}], ",", "0", ",", "nmin"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Setupdiagsc", "[", 
   RowBox[{"\[CapitalEpsilon]_", ",", "Nopen_", ",", "Eth_", ",", "r_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "ii", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], "=", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"se", "[", 
          RowBox[{"0", ",", 
           SqrtBox[
            RowBox[{"\[CapitalEpsilon]", "-", 
             RowBox[{"Eth", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}]], ",", "r"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", "Nopen"}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], "=", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ce", "[", 
          RowBox[{"0", ",", 
           SqrtBox[
            RowBox[{"\[CapitalEpsilon]", "-", 
             RowBox[{"Eth", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}]], ",", "r"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", "Nopen"}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ds", "[", 
       RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], "=", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"dse", "[", 
          RowBox[{"0", ",", 
           SqrtBox[
            RowBox[{"\[CapitalEpsilon]", "-", 
             RowBox[{"Eth", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}]], ",", "r"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", "Nopen"}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dc", "[", 
       RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], "=", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"dce", "[", 
          RowBox[{"0", ",", 
           SqrtBox[
            RowBox[{"\[CapitalEpsilon]", "-", 
             RowBox[{"Eth", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}]], ",", "r"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", "Nopen"}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], ",", 
       RowBox[{"c", "[", 
        RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], ",", 
       RowBox[{"ds", "[", 
        RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}], ",", 
       RowBox[{"dc", "[", 
        RowBox[{"\[CapitalEpsilon]", ",", "r"}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetupPotentialMorse3Channel", "[", 
   RowBox[{
   "r_", ",", "Eth_", ",", "a_", ",", "re_", ",", "D11_", ",", "D22_", ",", 
    "D33_", ",", "V12_", ",", "V23_", ",", "r12_", ",", "a12_", ",", "r23_", 
    ",", "a23_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Vdiag", "=", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"Vmorse", "[", 
            RowBox[{"a", ",", "re", ",", "D11", ",", "r"}], "]"}], "+", 
           RowBox[{"Eth", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "0", "0"},
         {"0", 
          RowBox[{
           RowBox[{"Vmorse", "[", 
            RowBox[{"a", ",", "re", ",", "D22", ",", "r"}], "]"}], "+", 
           RowBox[{"Eth", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "0"},
         {"0", "0", 
          RowBox[{
           RowBox[{"Vmorse", "[", 
            RowBox[{"a", ",", "re", ",", "D33", ",", "r"}], "]"}], "+", 
           RowBox[{"Eth", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Vcoupling", "=", 
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{"V12", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"r", "-", "r12"}], ")"}], "2"]}], "/", 
             SuperscriptBox["a12", "2"]}]]}], "0"},
         {
          RowBox[{"V12", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"r", "-", "r12"}], ")"}], "2"]}], "/", 
             SuperscriptBox["a12", "2"]}]]}], "0", 
          RowBox[{"V23", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"r", "-", "r23"}], ")"}], "2"]}], "/", 
             SuperscriptBox["a23", "2"]}]]}]},
         {"0", 
          RowBox[{"V23", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"r", "-", "r23"}], ")"}], "2"]}], "/", 
             SuperscriptBox["a23", "2"]}]]}], "0"}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Vdiag", "+", "Vcoupling"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.76105527950483*^9, 3.761055288288539*^9}, {
  3.76106603024839*^9, 3.761066058477582*^9}, {3.761073874665753*^9, 
  3.7610738773150063`*^9}, {3.761304297254314*^9, 3.761304298003085*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nchan", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eth", "=", 
   RowBox[{"{", 
    RowBox[{"0.0", ",", "3.0", ",", "5.0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"re", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmin", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmax", "=", "12.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D11", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D22", "=", "4.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D33", "=", "6.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V12", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V23", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r12", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r23", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a12", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a23", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"no", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Erange", "=", 
   RowBox[{"Which", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"no", "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", "0.001"}], ",", 
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", "0.001"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"no", "\[Equal]", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", "0.001"}], ",", 
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", "0.001"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"no", "\[Equal]", "3"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", "0.001"}], ",", 
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", "10.0"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VV", "[", "r_", "]"}], "=", 
   RowBox[{"Vmat", "[", 
    RowBox[{
    "r", ",", "a", ",", "re", ",", "D11", ",", "D22", ",", "D33", ",", "V12", 
     ",", "V23", ",", "r12", ",", "r23", ",", "a12", ",", "a23", ",", "Eth"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs", "[", 
    RowBox[{
    "\[CapitalEpsilon]_", ",", "r_", ",", "u_", ",", "Vmat_", ",", "Nchan_"}],
     "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          SubscriptBox["u", 
           RowBox[{"i", ",", "\[Alpha]"}]], "''"}], "[", "r", "]"}]}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"VV", "[", "r", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], 
          RowBox[{
           SubscriptBox["u", 
            RowBox[{"j", ",", "\[Alpha]"}]], "[", "r", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "Nchan"}], "}"}]}], "]"}], "-", 
       RowBox[{"\[CapitalEpsilon]", " ", 
        RowBox[{
         SubscriptBox["u", 
          RowBox[{"i", ",", "\[Alpha]"}]], "[", "r", "]"}]}]}], "\[Equal]", 
      "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Nchan"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1", ",", "Nchan"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"boundarycond", "[", 
    RowBox[{
    "\[CapitalEpsilon]_", ",", "rmin_", ",", "rmax_", ",", "Eth_", ",", 
     "Nchan_", ",", "u_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["u", 
            RowBox[{"ii", ",", "\[Beta]"}]], "[", "rmin", "]"}], "\[Equal]", 
          "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"i", "=", "ii"}], ",", 
             RowBox[{"\[Alpha]", "=", "\[Beta]"}]}], "}"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"\[CapitalEpsilon]", "<", 
              RowBox[{"Eth", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               SubscriptBox["u", 
                RowBox[{"i", ",", "\[Alpha]"}]], "[", "rmax", "]"}], 
              "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["u", 
                 RowBox[{"i", ",", "\[Alpha]"}]], "'"}], "[", "rmin", "]"}], 
              "\[Equal]", 
              RowBox[{"KroneckerDelta", "[", 
               RowBox[{"i", ",", "\[Alpha]"}], "]"}]}]}], "]"}]}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "1", ",", "Nchan"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]", ",", "1", ",", "Nchan"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7609228437046957`*^9, 3.760922954523758*^9}, {
   3.760923510476204*^9, 3.76092352261665*^9}, {3.760923767870668*^9, 
   3.7609237739073277`*^9}, {3.760924015373334*^9, 3.760924095120471*^9}, {
   3.760924338419701*^9, 3.7609243562934227`*^9}, {3.760924433016068*^9, 
   3.7609244331482983`*^9}, {3.760960005262362*^9, 3.7609600095710707`*^9}, {
   3.760960053078266*^9, 3.7609600566509123`*^9}, {3.760960171624714*^9, 
   3.7609602069138536`*^9}, {3.7609602449926987`*^9, 3.760960288931018*^9}, {
   3.7609603924913387`*^9, 3.760960442872386*^9}, 3.76096159424107*^9, 
   3.7609619272266607`*^9, {3.7609619846014013`*^9, 3.760961997800658*^9}, {
   3.760962226437891*^9, 3.7609622301546087`*^9}, {3.760967945183846*^9, 
   3.760967951237352*^9}, {3.761044617686099*^9, 3.7610446209883423`*^9}, {
   3.761045394541411*^9, 3.761045394936282*^9}, {3.7610454435918493`*^9, 
   3.761045474809362*^9}, {3.761045507543765*^9, 3.7610455339753304`*^9}, {
   3.761045635420673*^9, 3.7610456364182*^9}, 3.7610456771677732`*^9, {
   3.761045713646616*^9, 3.7610457173193808`*^9}, {3.761047134593875*^9, 
   3.761047319523312*^9}, 3.761047406017967*^9, {3.761047441551046*^9, 
   3.761047497038887*^9}, {3.761047554989463*^9, 3.761047688981134*^9}, {
   3.7610510947231627`*^9, 3.761051104357847*^9}, {3.761055355184572*^9, 
   3.7610553554729853`*^9}, {3.761066124893503*^9, 3.761066199809403*^9}, {
   3.761066249668964*^9, 3.761066350046693*^9}, {3.761066410336895*^9, 
   3.7610664307678003`*^9}, {3.761066464582169*^9, 3.761066528383272*^9}, {
   3.761066578313652*^9, 3.76106661953433*^9}, {3.761066889392127*^9, 
   3.761066989250085*^9}, {3.761067139863327*^9, 3.76106714342328*^9}, {
   3.76106719488444*^9, 3.761067211458041*^9}, {3.761067261155138*^9, 
   3.761067274389201*^9}, {3.7610673349939537`*^9, 3.7610673395688667`*^9}, {
   3.761067440924411*^9, 3.7610674722489223`*^9}, 3.7610676020838137`*^9, {
   3.761067773813036*^9, 3.761067797907992*^9}, {3.761068530037965*^9, 
   3.7610685301920147`*^9}, 3.761068901438217*^9, {3.7610706397901087`*^9, 
   3.761070644709283*^9}, {3.761071382996406*^9, 3.7610714067508173`*^9}, 
   3.76107144921484*^9, {3.761071499672139*^9, 3.7610715411898727`*^9}, {
   3.761071784634557*^9, 3.761071807732604*^9}, {3.7610718487775803`*^9, 
   3.761071916078163*^9}, {3.761073996539894*^9, 3.7610740161131907`*^9}, {
   3.761074129279373*^9, 3.761074139065275*^9}, {3.7610744346577263`*^9, 
   3.761074502020956*^9}, 3.761074562050506*^9, {3.761074691500236*^9, 
   3.761074692353491*^9}, {3.761075230526132*^9, 3.7610752534405403`*^9}, 
   3.761146672312395*^9, {3.761146769593961*^9, 3.761146775289312*^9}, {
   3.7611468419971027`*^9, 3.7611468499276247`*^9}, {3.7611470625368156`*^9, 
   3.761147107403783*^9}, {3.761147141321892*^9, 3.761147152391823*^9}, {
   3.7612563347856197`*^9, 3.761256390903137*^9}, {3.761256676531374*^9, 
   3.7612566785294857`*^9}, {3.76125714530925*^9, 3.761257192258934*^9}, {
   3.7612572721947412`*^9, 3.7612572992092533`*^9}, {3.7612573797408524`*^9, 
   3.761257418290296*^9}, {3.761257485856736*^9, 3.761257593487936*^9}, {
   3.7612580097466097`*^9, 3.7612580270660686`*^9}, {3.761258224809104*^9, 
   3.761258225454126*^9}, {3.761258984216539*^9, 3.7612589878949003`*^9}, 
   3.761259021852091*^9, {3.761260669562849*^9, 3.761260679411467*^9}, {
   3.7612607324203873`*^9, 3.761260732787671*^9}, {3.761260814169573*^9, 
   3.7612609267313833`*^9}, {3.761260968673114*^9, 3.761261069771529*^9}, {
   3.761261123954101*^9, 3.7612611371326923`*^9}, {3.761261310552764*^9, 
   3.7612613777021837`*^9}, {3.7612617454374113`*^9, 3.761261747151641*^9}, {
   3.761304312318675*^9, 3.761304314383068*^9}, {3.761313996434215*^9, 
   3.761314012157959*^9}, {3.761317341717526*^9, 3.7613173494794703`*^9}, {
   3.7613174017951527`*^9, 3.7613174198831*^9}, 3.761317478106018*^9, {
   3.761322125113968*^9, 3.7613221744237413`*^9}, {3.7613226212741137`*^9, 
   3.761322631916502*^9}, {3.761340016466696*^9, 3.761340017029152*^9}, {
   3.7613404708394947`*^9, 3.761340472754177*^9}, 3.761340605880921*^9, {
   3.761340820952648*^9, 3.76134082626932*^9}, {3.7613997252832613`*^9, 
   3.761399736608026*^9}, {3.7613999037239*^9, 3.761399907451457*^9}, {
   3.7614002021008043`*^9, 3.761400202313806*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"VV", "[", "x", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.761314045902574*^9, 3.76131405014312*^9}, {
  3.76131748485717*^9, 3.761317499335697*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"1", "-", "x"}]]}], ")"}], "2"]}]}], 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5`"}], "+", "x"}], ")"}], "2"]}]]}], "0"},
     {
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5`"}], "+", "x"}], ")"}], "2"]}]]}], 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"1", "-", "x"}]]}], ")"}], "2"]}]}], 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]}]]}]},
     {"0", 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]}]]}], 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"1", "-", "x"}]]}], ")"}], "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.761314046721326*^9, 3.761314050581044*^9}, {
   3.761317486023528*^9, 3.761317499946307*^9}, 3.761322179053207*^9, 
   3.761322634490501*^9, 3.761340020729356*^9, 3.761340477665658*^9, 
   3.761340613295834*^9, 3.7613408285164633`*^9, 3.761387522049223*^9, 
   3.761399739593504*^9, 3.761399909686982*^9, 3.761400205209141*^9, 
   3.761428556008959*^9, 3.761431676922188*^9, 3.761583446303141*^9, 
   3.761645499776218*^9, 3.761661270107275*^9, 3.7616626797793827`*^9, 
   3.765017072379732*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"alleqs", "[", 
    RowBox[{
    "\[CapitalEpsilon]_", ",", "r_", ",", "rmin_", ",", "rmax_", ",", "Eth_", 
     ",", "Nchan_", ",", "u_", ",", "Vmat_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"eqs", "[", 
           RowBox[{
           "\[CapitalEpsilon]", ",", "r", ",", "u", ",", "Vmat", ",", 
            "Nchan"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"boundarycond", "[", 
           RowBox[{
           "\[CapitalEpsilon]", ",", "rmin", ",", "rmax", ",", "Eth", ",", 
            "Nchan", ",", "u"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Nchan"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diagsc", "=", 
   RowBox[{"Setupdiagsc", "[", 
    RowBox[{"\[CapitalEpsilon]", ",", "no", ",", "Eth", ",", "r"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.761146848134117*^9, {3.761256736882002*^9, 3.761256740031952*^9}, {
   3.761261484192378*^9, 3.761261487999625*^9}, {3.761261597174334*^9, 
   3.7612616033454227`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diagsc", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7616459164467907`*^9, 3.76164593781231*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"r", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[CapitalEpsilon]"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    RowBox[{"SphericalBesselY", "[", 
     RowBox[{"0", ",", 
      RowBox[{"r", " ", 
       SqrtBox[
        RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[CapitalEpsilon]"}]]}]}], 
     "]"}]}], 
   SqrtBox["\[Pi]"]]}]], "Output",
 CellChangeTimes->{{3.761645919787023*^9, 3.761645938157847*^9}, 
   3.761661272110138*^9, 3.761662683215002*^9, 3.7650170724926357`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Etest", "=", 
   RowBox[{
    RowBox[{"Erange", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", "0.01"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equations", "=", 
   RowBox[{"alleqs", "[", 
    RowBox[{
    "Etest", ",", "r", ",", "rmin", ",", "rmax", ",", "Eth", ",", "Nchan", 
     ",", "u", ",", 
     RowBox[{"VV", "[", "r", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.761070650092381*^9, 3.761070685087882*^9}, {
   3.761070720801444*^9, 3.761070830868566*^9}, {3.761070874511541*^9, 
   3.7610709129980793`*^9}, {3.761071570720522*^9, 3.7610715740998363`*^9}, {
   3.761071933766266*^9, 3.761071939420554*^9}, {3.761073769937189*^9, 
   3.761073778599737*^9}, {3.761073900224963*^9, 3.7610739125914173`*^9}, {
   3.761074190371353*^9, 3.761074207726942*^9}, {3.761074776994636*^9, 
   3.761074845077333*^9}, {3.7610750459710073`*^9, 3.761075048977317*^9}, {
   3.761075152576613*^9, 3.761075153023102*^9}, {3.761146680522307*^9, 
   3.761146686622674*^9}, {3.761261621842141*^9, 3.7612616222549686`*^9}, 
   3.761261673949877*^9, 3.761261755979439*^9, {3.76131762031826*^9, 
   3.761317621992709*^9}, {3.761322191194325*^9, 3.7613221974577837`*^9}, 
   3.761340043740425*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"umat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"i", ",", "j"}]], "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Nchan"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "Nchan"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.7612618822742157`*^9, 3.761261884556917*^9}, {
   3.761261918053022*^9, 3.761261948788476*^9}, 3.761340038879084*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"equations", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"umat", "\[Transpose]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", "\"\<Automatic\>\"", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761262048127275*^9, 3.761262062353963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"1", ",", "1"}]], "[", "r", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4A2HHea0yLPqm+gdgd
Csk/vGIDLRs5yT8vlAOEtBfaP4qxb08Xedo/j/RD6Ati4z+G1F6rGYLjP8yH
F2FrmOk/dwwF97oT6T+j2m5OyyrwPzWDA3NjFe4/ZlmCWdBP8z/XGK0Bc8bw
P0YlD0Y7uPY/7gT+nZzx8T+JpeQbvRD6PxwvzmYfY/I/0o3qXq4v/T+bDHji
7DnyP5zhtMECSQBAi9z/IXaC8T9SsIwKZt0BQKE0aznwavA/OdkIyNRpA0Ci
oLTuYg/uP6+oQXb2FwVAMtAlC6l/6j8orBLbT6kGQPJ3f8/yyeY/MFagMFxc
CED8el8vcHfiP2pa0vpzBwpAD+fFExII3D+mkpx7w5ULQJZhEfhrftM/cXEj
7cVFDUAmotxKgizEPz+EQhUA2Q5A+uDMX7rokz/OHg+X9kYQQFbIaD4ysMC/
lijP3XIdEUBmB5DnyrjRv19M2/+K5RFAoqW6m3lp2r9ww0WafL4SQFCdkudE
4OG/glT8DwqJE0AyomyCWDHmv60SBUCdTxRAne3Tv5dh6r8fJGzoCScVQLES
NZMH4O6/k08fbBLwFUBA5K4xxoLxv07OMGj0yRZAw2F3TIC7878iepQe3J8X
QOpXPQhc4/W/9z9EsF9nGEDON+ycaeD3vxRZUrq8PxlALnvehWMC+r8yjKyf
tQkaQJOs98t0+vu/aexYP7TPGkAfW5Qeb+P9v+efY1eMphtAZ1Li4U7w/79n
bbpKAG8cQHVUAUhZ6gDALo5vtk1IHUBCKGl7Ae4BwPfIcP02Ex5AzVOcBr7d
AsDYMMT+JdoeQDDXX+w1xgPAAex1eO6xH0B448Nod78EwJbguWapPSBAfEtj
8ValBcDO9GdNyKogQMKgfORjmwbAkx8/EeoVIUDyLjUZz4kHwFhXvMLZeSFA
wOoOzVhlCMDBuGgwNuYhQP6V86gyUAnAKye7i2BLIkBm/A1vYygKwCGsNsSN
riJAuDMM/WP5CsC7WuG4JxojQDUvk/zH2AvAVhYym49+I0DsaXdKAKYMwJT7
sTlk6yNA3gf+PdWADcBf91q1O1YkQOhS5PPtUw7AKgCqHuG5JEAO029GZRUP
wJkyKETzJSVAEn3S+mjjD8AJckxX04olQKQRo+MGUBDAHdufJiD4JUC02SUD
MbQQwL1aHNNvYyZAYARVRm4UEcBe5z5tjccmQKuBpL1MbBHAop2Qwxc0J0Bj
OZRBbskRwOdgiAdwmSdAkK574lgeEsAI5Sz5//8nQFInzbM9chLABWTFjg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19787#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> A\
bsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-4.611563500782568, 
                    1.1491998687587914`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4A2HHea0yLPqm+gdgd
Csk/vGIDLRs5yT8vlAOEtBfaP4qxb08Xedo/j/RD6Ati4z+G1F6rGYLjP8yH
F2FrmOk/dwwF97oT6T+j2m5OyyrwPzWDA3NjFe4/ZlmCWdBP8z/XGK0Bc8bw
P0YlD0Y7uPY/7gT+nZzx8T+JpeQbvRD6PxwvzmYfY/I/0o3qXq4v/T+bDHji
7DnyP5zhtMECSQBAi9z/IXaC8T9SsIwKZt0BQKE0aznwavA/OdkIyNRpA0Ci
oLTuYg/uP6+oQXb2FwVAMtAlC6l/6j8orBLbT6kGQPJ3f8/yyeY/MFagMFxc
CED8el8vcHfiP2pa0vpzBwpAD+fFExII3D+mkpx7w5ULQJZhEfhrftM/cXEj
7cVFDUAmotxKgizEPz+EQhUA2Q5A+uDMX7rokz/OHg+X9kYQQFbIaD4ysMC/
lijP3XIdEUBmB5DnyrjRv19M2/+K5RFAoqW6m3lp2r9ww0WafL4SQFCdkudE
4OG/glT8DwqJE0AyomyCWDHmv60SBUCdTxRAne3Tv5dh6r8fJGzoCScVQLES
NZMH4O6/k08fbBLwFUBA5K4xxoLxv07OMGj0yRZAw2F3TIC7878iepQe3J8X
QOpXPQhc4/W/9z9EsF9nGEDON+ycaeD3vxRZUrq8PxlALnvehWMC+r8yjKyf
tQkaQJOs98t0+vu/aexYP7TPGkAfW5Qeb+P9v+efY1eMphtAZ1Li4U7w/79n
bbpKAG8cQHVUAUhZ6gDALo5vtk1IHUBCKGl7Ae4BwPfIcP02Ex5AzVOcBr7d
AsDYMMT+JdoeQDDXX+w1xgPAAex1eO6xH0B448Nod78EwJbguWapPSBAfEtj
8ValBcDO9GdNyKogQMKgfORjmwbAkx8/EeoVIUDyLjUZz4kHwFhXvMLZeSFA
wOoOzVhlCMDBuGgwNuYhQP6V86gyUAnAKye7i2BLIkBm/A1vYygKwCGsNsSN
riJAuDMM/WP5CsC7WuG4JxojQDUvk/zH2AvAVhYym49+I0DsaXdKAKYMwJT7
sTlk6yNA3gf+PdWADcBf91q1O1YkQOhS5PPtUw7AKgCqHuG5JEAO029GZRUP
wJkyKETzJSVAEn3S+mjjD8AJckxX04olQKQRo+MGUBDAHdufJiD4JUC02SUD
MbQQwL1aHNNvYyZAYARVRm4UEcBe5z5tjccmQKuBpL1MbBHAop2Qwxc0J0Bj
OZRBbskRwOdgiAdwmSdAkK574lgeEsAI5Sz5//8nQFInzbM9chLABWTFjg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19787#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-4.611563500782568, 
                    1.1491998687587914`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"2", ",", "1"}]], "[", "r", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAA88dx3mtMiz4AZAnlZG1Mvqm+gdgd
Csk/4zYDVO4Xi78vlAOEtBfaPwVGt6/yj52/j/RD6Ati4z93rPBnp5Klv8yH
F2FrmOk/TYVkNor/qb+j2m5OyyrwPxL8ZXpcoKu/ZlmCWdBP8z8IHLc+YK6q
v0YlD0Y7uPY/7CWQ6QMEqL+JpeQbvRD6P9wUxwlNn6S/0o3qXq4v/T849PUb
ekqhv5zhtMECSQBAr3gaJn61m79SsIwKZt0BQGJZHaGz/5W/OdkIyNRpA0Ao
/cyXZjiRv6+oQXb2FwVA8orqRx/zib8orBLbT6kGQN9QP8G8qIO/MFagMFxc
CEBDnRuJd8B8v2pa0vpzBwpAnJ2Y3nXvdL+mkpx7w5ULQIENTfGZ626/cXEj
7cVFDUDSW0DKgxxmvz+EQhUA2Q5Aa/EjTsgWYL/OHg+X9kYQQN0WIu1cs1a/
lijP3XIdEUA37Zi6kQ9Qv19M2/+K5RFAvMg1Q9M0R79ww0WafL4SQKMs7Zx7
SUC/glT8DwqJE0BrsMRLqGU3v60SBUCdTxRAOV4WpxbwML8fJGzoCScVQDm1
3aNj+Se/k08fbBLwFUDh4dyrg4khv07OMGj0yRZAKB1ChIuNGb8iepQe3J8X
QFDyVEgahxO/9z9EsF9nGECH6OAEPjEQvxRZUrq8PxlAAH+iftBCDb8yjKyf
tQkaQJPJbsBQ3A2/aexYP7TPGkBdzXtH5+cQv+efY1eMphtATuiigSIzFb9n
bbpKAG8cQFmcjQi9thu/Lo5vtk1IHUBzGm3/ATQjv/fIcP02Ex5ABGMZ3VSG
Kr/YMMT+JdoeQGQrOeIgXjK/Aex1eO6xH0AIZvzPX0k6v5bguWapPSBAM2h4
NHppQr/O9GdNyKogQOir7yFfkUq/kx8/EeoVIUBSj94a+g1Tv1hXvMLZeSFA
WJ3p0+ivWr/BuGgwNuYhQN0J0EgeO2O/Kye7i2BLIkDLna9a8w1rvyGsNsSN
riJArvxkGofncr+7WuG4JxojQC4w6tGuLnu/VhYym49+I0CE6AHIBBODv5T7
sTlk6yNA8in+KduKi79f91q1O1YkQBHgwqyZwJO/KgCqHuG5JEACH1IF1aab
v5kyKETzJSVA2In9XOrpo78JckxX04olQHODlaF//qu/HdufJiD4JUCI7mRy
mz60v71aHNNvYyZAcl5D/bUVvb9/YnobNnsmQLA9MkPZ3L+/tFSvTQ==
                    
                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$19831#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.12446363344701328`, 0.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAA88dx3mtMiz4AZAnlZG1Mvqm+gdgd
Csk/4zYDVO4Xi78vlAOEtBfaPwVGt6/yj52/j/RD6Ati4z93rPBnp5Klv8yH
F2FrmOk/TYVkNor/qb+j2m5OyyrwPxL8ZXpcoKu/ZlmCWdBP8z8IHLc+YK6q
v0YlD0Y7uPY/7CWQ6QMEqL+JpeQbvRD6P9wUxwlNn6S/0o3qXq4v/T849PUb
ekqhv5zhtMECSQBAr3gaJn61m79SsIwKZt0BQGJZHaGz/5W/OdkIyNRpA0Ao
/cyXZjiRv6+oQXb2FwVA8orqRx/zib8orBLbT6kGQN9QP8G8qIO/MFagMFxc
CEBDnRuJd8B8v2pa0vpzBwpAnJ2Y3nXvdL+mkpx7w5ULQIENTfGZ626/cXEj
7cVFDUDSW0DKgxxmvz+EQhUA2Q5Aa/EjTsgWYL/OHg+X9kYQQN0WIu1cs1a/
lijP3XIdEUA37Zi6kQ9Qv19M2/+K5RFAvMg1Q9M0R79ww0WafL4SQKMs7Zx7
SUC/glT8DwqJE0BrsMRLqGU3v60SBUCdTxRAOV4WpxbwML8fJGzoCScVQDm1
3aNj+Se/k08fbBLwFUDh4dyrg4khv07OMGj0yRZAKB1ChIuNGb8iepQe3J8X
QFDyVEgahxO/9z9EsF9nGECH6OAEPjEQvxRZUrq8PxlAAH+iftBCDb8yjKyf
tQkaQJPJbsBQ3A2/aexYP7TPGkBdzXtH5+cQv+efY1eMphtATuiigSIzFb9n
bbpKAG8cQFmcjQi9thu/Lo5vtk1IHUBzGm3/ATQjv/fIcP02Ex5ABGMZ3VSG
Kr/YMMT+JdoeQGQrOeIgXjK/Aex1eO6xH0AIZvzPX0k6v5bguWapPSBAM2h4
NHppQr/O9GdNyKogQOir7yFfkUq/kx8/EeoVIUBSj94a+g1Tv1hXvMLZeSFA
WJ3p0+ivWr/BuGgwNuYhQN0J0EgeO2O/Kye7i2BLIkDLna9a8w1rvyGsNsSN
riJArvxkGofncr+7WuG4JxojQC4w6tGuLnu/VhYym49+I0CE6AHIBBODv5T7
sTlk6yNA8in+KduKi79f91q1O1YkQBHgwqyZwJO/KgCqHuG5JEACH1IF1aab
v5kyKETzJSVA2In9XOrpo78JckxX04olQHODlaF//qu/HdufJiD4JUCI7mRy
mz60v71aHNNvYyZAcl5D/bUVvb9/YnobNnsmQLA9MkPZ3L+/tFSvTQ==
                    
                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$19831#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.12446363344701328`, 0.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7612620529233637`*^9, 3.761262062828302*^9}, 
   3.7613005949601*^9, 3.761317634484481*^9, 3.761322206183511*^9, 
   3.7613226398360243`*^9, 3.761340055505039*^9, 3.7613406190771217`*^9, 
   3.761340832451139*^9, 3.7613875260713177`*^9, 3.7613997443878098`*^9, 
   3.761399913554823*^9, 3.761400214944291*^9, 3.761428562757629*^9, 
   3.761431681767013*^9, 3.761583446626148*^9, 3.761645503083623*^9, 
   3.7616612746358232`*^9, 3.7616626903234653`*^9, 3.7650170727103977`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sols", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"equations", "[", 
         RowBox[{"[", "\[Alpha]", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"umat", "\[Transpose]"}], "[", 
         RowBox[{"[", "\[Alpha]", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", "\"\<Automatic\>\"", "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "1", ",", "Nchan"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"Etest", "-", 
       RowBox[{"Eth", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "no"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.761075047418874*^9, {3.761075525579275*^9, 3.761075536049959*^9}, {
   3.761261791755274*^9, 3.761261796377631*^9}, {3.761261990551571*^9, 
   3.7612619909241123`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uopen", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"umat", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "\[Alpha]"}], "]"}], "]"}], "/.", "sols"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "no"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1", ",", "no"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.7610708282601767`*^9, {3.7610709285799294`*^9, 3.761070958541772*^9}, 
   3.7610710084887743`*^9, {3.761300618970706*^9, 3.761300619681191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uopen", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.761300636449172*^9, 3.76130064528083*^9}, {
  3.761322214364195*^9, 3.761322214615054*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4A2HHea0yLPqm+gdgd
Csk/vGIDLRs5yT8vlAOEtBfaP4qxb08Xedo/j/RD6Ati4z+G1F6rGYLjP8yH
F2FrmOk/dwwF97oT6T+j2m5OyyrwPzWDA3NjFe4/ZlmCWdBP8z/XGK0Bc8bw
P0YlD0Y7uPY/7gT+nZzx8T+JpeQbvRD6PxwvzmYfY/I/0o3qXq4v/T+bDHji
7DnyP5zhtMECSQBAi9z/IXaC8T9SsIwKZt0BQKE0aznwavA/OdkIyNRpA0Ci
oLTuYg/uP6+oQXb2FwVAMtAlC6l/6j8orBLbT6kGQPJ3f8/yyeY/MFagMFxc
CED8el8vcHfiP2pa0vpzBwpAD+fFExII3D+mkpx7w5ULQJZhEfhrftM/cXEj
7cVFDUAmotxKgizEPz+EQhUA2Q5A+uDMX7rokz/OHg+X9kYQQFbIaD4ysMC/
lijP3XIdEUBmB5DnyrjRv19M2/+K5RFAoqW6m3lp2r9ww0WafL4SQFCdkudE
4OG/glT8DwqJE0AyomyCWDHmv60SBUCdTxRAne3Tv5dh6r8fJGzoCScVQLES
NZMH4O6/k08fbBLwFUBA5K4xxoLxv07OMGj0yRZAw2F3TIC7878iepQe3J8X
QOpXPQhc4/W/9z9EsF9nGEDON+ycaeD3vxRZUrq8PxlALnvehWMC+r8yjKyf
tQkaQJOs98t0+vu/aexYP7TPGkAfW5Qeb+P9v+efY1eMphtAZ1Li4U7w/79n
bbpKAG8cQHVUAUhZ6gDALo5vtk1IHUBCKGl7Ae4BwPfIcP02Ex5AzVOcBr7d
AsDYMMT+JdoeQDDXX+w1xgPAAex1eO6xH0B448Nod78EwJbguWapPSBAfEtj
8ValBcDO9GdNyKogQMKgfORjmwbAkx8/EeoVIUDyLjUZz4kHwFhXvMLZeSFA
wOoOzVhlCMDBuGgwNuYhQP6V86gyUAnAKye7i2BLIkBm/A1vYygKwCGsNsSN
riJAuDMM/WP5CsC7WuG4JxojQDUvk/zH2AvAVhYym49+I0DsaXdKAKYMwJT7
sTlk6yNA3gf+PdWADcBf91q1O1YkQOhS5PPtUw7AKgCqHuG5JEAO029GZRUP
wJkyKETzJSVAEn3S+mjjD8AJckxX04olQKQRo+MGUBDAHdufJiD4JUC02SUD
MbQQwL1aHNNvYyZAYARVRm4UEcBe5z5tjccmQKuBpL1MbBHAop2Qwxc0J0Bj
OZRBbskRwOdgiAdwmSdAkK574lgeEsAI5Sz5//8nQFInzbM9chLABWTFjg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19983#1"]& ]}}, {}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#
                    ]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 12.}, {-4.611563500782568, 
                   1.1491998687587914`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4A2HHea0yLPqm+gdgd
Csk/vGIDLRs5yT8vlAOEtBfaP4qxb08Xedo/j/RD6Ati4z+G1F6rGYLjP8yH
F2FrmOk/dwwF97oT6T+j2m5OyyrwPzWDA3NjFe4/ZlmCWdBP8z/XGK0Bc8bw
P0YlD0Y7uPY/7gT+nZzx8T+JpeQbvRD6PxwvzmYfY/I/0o3qXq4v/T+bDHji
7DnyP5zhtMECSQBAi9z/IXaC8T9SsIwKZt0BQKE0aznwavA/OdkIyNRpA0Ci
oLTuYg/uP6+oQXb2FwVAMtAlC6l/6j8orBLbT6kGQPJ3f8/yyeY/MFagMFxc
CED8el8vcHfiP2pa0vpzBwpAD+fFExII3D+mkpx7w5ULQJZhEfhrftM/cXEj
7cVFDUAmotxKgizEPz+EQhUA2Q5A+uDMX7rokz/OHg+X9kYQQFbIaD4ysMC/
lijP3XIdEUBmB5DnyrjRv19M2/+K5RFAoqW6m3lp2r9ww0WafL4SQFCdkudE
4OG/glT8DwqJE0AyomyCWDHmv60SBUCdTxRAne3Tv5dh6r8fJGzoCScVQLES
NZMH4O6/k08fbBLwFUBA5K4xxoLxv07OMGj0yRZAw2F3TIC7878iepQe3J8X
QOpXPQhc4/W/9z9EsF9nGEDON+ycaeD3vxRZUrq8PxlALnvehWMC+r8yjKyf
tQkaQJOs98t0+vu/aexYP7TPGkAfW5Qeb+P9v+efY1eMphtAZ1Li4U7w/79n
bbpKAG8cQHVUAUhZ6gDALo5vtk1IHUBCKGl7Ae4BwPfIcP02Ex5AzVOcBr7d
AsDYMMT+JdoeQDDXX+w1xgPAAex1eO6xH0B448Nod78EwJbguWapPSBAfEtj
8ValBcDO9GdNyKogQMKgfORjmwbAkx8/EeoVIUDyLjUZz4kHwFhXvMLZeSFA
wOoOzVhlCMDBuGgwNuYhQP6V86gyUAnAKye7i2BLIkBm/A1vYygKwCGsNsSN
riJAuDMM/WP5CsC7WuG4JxojQDUvk/zH2AvAVhYym49+I0DsaXdKAKYMwJT7
sTlk6yNA3gf+PdWADcBf91q1O1YkQOhS5PPtUw7AKgCqHuG5JEAO029GZRUP
wJkyKETzJSVAEn3S+mjjD8AJckxX04olQKQRo+MGUBDAHdufJiD4JUC02SUD
MbQQwL1aHNNvYyZAYARVRm4UEcBe5z5tjccmQKuBpL1MbBHAop2Qwxc0J0Bj
OZRBbskRwOdgiAdwmSdAkK574lgeEsAI5Sz5//8nQFInzbM9chLABWTFjg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$19983#1"]& ]}}, {}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 12.}, {-4.611563500782568, 
                   1.1491998687587914`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "[", "r", "]"}], "}"}]], "Output",
 CellChangeTimes->{{3.761300639714328*^9, 3.7613006458002872`*^9}, 
   3.7613176517897263`*^9, {3.7613222116686287`*^9, 3.761322214924917*^9}, 
   3.761322642407096*^9, 3.7613400792963142`*^9, 3.761340626445883*^9, 
   3.761340837719376*^9, 3.761387529124857*^9, 3.761399747786578*^9, 
   3.761399917456668*^9, 3.761400220715892*^9, 3.761428566729525*^9, 
   3.761431693029097*^9, 3.7615834471346207`*^9, 3.761645505523691*^9, 
   3.7616612771427593`*^9, 3.761662693514785*^9, 3.765017072908021*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "Kmatrix", "]"}], ";", 
  RowBox[{
   RowBox[{"Kmatrix", "[", 
    RowBox[{
    "Eth_", ",", "nchan_", ",", "no_", ",", "r_", ",", "rmin_", ",", "rmax_", 
     ",", "Vmat_", ",", "\[CapitalEpsilon]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "K", ",", "Imat", ",", "Jmat", ",", "sols", ",", "eqs", ",", "uopen", 
       ",", "umat", ",", "u", ",", "i", ",", "j", ",", "\[Alpha]", ",", 
       "\[Beta]", ",", "diagsc", ",", "S"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diagsc", "=", 
       RowBox[{"Setupdiagsc", "[", 
        RowBox[{"\[CapitalEpsilon]", ",", "no", ",", "Eth", ",", "r"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"umat", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["u", 
           RowBox[{"i", ",", "j"}]], "[", "r", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nchan"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nchan"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqs", "=", 
       RowBox[{"alleqs", "[", 
        RowBox[{
        "\[CapitalEpsilon]", ",", "r", ",", "rmin", ",", "rmax", ",", "Eth", 
         ",", "nchan", ",", "u", ",", "Vmat"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sols", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"eqs", "[", 
             RowBox[{"[", "\[Alpha]", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"umat", "\[Transpose]"}], "[", 
             RowBox[{"[", "\[Alpha]", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", "\"\<Automatic\>\"", "}"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Alpha]", ",", "1", ",", "nchan"}], "}"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"uopen", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"umat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "\[Alpha]"}], "]"}], "]"}], "/.", "sols"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "no"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", "1", ",", "no"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Imat", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Wronskian", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"uopen", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "\[Beta]"}], "]"}], "]"}], ",", 
               RowBox[{"diagsc", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "i", ",", "i"}], "]"}], "]"}]}], "}"}], 
             ",", "r"}], "]"}], "/", 
           RowBox[{"Wronskian", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"diagsc", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "i", ",", "i"}], "]"}], "]"}], ",", 
               RowBox[{"diagsc", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "i", ",", "i"}], "]"}], "]"}]}], "}"}], 
             ",", "r"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "no"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "1", ",", "no"}], "}"}]}], "]"}], "/.", 
        RowBox[{"r", "\[Rule]", "rmax"}]}]}], ";", 
      RowBox[{"Jmat", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Wronskian", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"uopen", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "\[Beta]"}], "]"}], "]"}], ",", 
               RowBox[{"diagsc", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "i", ",", "i"}], "]"}], "]"}]}], "}"}], 
             ",", "r"}], "]"}], "/", 
           RowBox[{"Wronskian", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"diagsc", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "i", ",", "i"}], "]"}], "]"}], ",", 
               RowBox[{"diagsc", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "i", ",", "i"}], "]"}], "]"}]}], "}"}], 
             ",", "r"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "no"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "1", ",", "no"}], "}"}]}], "]"}], "/.", 
        RowBox[{"r", "\[Rule]", "rmax"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"K", "=", 
       RowBox[{
        RowBox[{"Jmat", ".", 
         RowBox[{"Inverse", "[", "Imat", "]"}]}], "/.", 
        RowBox[{"r", "\[Rule]", "rmax"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "no", "]"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "K"}]}], ")"}], ".", 
        RowBox[{"Inverse", "[", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "no", "]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "K"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"K", ",", "S"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "Kmatrix", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.760900332147489*^9, 3.76090038131922*^9}, {
   3.760909199140991*^9, 3.760909317119927*^9}, {3.7609105440595903`*^9, 
   3.7609105531703577`*^9}, {3.7609106228285217`*^9, 3.760910702525313*^9}, {
   3.760910763710353*^9, 3.760910823796545*^9}, {3.760910854861885*^9, 
   3.760910917087311*^9}, {3.760910990575416*^9, 3.760911099843355*^9}, {
   3.761067526265884*^9, 3.761067529255954*^9}, {3.761067722748493*^9, 
   3.761067748670772*^9}, {3.761067846358176*^9, 3.761067987696329*^9}, {
   3.7610680274306517`*^9, 3.761068046798094*^9}, {3.7610680971159763`*^9, 
   3.761068100274528*^9}, {3.7610681342033052`*^9, 3.7610681601285353`*^9}, {
   3.7610681965372334`*^9, 3.761068283220798*^9}, {3.761068400244129*^9, 
   3.7610684005187397`*^9}, {3.7610685555449*^9, 3.761068605791367*^9}, {
   3.761068674653517*^9, 3.761068768355229*^9}, {3.761068908242361*^9, 
   3.761068908471813*^9}, {3.761068952952651*^9, 3.761068958392477*^9}, {
   3.761070545837029*^9, 3.7610705461556177`*^9}, {3.761070620697216*^9, 
   3.7610706235698757`*^9}, {3.7610709774586143`*^9, 3.761071003533993*^9}, {
   3.761071045970687*^9, 3.761071047496532*^9}, {3.761071639325013*^9, 
   3.761071672385853*^9}, {3.7610720210425463`*^9, 3.7610720603681993`*^9}, {
   3.761072145618496*^9, 3.761072243955845*^9}, {3.761073165007382*^9, 
   3.76107317167513*^9}, {3.761073335567503*^9, 3.7610733436182413`*^9}, {
   3.761073411227559*^9, 3.761073411612404*^9}, {3.761073445949991*^9, 
   3.761073446093553*^9}, {3.761073588808565*^9, 3.7610735893251266`*^9}, {
   3.76107370465598*^9, 3.7610737103943853`*^9}, {3.761301661489813*^9, 
   3.761301662522043*^9}, {3.7613017816401873`*^9, 3.761301810132235*^9}, {
   3.761301892601728*^9, 3.761301893065094*^9}, 3.761302378072279*^9, {
   3.7613024165022993`*^9, 3.761302425902115*^9}, 3.7613024596553297`*^9, {
   3.7613025019121027`*^9, 3.7613025045407543`*^9}, {3.761303660855639*^9, 
   3.761303664140053*^9}, {3.761303820121663*^9, 3.761303830181863*^9}, {
   3.761303860606042*^9, 3.761303922679833*^9}, {3.7613040091612883`*^9, 
   3.761304050688384*^9}, {3.761304100375236*^9, 3.761304111920229*^9}, 
   3.761304169652936*^9, {3.761304199856526*^9, 3.76130420051193*^9}, 
   3.761304231670011*^9, {3.761317722003262*^9, 3.761317746577709*^9}, {
   3.761317799868453*^9, 3.761317823078051*^9}, {3.761321681047076*^9, 
   3.761321738685679*^9}, {3.761321906104063*^9, 3.761321915185277*^9}, {
   3.76132331314237*^9, 3.761323315134543*^9}, {3.7613850092162037`*^9, 
   3.76138504019591*^9}, {3.761386977789987*^9, 3.7613869854447613`*^9}, {
   3.761426234082651*^9, 3.761426242093199*^9}, {3.761428769887349*^9, 
   3.761428839547933*^9}, {3.7614288838714933`*^9, 3.761428887485415*^9}, 
   3.761428933342328*^9, {3.761428967428103*^9, 3.761428968919696*^9}, {
   3.761645192375155*^9, 3.761645206208496*^9}, {3.761645248188243*^9, 
   3.761645260913273*^9}, {3.761645382744306*^9, 3.761645417721314*^9}, {
   3.761645454792233*^9, 3.761645470496531*^9}, {3.7616457652525063`*^9, 
   3.761645850627521*^9}, {3.761646633571282*^9, 3.761646728589087*^9}, {
   3.761661250427779*^9, 3.7616612549524527`*^9}, {3.761663831583314*^9, 
   3.761663858179604*^9}, {3.761676820610828*^9, 3.761676846136327*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["S",
     FontWeight->"Bold"], "=", 
    FractionBox[
     RowBox[{
      StyleBox["1",
       FontWeight->"Bold"], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       StyleBox["K",
        FontWeight->"Bold"]}]}], 
     RowBox[{
      StyleBox["1",
       FontWeight->"Bold"], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       StyleBox["K",
        FontWeight->"Bold"]}]}]]}], ";", " ", 
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"l", "=", "0"}]], "=", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"4", "\[Pi]"}], 
       RowBox[{
        SubscriptBox["k", "i"], 
        SubscriptBox["k", "j"]}]]], 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"i", ",", "j"}]], "-", 
        SubscriptBox["\[Delta]", 
         RowBox[{"i", ",", "j"}]]}], ")"}], 
      RowBox[{"2", "\[ImaginaryI]"}]]}]}]}], TraditionalForm]], "Text",
 CellChangeTimes->{
  3.761385004782744*^9, {3.761386848272088*^9, 3.761386848949889*^9}, {
   3.761387531111761*^9, 3.761387531998962*^9}, {3.761645507628545*^9, 
   3.761645508690538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Kmatrix", "[", 
  RowBox[{
  "Eth", ",", "Nchan", ",", "no", ",", "r", ",", "rmin", ",", "rmax", ",", 
   RowBox[{"VV", "[", "r", "]"}], ",", "Etest"}], "]"}]], "Input",
 CellChangeTimes->{{3.761068780234721*^9, 3.7610688000914297`*^9}, {
   3.761068861968066*^9, 3.761068883047351*^9}, {3.761068987300913*^9, 
   3.761069002067769*^9}, {3.7610711840533113`*^9, 3.761071199973184*^9}, {
   3.761072088467593*^9, 3.761072117761581*^9}, 3.761072279184969*^9, {
   3.7613043684770117`*^9, 3.761304374937899*^9}, 3.761304812612009*^9, {
   3.761317709955867*^9, 3.761317712134314*^9}, {3.7613178087227383`*^9, 
   3.761317847155615*^9}, {3.761387038165929*^9, 3.761387038817782*^9}, {
   3.7614285817134047`*^9, 3.761428584687149*^9}, {3.761428879422488*^9, 
   3.7614288796106777`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"-", "0.403559474156938`"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0.7198971255636075`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.6940807795964786`", " ", "\[ImaginaryI]"}]}], "}"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.761304023467846*^9, 3.761304053262743*^9}, 
   3.761304123120265*^9, 3.761304173333458*^9, 3.761304203428253*^9, {
   3.7613043731278763`*^9, 3.761304376931047*^9}, 3.761317766182938*^9, {
   3.7613178309361877`*^9, 3.7613178479873323`*^9}, {3.761321688451393*^9, 
   3.7613217418889914`*^9}, 3.761321814765615*^9, 3.761321918938491*^9, 
   3.7613222226163673`*^9, 3.761322644665327*^9, 3.761323317264543*^9, 
   3.761340083151993*^9, 3.761340637661227*^9, 3.761340840421445*^9, 
   3.7613870398855667`*^9, 3.761387533586876*^9, 3.761399751426441*^9, 
   3.761399921339314*^9, 3.7614002246734467`*^9, 3.761426247666089*^9, 
   3.761428586124645*^9, 3.761428794044608*^9, 3.761428898413089*^9, {
   3.761428938339951*^9, 3.7614289737134857`*^9}, 3.761431716765328*^9, 
   3.7615834475208807`*^9, {3.7616454860835114`*^9, 3.761645510447009*^9}, 
   3.761645782289239*^9, 3.761645816119492*^9, 3.761646509477654*^9, 
   3.761646643731769*^9, {3.76164668506444*^9, 3.761646730868095*^9}, {
   3.761661262496482*^9, 3.7616612810666447`*^9}, 3.7616627004279757`*^9, 
   3.7616638665018597`*^9, 3.765017073193905*^9}]
}, Open  ]],

Cell["\<\
It\[CloseCurlyQuote]s hard to tell if this makes sense, so we\
\[CloseCurlyQuote]ll need to automate this process so we can look at the \
energy dependence and understand the results in terms of the single-channel \
solutions.\
\>", "Text",
 CellChangeTimes->{{3.7604480168380537`*^9, 3.760448061141575*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]", "[", 
   RowBox[{"De_", ",", "\[CapitalEpsilon]_"}], "]"}], ":=", 
  RowBox[{"Arg", "[", 
   RowBox[{"Hypergeometric1F1", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox["\[CapitalEpsilon]"]}], "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "De"}]]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"2", "\[ImaginaryI]", " ", 
       SqrtBox["\[CapitalEpsilon]"]}]}], ",", 
     RowBox[{"2", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"re", "/", "a"}]], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "De"}]]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.761400295105589*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3.", "/", ".002"}]], "Input",
 CellChangeTimes->{{3.7644994460445843`*^9, 3.764499449554981*^9}}],

Cell[BoxData["1500.`"], "Output",
 CellChangeTimes->{3.7644994500874023`*^9, 3.76501707339403*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Etest", ",", 
       RowBox[{"Kmatrix", "[", 
        RowBox[{
        "Eth", ",", "Nchan", ",", "no", ",", "r", ",", "rmin", ",", "rmax", 
         ",", 
         RowBox[{"VV", "[", "r", "]"}], ",", "Etest"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Etest", ",", 
       RowBox[{"Erange", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Erange", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "0.002"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.761317863727027*^9, 3.761317901493277*^9}, {
   3.761317976264312*^9, 3.761318010869542*^9}, {3.761318044109271*^9, 
   3.7613180506247597`*^9}, {3.761318113787437*^9, 3.761318114507063*^9}, {
   3.761318277458818*^9, 3.7613182812957163`*^9}, {3.7613187398222923`*^9, 
   3.7613187399466743`*^9}, 3.761341203705628*^9, {3.761387081750327*^9, 
   3.7613871110522623`*^9}, {3.761429015203681*^9, 3.761429021200179*^9}, {
   3.7614290915146313`*^9, 3.761429091650341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dat", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7614290779475*^9, 3.761429079994815*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"-", "0.11791193164822732`"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0.9725748507331737`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.23259011097066218`", " ", "\[ImaginaryI]"}]}], "}"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7614290805414762`*^9, 3.7614292517850943`*^9, 
  3.76143191792346*^9, 3.761583606813407*^9, 3.7616470104071417`*^9, 
  3.76166329159869*^9, 3.765017356992622*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"K11", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "2", ",", "1", ",", "1", ",", "1"}], "]"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"K12", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"K21", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"K22", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "2", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.761321508248451*^9, 3.761321518198279*^9}, {
   3.761321575175111*^9, 3.761321600875115*^9}, {3.76132176284932*^9, 
   3.7613217629855556`*^9}, {3.761321837107029*^9, 3.761321852495965*^9}, 
   3.761322467912694*^9, {3.7613998200122547`*^9, 3.7613998459201927`*^9}, {
   3.7614292953714542`*^9, 3.761429324474176*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"K11", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.761429289603956*^9, 3.761429291320406*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001`", ",", 
   RowBox[{"-", "0.11791193164822732`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.761429291835615*^9, 3.76142932664992*^9, 
  3.7614319235283546`*^9, 3.761583606963058*^9, 3.7616470110368633`*^9, 
  3.761663292398744*^9, 3.7650173570923862`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KK", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Legended", "[", 
     RowBox[{"K11", ",", "\"\<2-channel\>\""}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.761340810115739*^9, {3.7613409203485537`*^9, 3.761340922293057*^9}, {
   3.761341172387801*^9, 3.761341188339198*^9}, {3.7614000665717907`*^9, 
   3.761400072079502*^9}, {3.7614073403024063`*^9, 3.7614073472971487`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwlVHk0lWkc5tqyJJSSyozqoGkkMyNt+lnSZmgzWqakRiUVXTWhDCeOLKMU
I0uZkJ1Uki7J73Wva52TSpNEI1vXUuFaruVivvfznnPP/e/5nt+z6R/z3HOc
IyMjc5r50X9p1sBr+2O7AMo2in1NSnHc373kQrQb/PJvvuVH+xq8PC9va+ul
C3ChsEtnQPsV+nYbmM7K9QP/Eqf1w/ve4MaWnddiPQJhyxPPG7imAYu3q3FW
hlwF47yWJb31jbi+oOpi6d1wkN8hnKtn3Yw8veDe3bzrcOTotM1IxH94p/zb
h15uN6EauEZLnT9i8xhLAP5w+c2z1r0VF5l8WK54JQbMFdoCr3q04UHXDfSL
MHmo7a3IvR0T4tkHmg7G48ZHO/D9C8ne9rTbcFTxQ+iBPZ24UN5J3Tg/Ebwa
DNdYwCfcv44lBEr8XZ9CjUT4s3mYlUtnErw79S7mlXoXft5NGSZDXVvQ4lhx
F0acEU1kDaRA+kiEz7Y33bgyZH7jC8k9yFtkob61oAdrk20LBydTwdos6bvu
qF48zZDXkU+HHa4bxi6f+4wqDffOWahkgCiiQNPW/gtmU7k1MuHw09TCoBVf
cQeVa34WAJ/zjqvQhz1U3sXZYPyx6NPm1j4MZ9i9XJoDUdoCq1jnflxxKJI/
bJQLUO0SmvdPP1Yzx+ia3IdUW2uDqfUDeOrmFz8wywO1pbGJCVkDyIAxkj2A
fbHHE2N1xOjIiMNIDsnhHd1KoWJMZdg13HsIho6dEZMSMQ5NvvHpNngEyoIs
cZjbIG7+kwrwCKLTLOVKGwfxLx1WUFAzk6zNthvCDhYuH/rtfy1wLh3CH9n3
GDqGTB16TYcxiNQwCj0Gm1pexpH0Yaxnrmc8gKQJ7rraRSO4rIkaXgDv7XON
LaJG8LwbPeAJGCkEmAuVJSgYNmIufgLt/fFcr0AJzp0BBBO+7mpHqQRZtKpC
sDr5uNHXexTzE/syKuyegjA6YUA8OIoc1rCn0HljoX4ddwz3zAQQKgTF1/QG
xjCF2veGB07ttx71c8dRTO3ZXwQ9cZ1GTkPjaE3lbyqCE0EcvyM+ExhF5XUu
BulQKlkyNYFtl2hBiiHrwIJVKcFSNGUFfwanPw56TalP4pUYG0bBZ/BDOCdn
c8IkvlrKHgwHW+3cQgynUJ+m/0sJ5BcfKWksnEIutePcc+AFN1nt3DaNZfTa
weegNL3eQNo0jZozAQY93+n48bUyhKU3Vgrho7e/GgbLEBbOD+H8xU3Lbr6W
ITLsIyDXsCrLSl+WZFbYMYknMHg2z8mWK0t2Me3VCiLw/TM4m8mXJaO0PeUE
nPdYJnlrc0iSLi1gGfwualpETnHItlZ6cBlUex2NiEQO6c+ggGWgx+MYDM2X
I3EUraYMnO8q3Zd6yhFLRqztanyQegT482rkSNcEHRw+1AkuxZsbypMbfNZg
OCj7PjM8WJ6wdXzJh8MjJbMFnfKEnRctAciFJfeItyoQtn57BfCHl6WJca4C
mZkHAUReXJsWrKVI2Lo1CAAn4ic1LiuSALomOuVwLfFES0enIjFkDSqH/tW6
kgV7lUgdOxflkClwVOLzlYg3rdOHcrjvg+MTP80i39C06Anh8z4HSUvWLFJJ
5XMRQoa02StMX5l40nOThaAVcnu79h1lsoDSaxdC3HP5t8kLVQhSuOUVUHjn
ncrOBBVy8gR9FRBbsTJyk54qoePEJBb6erA5Ok2V0DT6dFdAcq7I5cJqNeLM
Dmol1McZJymhGlFkA1UJY8tUD3vvnk3oOs/Lq4Si7smyPtFswq5dXyV8jXOM
vBuoTqZonU2rIF95sT1Pfw5Jp3X1qoJbXaFXPIRziMNMgSBRaDsiXaNBRqgb
w1WQ5OzRUXNNg/xN62ReDS7m2WGWIg2yhSVYDfklMWcCbDTJV7YO1ZDjJN2S
k6JJbtG4T1RD7msjsx55LbKJHcAakCtX7XF11yKfaFz9a2BVQpV4S70Wuc7G
rwYqPVTrSmEuYePCqQVv12fcqQdzSUu7xpChSS3M5Hge+R8beny4
          "]], 
         LineBox[CompressedData["
1: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
D8uixK0=
          "]], 
         LineBox[CompressedData["
1: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
/wBfYpTc
          "]], 
         LineBox[{{0.3216963009468771, -5.}, {0.321709820819442, 5.}}], 
         LineBox[{{0.8191498201750974, 5.}, {0.819652641917348, -5.}}]}, 
        Annotation[#, {{Legended}, 
          Charting`Private`Tag$516571, {}}]& ]}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2.999}, {-5, 5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 2.999}, {-5, 5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"2-channel\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "True", "}"}], ",", 
                 RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7613408745460663`*^9, 3.761341134227806*^9, {3.761341175545782*^9, 
   3.761341188804604*^9}, 3.761341506436596*^9, 3.761387909144717*^9, 
   3.761399763199214*^9, 3.761399850417034*^9, 3.761399931716898*^9, 
   3.761400072746962*^9, 3.761400397174745*^9, 3.761407349236135*^9, 
   3.7614292649821253`*^9, 3.7614293290492363`*^9, 3.761431929787846*^9, 
   3.7615836071519337`*^9, 3.761647011497246*^9, 3.7616632926937*^9, 
   3.765017357247086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"De", "=", "4"}], ";", 
  RowBox[{"a", "=", "1"}], ";", 
  RowBox[{"re", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "0"}], ";", 
  RowBox[{"rmin", "=", "0"}], ";", 
  RowBox[{"rmax", "=", "20"}], ";", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "funs"}], "}"}], "=", 
   RowBox[{"NDEigensystem", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", "r", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Vmorse", "[", 
            RowBox[{"a", ",", "re", ",", "De", ",", "r"}], "]"}], "+", "De", 
           "+", 
           FractionBox[
            RowBox[{"l", 
             RowBox[{"(", 
              RowBox[{"l", "+", "1"}], ")"}]}], 
            SuperscriptBox["r", "2"]]}], ")"}], 
         RowBox[{"u", "[", "r", "]"}]}]}], ",", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", "r", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"r", "\[Equal]", "rmin"}]}], "]"}], ",", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", "r", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"r", "\[Equal]", "rmax"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"u", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", "3", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<SpatialDiscretization\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<FiniteElement\>\"", ",", 
          RowBox[{"\"\<MeshOptions\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<MaxCellMeasure\>\"", "\[Rule]", "0.2"}], "}"}]}]}], 
         "}"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"channel2states", "=", 
  RowBox[{"vals", "-", "De", "+", 
   RowBox[{"Eth", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.761429421416389*^9, 3.761429440989912*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8253148024189354`", ",", "2.793546352030199`", ",", 
   "3.041337585955228`"}], "}"}]], "Output",
 CellChangeTimes->{3.7614294414750433`*^9, 3.761432161840763*^9, 
  3.761583607265752*^9, 3.7616470606687803`*^9, 3.761663310821093*^9, 
  3.765017357340349*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"Tan", "[", 
        RowBox[{"\[Delta]", "[", 
         RowBox[{"1", ",", "\[CapitalEpsilon]"}], "]"}], "]"}], ",", 
       "\"\<background\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalEpsilon]", ",", "0.01", ",", "2.0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", "KK", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalEpsilon] \!\(\*SuperscriptBox[\(\[HBar]\), \(2\)]\)/(2\!\(\
\*SuperscriptBox[\(\[Mu]a\), \(2\)]\))\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(K\), \(11\)]\)\>\""}], "}"}]}], " ", ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.825315", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.825315", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        "Dashed"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2.79355", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.79355", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        "Dashed"}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7614003190172253`*^9, {3.761406865093088*^9, 3.761406887766961*^9}, {
   3.7614069552138557`*^9, 3.761406965188871*^9}, {3.76140700043688*^9, 
   3.761407137745722*^9}, {3.7614071884221773`*^9, 3.761407247634088*^9}, {
   3.761407298539246*^9, 3.761407333701171*^9}, {3.7614078043758717`*^9, 
   3.761407808052621*^9}, {3.761407912673252*^9, 3.761407918341979*^9}, {
   3.761407955018012*^9, 3.761408026561413*^9}, {3.761408121787916*^9, 
   3.761408137318852*^9}, {3.7614081818130617`*^9, 3.761408212304019*^9}, 
   3.761647068243803*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0]], 
           LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA+ikbu+Z6hD83d6ij5JnYv/gcNpPj
uoU/V1pUpgFk2b/2D1Fr4PqGP3IuQg+GKdq/8vWGG9p6iT/BZquLWajbv+vB
8nvNeo4/kdQ5Vr993r/uLGUeWj2UP0T0ZTm32uG/4MQ830A9nj/3wLdEIo7m
v18+Sks/3Z4/AQTd3r3V5r/et1e3PX2fP+fy8cUMHee/blW5R51eoD9hjNub
1Krnv2xI1B+anqE/KOSghHPD6L9oLgrQkx6kP4+jACyw6+q/Yfp1MIceqT+t
WKyIBynvvz5kNABBdak/HqFPaTly778czvLP+supP+M02GZru++/2KFvb255
qj+kXARy6ybwv05Jaa5V1Ks/i6vF93258L88mFwsJIquP2oluZXx3/G/C5sh
lOD6sT98p/7/BTf0v/rPAHw9JrI/U75iSRhd9L/oBOBjmlGyP1XVsSZBg/S/
xm6eM1Sosj8gOaX02M/0v4JCG9PHVbM/JfLPGzFq9b/46RQSr7C0P4BnCd4D
pPa/5jgIkH1mtz8uck3/KzD5vygThdT6jrc/BKHm4GJX+b9p7QEZeLe3P58J
gWW9fvm/7KH7oXIIuD88klBE3835v/MK77Nnqrg/8yev8ONt+r/bAzVa57W4
Pyaw0QeEefq/LEgFDg==
            "]], 
           LineBox[CompressedData["
1:eJwVkXk41PsexzVkjG0Yc4S6SKeFJCVC8fmGpJoi6SR1soZQES24x5aSY6tO
CWNpmRhLlnSLVltCKRG61KyZUeY3DGNEpt91/3g/n+f9vD7P5/O8n/fygFOe
xwgKCgrxC/r/tK7XeSV3YMEfqxxPmv2iIrx8rEs3jAVmZr2dudVU1P6q8vPP
aBZomMePHiyiokxuuJjzFwuWGuuH2GdSkYG+SLvyKgucznyX+4dRkc1lkTc0
suDmCkXbDWuo6EQwJghRYUOatuHN5HIdNGwyTmgsZUNm6u6/G5ooyHWTIORM
HRuiJuJFg3UUVLv9y9sNz9hwQ1aqqHOXgi6Fvsmt+MCG+wXOesMXKciyusys
cJ4NZWvTsipoFNS6zLIcTDmww35/K5GtjfSYoz0miRx4NddBl1G1UbdlkGJy
Kge8SUM+KiRtlNLItmanc8At2oi/Tq6FsK6BAvp1Diw905JWP6KFWrC2IGoF
B6brDT7cfayFTljd/rG4nwMzDjzB+NEF/uKQ8TczLsw7/aZsFENGJvOhR8fW
c6GrzM7pkz8ZpdidL8Q2cSHFKmm2wp2Mtj3M1Zt05EKVNkOhcC0ZNZX3af30
5ELbMM4o/aqJnl/fs0gjngv5HvatGw5rooawbTzLN1ywft75fsBbYyGPh7FV
DxcG9m9q89upgc6N+B617udCJGP7qV92GsjGL2HIjs0Fr48X3GOWaqD/HHja
6zTFhWPKbvqubHX0AFm3ei3lgZbElxIQpo7u65oyzofzIO5V5KucLDXEeteX
IYjkQbXDl3jLRDWklZYQ7XWWB4emr8TxI9VQzEyfk2Xywr7AsCXRSw3Zf0rg
CnN54FcNZVnL1FB7/kfDgy08uLhGyZtbo4pYy5LyrfX5sCdpuCSLR0Ja/WbJ
dw35ID4YlWM7QELbsvpDtX/nQ/pM4Likk4QYcjNbzIIPanWH8nLqSCiM1T/A
cOFD+Gp5a3QyCc2UrKVSI/mwfvruZOeKhXsrBrMn2/kgi+DfUz+tgvau1lPf
8ZYP9SkDl9NDVFDW2kPp9A98cPapp2v/qYJUNw1fcPnMh723HxCd3VSQ4nb2
+VwJH5gJu/A1RipIFiwMsF/2FTwsdhlPviOiLxUzNilRX4E7fMVO2YaIKjbq
sbWXjYCdMD+aaKSM/hkThaguX/BFnHsBS5TRvxnNE4RVI3Bnz9UzbWRltEc3
nCBdPwIbG6s66QrKaGL2+coB5xGoUa5yz+MtRjbNgREF4SMQkpp/pLlsMWpx
r5k1eToCilG9XQU2i9FQhCt1k48AzlrYfe4JUkLXbz1yzfMVwLFn9vfJR5WQ
+8dVsfNBC3xj9kqvg0qobQuR1XZKAPGZtWJspxKqUe0oO3BRAMx2nyVB65VQ
KnPnlnO1Aki31czx+qmILL7SAp4oCyHqawyme1MRXTi8vxbVC+Flj4bTm88E
NOp8UOzWIISqYOPjJYMERDM/bL7vuRCMiAbrzvUSkK48gOn/Wgg/6mXxGzoI
qKL49K2UYSGMr1bp6KknoF7u1SttiqNAIdU1P8ogIJPQnkg3r1HwohflKTsS
UEvMng0e06MgkuqRZysXoVinVfq7PL9DxqNxmeF1BRSicy34G3MMXoo+kPQ8
cRjTHMvLGBWBJNC983mfHIQvTDbqOYtBNMsM6Aieh9j8HbVll8ahaO51T5Dt
T7j9FN8p9p+ALTdIDyfWzUGz0u5xuYYEHPFGz62ms2DOVyfmVEuguSYxp5T2
A/qWOnreODIJ6/eFbm0/PQO6A7YeJ4lToHuLYhVaIwPGyoqmjtIp0LGLaM0l
yuDk+7+D8vZLYajoYaSf7zRc0OTFfZNKQZ7cqPumWwpW7wkuGv9Mw1BAxIFC
NykYf7+GSh1lMKv1V/vd5inwLsivaWLJQEvY+6J59xS8ZZA9PTJnYCjd++FQ
3yRkuMwH+1v8ALfkXS55YZMwcuyBxfbuH2BgSU41IE1CPHfQtDh2FrxfL/lo
fk8CRyajb543mIP74ZL9ozQJxP2ZaNvRMQcpNIuLWycnwGqXV+b36J9Q8kTW
Olg0AZvflnhm68zDIqnQZsxzAs4xfWhlTfMQweAYJS+eAIJBZsO2ADlQv91U
NUweB1ONtMFqhV9gevx16xNcDJk+EtOrVb9gPCtpTWCsGOwdesVSGg6uHwrM
PRaJ4bP3mEGzOw7TFBsdZxyDxBilHVkLPYqWM71t5Bi0VdqUrPTG4Vrgbfxf
sxjsNaC7/xGIwwky54lkAgP/mcDax7E4DN859a6Cg8HluumouFIc6GOmlQFN
GJh1axa7luOgvTlzs/8LDLpHV3dRqnC4QfMz8nuGAcXYx6SyDgeKulTBtwED
evaL3uFnOIwwhSr+tRhUh6dZOfTh8Gar1m9nb2HgkXbLlzSAQ9c+oMUVYzB1
pzGj/xMOam8dviQUYmA7NMY/wcLhfcs29fQ8DFrcPK4Xf8NB2nCDfvsKBkFB
x5vCRDj41pwqZmZjQExKEdmML/xr3D1Xk4kB7fFDl/dSHGi/M569vIyBuLc7
kj6Dw8tyzKTjEgZXxILCkLmFfNl93J5UDDaqKnRayXHoT9g6+98UDPpX6k/j
OA7HLcnH+UkY/A+bXdJJ
            "]]}, 
          Annotation[#, {{Legended}, Charting`Private`Tag$516724, {}}]& ], 
         Annotation[#, 
          "Charting`Private`Tag$516724#1"]& ], {}}, {{}, {}, {}}}, {}, {}}, \
{{}, {{{}, {}, 
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]], 
          LineBox[CompressedData["
1:eJw9lnlUzesax9X+7bFd7V10yiWVJFNOJCfF8ygVoZI5SZIiKg4XJdMJcTkc
QqbqRFR0EzohZS4ZigZSyp6nBkNUktO5+/35rfuutVfr98+znvf9Dp9sw+OC
Vhr269cvW/8jf8WXrrY3uEmgH33647W0D9nlMyXwc+b3SW0Kc+TsOu51YK0E
5NBU++yqOQZHuEsCfpeAtKF6VN1Oc8z3lSX0z5dA1oiFVG+gORqOSrZoqJKA
30yLVFc7c1xgMkY/UgInQqwPb/tihq+26ByceVIIX7nB8PFjM9wRXbIxxVIK
jm0WqwRnzXBEyOEHnY5SGNL78DysN8Pa2eGiRW5SsPXyVIf6muE2mBBaPEMK
s3J/uRVmbYbDnXl5g4KlkG+U+3pylxir7d72bI+WwtKKs3kfqsS4tT/ZUApZ
opiDcTliHEZfSAp/H1SMvvGbGF90z1VcOCOFs517ku4tFWM8WS9PCh2d5Z17
3MQ4lIwrkcJ8waU0AwsxVj4nRwoFXtaBTp9FuPlOxsCxzVKIGMxq51SL0Lbg
11VH2qUwYYZr8t4rInyW6V30+W8pZIz/9j7nkAj/nWJJLTCRwQjJ3fhVsSIc
sqd1zk1rGTgNz5t331+ETzaRgTIQ/jfb98pYEW7QT0sEGUxxuOzpJBbhYFoA
GZT29dzYqDbFxzMn7p8aJoOiA8/KMi6b4vrJgvrz62SQNfmr1ev1pvivsc32
nF0yKOi42yhyM8UyG7KgDBTRO3xmGJhinFnSvaeZMniy/a83W56aoBVFFJOB
pzjC99QxE3zY6ahXRAYJqpSdWctMMEbTm/upRr/vnJ7sY6NM8KeGKv0LysD4
7Y3+EV+N8f5TcmEZHP/mGWBcboxriLyUHAxfdBkfOGaMA2jDyEGeyXN7s8IY
75Lns5dD7sJ/3n0Yb4yryXUnyCH9vPOkSsoYzcl63vpvoUP+mtdCLCXjFsih
tmh9WXmOEKMiyZHDUO700Y1bhShe5FZYsUkOok1zizIDhFg8Q6i3pByCGnMW
WdkLkbZvqhzOJL9o9ugxQtqe2XKo9hgn5r8wwpvWRBA5WKqzeuMvGCFxX2GF
fr/xA0wPJhqhkDa4HEYNTm92n2eEenHrtujkYHZVINg72gjDVC/1DpRDUs2F
kCi2ERI1JgsUkBnw8HrTOwHql9MLrIB1I5M5ipsCDKUXVED3+fD0zSkCJG6O
cFdAdFPwmNRYAZNHBSR+gZHgJ0A6HiEKCPh4SrPWQcDkUwEz/cS1g1gCpO2X
qIBGnz+W+kv5TF4VIJyaYtRXykda3jQFOEcbnhtxls/kVwGjrlU8qkrgI/18
dxSw2WK+R+tiPpNnBZy28ZMnuvGRXk+igJqJFzN2WfGZfCuAe3LFuu4eHv7o
ESWM3JQd2tTIw0ufavQJVoKluH6fUwkP5+nT9shGCVvvR1m2pfGwr44UghKs
38b7mu/kYU45MbQSstwNlp0L52EQLYgSkmJ+vpHqzcPvuWSgEkobMgs/OfLw
on5awa9K8IsveZov5GHg76mxZklKWH3EZVvlRy5+204KRgk1D5JjZ73iYtY6
EhAlFLpfNx1ZzEV/WmAltJakGa3M4OJXUgePlJDXvc3r+24uniPxrVPC9DqX
yPfRXJxF4qZSwudSudekOVzsIvHoVMJz59u33k3k4p/EzhwVxMUetXprzUU/
2jAqOG1ev3cMh4tfiF0cVCBd2BL3qp2D6UTeiSpYsrhWWf2Kg9OJHL4qUAjL
guzucLCDPN8iFQwqWTy17CIHz5LrrlJBVbOXW/FhDvrQBlTB5XbbHf3iOfiR
jNuvAg/33hWp4Rw8fYocFURVuvtsn8XBaQfW6hOsgiOfHxwtdOXg+0RSqCpY
Jb7+yM2WgydjSSGowOaXueOMhRz0pA2tgkkZ9m+dutnYNocIooLlUza4pMvZ
eMKLDFRBseurruAqNiKpZ6Ea7HbltkYUs7GF1OkgNSTZVrXfvsjGY6T+xqjB
MiSyZVkKG6fQAVHD+MEG8sCdbNSSepmtBvtL97WHYth4lNRBqBoid152HLiE
jR4kvrFq+DbNVt4xnY1qErftaugL84qxmshGOh6H1SBw9vM4NIyNtJ0z1LAx
2KRpTn820vYrUMOAgoddESw20na5p4a73686VHRQSMv7Ug05Cba3EuUU0nLI
1DDwREZyUg2F9PN9UkO92L6q+QH147qGGkitbG09eJ1Cej0zDdweGpxwNItC
epydBjJ6ysd8PE7hePpoIG+kkp+TTCFp5+NeGgh0fHS6JJ5CkrbuuRoIC994
ZuxaCmm8RWhgQl9zPLWMQhpHGzUQnTft78lBFNL42KOBzutnbki8KaTr/rgG
xj1+vqfdjUK6ni9oIPGl27U1ThTSdVqkAYlBn+uyoRTS9VeugeGmyx0rLSmk
66peA6HjZifcNqGQrheNBngh3XHObArpOujWQOFgV3/X7yyG51rYnx1/suYz
i+G5FpovLn1j2sZieK6FhKitFj1KFsNzLViHTsDT71gMz7Ww5HLACoMGFsNz
LcTYmwZNqWMxPNeCw0oprHjJYniuBReLLa27K1kMz/Xfir8G3X7GYniuhXWW
XGs7/fcPnmtB2Pa+skH//YPnWphmE8XiVbEYnmuh1mVKckM1i+G5Flh7v735
rZ7F8FwLsbF/tnpKWAzPteCceOE/K3Ushuc68EkZ4O/TxWJ4roNKu62RCzgU
w3Md8Fxm37MZSDE818E+V37X3HEUw3Md6PyrUyoDKIbnOuCMMFmat4FieK4D
Fx/zc5EZFMNzHbDmU34ddRTDcx2kNJYa9FmwGZ7r4I/A5vyA1WyG5zooK329
e3k1m+G5DpKfUCFbFnIYnuvn16efyONxGZ7rwPunklmCXi7Dcx0cahJXPl3A
Z3jeAvwzFVdaYowYnrfAlGHr+WFsU4bnLVCeNmR1kbc5Nvt92Vc1rOX//1/+
D8uixK0=
           "]], 
          LineBox[CompressedData["
1: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
/wBfYpTc
           "]], 
          LineBox[{{0.3216963009468771, -5.}, {0.321709820819442, 5.}}], 
          LineBox[{{0.8191498201750974, 5.}, {0.819652641917348, -5.}}]}, 
         Annotation[#, {{Legended}, 
           Charting`Private`Tag$516571, {}}]& ]}}, {}, {}, {{}, {}}}}, {
    PlotRange -> {-5, 5}, Frame -> True, LabelStyle -> Large, GridLines -> 
     Automatic, FrameLabel -> {
       FormBox[
       "\"\[CapitalEpsilon] \\!\\(\\*SuperscriptBox[\\(\[HBar]\\), \
\\(2\\)]\\)/(2\\!\\(\\*SuperscriptBox[\\(\[Mu]a\\), \\(2\\)]\\))\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(K\\), \\(11\\)]\\)\"", TraditionalForm]}, 
     Epilog -> {
       StyleBox[
        LineBox[{{0.825315, -4}, {0.825315, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False], 
       StyleBox[
        LineBox[{{2.79355, -4}, {2.79355, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False]}, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 2.}, {-1.6546669297631609`, 5.248208735030479}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"background\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"2-channel\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "True", "}"}], ",", 
                    RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7614070652634077`*^9, {3.761407098427013*^9, 3.761407110599039*^9}, 
   3.7614072497320004`*^9, 3.761407312594984*^9, 3.7614073508555727`*^9, {
   3.7614080013401737`*^9, 3.761408027238715*^9}, 3.7614081383368073`*^9, {
   3.761408184708394*^9, 3.761408213089192*^9}, 3.76142950214115*^9, 
   3.761432165127946*^9, 3.761583607594742*^9, {3.7616470621487093`*^9, 
   3.7616470690316477`*^9}, 3.761663311827504*^9, 3.765017357538909*^9}]
}, Open  ]],

Cell["\<\
The dashed vertical lines indicate the numerically found positions of the \
bound states in the excited channel.  Looks like good agreement!\
\>", "Text",
 CellChangeTimes->{{3.761408148066112*^9, 3.761408169358399*^9}, {
  3.761408217222211*^9, 3.761408218075604*^9}}],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s look at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["k", "i"], 
       SubscriptBox["k", "j"]}], 
      RowBox[{"4", "\[Pi]"}]], 
     SuperscriptBox[
      RowBox[{"\[LeftBracketingBar]", "f", "\[RightBracketingBar]"}], "2"]}], 
    "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["k", "i"], 
       SubscriptBox["k", "j"]}], 
      RowBox[{"4", "\[Pi]"}]], 
     SuperscriptBox[
      RowBox[{"\[LeftBracketingBar]", 
       FractionBox[
        RowBox[{
         SubscriptBox["S", "ij"], "-", 
         SubscriptBox["\[Delta]", "ij"]}], 
        RowBox[{"2", "\[ImaginaryI]"}]], "\[RightBracketingBar]"}], "2"]}]}], 
   TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.761432220323332*^9, 3.7614322610220346`*^9}, {
  3.7614323223664703`*^9, 3.761432328758297*^9}, {3.761432433542501*^9, 
  3.761432437345883*^9}, {3.761432472419509*^9, 3.761432476832423*^9}, {
  3.761432532844696*^9, 3.761432560348668*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["scratch work for the single-channel Morse potential", "Subsection",
 CellChangeTimes->{{3.761400608985537*^9, 3.7614006267615013`*^9}}],

Cell[TextData[{
 "The single-channel result is known analytically.  See Deloff, Ann. Phys. \
(2007).  Deloff parameterizes the potential as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "s"}], 
      RowBox[{"2", "\[Mu]", " ", 
       SuperscriptBox["a", "2"]}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "-", "d"}], ")"}]}], "/", "a"}]], "(", 
      RowBox[{"2", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"r", "-", "d"}], ")"}]}], "/", "a"}]]}], ")"}]}]}], 
   TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.761388298952952*^9, 3.761388312691535*^9}, {
   3.761393687442197*^9, 3.761393694005888*^9}, 3.7613937685445633`*^9, {
   3.761393992152629*^9, 3.761393994174795*^9}, {3.761394985581204*^9, 
   3.761395046856255*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"V", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "s"}], 
     RowBox[{"2", "\[Mu]", " ", 
      SuperscriptBox["a", "2"]}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"r", "-", "d"}], ")"}]}], "/", "a"}]], "(", 
     RowBox[{"2", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "-", "d"}], ")"}]}], "/", "a"}]]}], ")"}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{3.761395064835*^9}],

Cell["which can be written:", "Text",
 CellChangeTimes->{{3.761395067519609*^9, 3.7613950709252157`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"V", "=", 
   RowBox[{
    FractionBox["s", 
     RowBox[{"2", "\[Mu]", " ", 
      SuperscriptBox["a", "2"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", "d"}], ")"}], "/", "a"}]}]], "-", 
      RowBox[{"2", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"r", "-", "d"}], ")"}]}], "/", "a"}]]}]}], ")"}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{
  3.76139507310931*^9, {3.7613951328972387`*^9, 3.7613951733127193`*^9}}],

Cell[TextData[{
 "which is equivalent to our ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "morse"], TraditionalForm]]],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["D", "e"], "=", 
    FractionBox["s", 
     RowBox[{"2", "\[Mu]", " ", 
      SuperscriptBox["a", "2"]}]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", 
    SubscriptBox["r", "e"]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.761395235892828*^9, 3.761395262578958*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"-", "s"}], 
        SuperscriptBox["a", "2"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "-", "r"}], ")"}], "/", "a"}]], 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "-", "r"}], ")"}], "/", "a"}]]}], ")"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "\[Rule]", "1"}], ",", 
        RowBox[{"s", "\[Rule]", "2"}]}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"Vmorse", "[", 
       RowBox[{"a", ",", "re", ",", 
        FractionBox["s", 
         SuperscriptBox["a", "2"]], ",", "r"}], "]"}], "/.", 
      RowBox[{"s", "\[Rule]", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7613937725185757`*^9, 3.761393874969676*^9}, {
  3.761393906862589*^9, 3.761393915669449*^9}, {3.76139433611036*^9, 
  3.761394351786509*^9}, {3.761395192886302*^9, 3.7613952090090733`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
NsImIgv/Bw0RNDE=
       "]]},
     Annotation[#, "Charting`Private`Tag$516801#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
+MFV8ugyo2FYZyNcVYEkVkbTvZKthuGt68pn9t9I7C1a8WLvuWFw/1s4iV1E
4orlGwcv+QyDedQOWnUZiX5fDe59zRoG8bKHwK4jMXbQ9L1V4TD4xpRYLGok
Mfsvi+rBmmGIn6TvVfpJ4vAFe3m5oWE4NJI9sKaNRCtZnwxnJQ68Vow0udFN
ousu/xZSiwNbtqrTNJkkPnQIJsN3c+AIs3lJA4tEzI0xweMcuHDowKs//SS2
MuPcLBw48Mdi3w4PNomjUgnPBv7hQFFirQdrkESVs9k99MccOO7hJBfLIXFv
MC58/y8HNL6o/dvLJdHmU7HWngQO+MiPiyrxSQyVaLzp9J0DEr/OF7sJSEzS
bX81W8cB5pUDu/1HSSw+3VMS1knZFxHfHDxG4lQGn/5lmrIvIC7v2h8Sl/ye
0DNfyAWZBHLd8QkSNcVodn1yXPBRtuSrT5J4cPMCf+91XFhfaq09RvFZG6kk
mc1ckO/MHk2bIvG2/191b4ELErZiJnbTJEamrZzYeYgLKg11+4RnSExvXatQ
a80FaUYYJ4riShG1/Q5OXEiKTbdeN0vlS3Oz87QHF4Q6Qp7FUUw7ocdg3OMC
X+pq5pI5Kn/3iI/rQ7kw3vyi4AbFusmG7bmxXCjrIioaKD7802ze4SQuLGy6
1qNEkugsZKXCyuFC6XXzZecp9lOzNbtRwoVlSY2eMRTHWp67uriRC/cDBfRi
irN9LkbHd1Nsx5hgUlz/3r1Aj8eF33V3dSco5tR79VbNcoH2M6SFpFjEh5if
LsoDs/IrgmmKZZbsj/KW5MH5W1WhQxQrvDdUN6Tz4JD+gcJaitX2mKDMCh68
Gz37NJHi7fVm5u2KPKiSfrv8BsUGTuast8o86PzofXI3xeazlp5umjyoyzNy
HqP8Ox12QmKXLg+ccu0s4ii+pGwbO38XD9bKLVDZT7FXnp127V4eaMheFbRS
8fM/cq4oxojilpoiB4rDex2PORzmgfyj7Ql9VPxf3bzI3nSMByLG2R9sKd5U
sHAiwJYH4erpa+qp/BWIvBPtOMuD+KvZm4DizmCmYrArDwoNl56YpvLvWuer
ybzGA6NNQ4EmFJNya3btvEXdZ1LsF0bpR+Gl7bGBBzxIcJZeJErpK4U5fY5g
8GBJ8fvUTeMk7t4Y7f7sKQ/2yMYYH6X0aJPeFGzwmge2Bo4Rtyj9Rhf9XfQq
jwdxvyJTHSm9qy7k1E5840Grm/oBU6oecg4FdfxdxoMBsQY1lWESm5tKp2Yb
eaDrNidVTNWT3IC+tjWXBwZlXJsYqv7eanTu+TDGA2v5qPCdVH3qut82FZuh
1vXDr9RT9Wsxnev4UYwPUgqs7ewOEsMW6cTKKvGB/Shye1YLiUrmdYkXVPig
rpCXQG+m+s9T15wCTT4ktAvJOjeRWLM6ucFlJx9M5ZX756h+IrV5g0SFBR9G
bLTLyyqofmC1zPNeAB+03gQLDX+m9Bzz8X5rMB/+Sn/kVJ1D9esOiyfa4XwY
32pwJuETiaVOoSkdL/nQrFqnYZxB4vyb4qyduXw4lZe1YzPV/3xfzBwZHeKD
TlalftJTSv+bst3UBHw4+zJy5cZwKv5f/wm1n+RD6eERuxehJOZ2s2tqREfg
NTFp6BlE4sj6lr+TFUYgNuSgV/tdEu2Tsg45HB6h9Lb1hcdFEvVzXIyaM0ZA
XaRs1dodlD/GqhcW545Q70FGf/tWEttbWYEHCkbgZnCFfOgWEj1nbEozK0cg
6uTjln51EtPAxDCUNQLmiy/5Wq0mUbFY2cB4qQA0POIEm4Sp+q7vJPJuCKAp
Wp1YUjKHfgP5r27cFYBHW1lMPTUfF9Kez9MLFMAR3aeXg/PnUFbjRFFWhABc
uzIieFnU/AyoNUxNE8AJl44ej/g5NN75zSyuVwDnOu/k3rszh09ev7YJNB8F
r9uv3jN15nDDVQdPC9UxOBLnXn2WMYvMsWdWEl/GoVq2pGn79hk0ZjnfCnOb
gIbjbr5BsdR7iMlQU1CYgssXouU/TEwgu9D+TmnyNOS2ebMvXPiDmjJNq/ad
noUobj7D5fMYisPYmXbBHPxWe+RzcssoGg5b/1GypBGHWbfaPkSNYPO3c0LW
6kLES4ulduYr+JgVWHRKcUyIuBScNTAcwkUHUY/Oqqp5xPxe2aD7bUN41v1m
lmS0MHH7RO3lGB82ajmqVZmeESF2hZzq8rXqx2pZdQkPPVEixdP/j+HGXvyc
4hujLjyfCNJs7tY8yMSbQqqHK3/NJ0a3lPWddOxG8fYbB10yFxCEGYdh/LET
WW/XhL/wFiPUsxmEuf9vDFdZLpJjuZDYX+amcDm+DRnRDiVnFMUJb5xKOK/Z
gtbhtlWSfeKEiPipadGJJpzY/2byRb4EMbP6YVhicQP2sPZ6fguQJCw0vj+W
H6jDuN3a8j/OLCIkl/4a/SJTi8n3PWQcNaQIsWsLmNuFqzHA8qyJ8JgU8TKo
W89vWyVS4+p9wI/FBGNlUnKLRxlGboxJ/mEiTdR8r9KZWF2CPgXBkSY50sTL
+wsHHBuK8JC85ZvydTLEstvJ0ioV31DfpeSkzAMZ4uCNsHJ52a/4YqX9usox
GYJWIRzs8DUf1xX+99TspCxRUBy5poj5GRka31Tr8mUJV+cI+Y5jOeggEKkt
U6UTrpF60YuaPqL9hxHFB4/pxEvDtQT3UyZe8j06YxxKJ+w036hwUzLR42jm
T8kndIJW9w935E0mBo55hDCeUvuXX5eZH56JKXqT08+e0wniSbaXtWsmTn4l
m94m0omaCFv33I2ZyKiTDC4qoROKmx91mLzIwOjXl538y6j12ozrRU8z8PXV
qn0HK+hE2jW7z0RIBn6UY0xVVNEJhtRS2H8rA9ut6U71jdT+sQbJ6yczULln
+b7uHsp+sevOD5dl4KbMGwrxLDpR4Jg8b7d0Bu643zZ5vo9it1ENwYIMNFV+
njbAphPS65O3Of9JR/eLigp8PmX/hU/Dvk3p6L3r7mS6gLp/u+3okap0vL+o
u+HqGHU+a4nvuuJ0jEx9/WhigvI/s0i9ISsd4+6IOOZOUfZmFB34kJyOiUfO
7/Weofy3ZXWFvknHTKXiVXvmKPu5iTMez9MxX7BhkiSp/+2NjbCNSMf/AYV+
MQo=
       "]]},
     Annotation[#, "Charting`Private`Tag$516801#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {-1.9999998567922717`, 2.188641281437898}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.761393838558024*^9, 3.761393916596751*^9, {3.7613943377778587`*^9, 
   3.7613943526985197`*^9}, 3.7613952094625196`*^9, 3.7615836080342493`*^9, 
   3.765017357642367*^9}]
}, Open  ]],

Cell["The phase shift is", "Text",
 CellChangeTimes->{{3.76139399760007*^9, 3.7613939997680073`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]", "[", 
   RowBox[{"s_", ",", "\[Xi]_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Arg", "[", 
   RowBox[{"Hypergeometric1F1", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Xi]"}], "-", 
      SqrtBox["s"]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"2", "\[ImaginaryI]", " ", "\[Xi]"}]}], ",", "z"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.761394002612131*^9, 3.761394033158424*^9}, {
   3.761394155546323*^9, 3.761394194815465*^9}, {3.7613943016140537`*^9, 
   3.761394307826692*^9}, 3.7613985042752657`*^9}],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]]],
 " is the center of mass momentum ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"2", "\[Mu]", " ", "\[CapitalEpsilon]"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{"2", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"d", "/", "a"}]], 
     SqrtBox[
      RowBox[{"|", "s", "|"}]]}]}], TraditionalForm]]],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "=", 
    RowBox[{"2", "\[Mu]", " ", 
     SuperscriptBox["a", "2"], 
     SubscriptBox["D", "e"]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.761398357244522*^9, 3.761398380495308*^9}, {
  3.761398416273617*^9, 3.761398419921674*^9}, {3.761398458488357*^9, 
  3.761398493887958*^9}, {3.761399603547326*^9, 3.761399651670967*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]", "[", 
   RowBox[{"De_", ",", "\[CapitalEpsilon]_"}], "]"}], ":=", 
  RowBox[{"Arg", "[", 
   RowBox[{"Hypergeometric1F1", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox["\[CapitalEpsilon]"]}], "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "De"}]]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"2", "\[ImaginaryI]", " ", 
       SqrtBox["\[CapitalEpsilon]"]}]}], ",", 
     RowBox[{"2", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"re", "/", "a"}]], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "De"}]]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761398517540254*^9, 3.761398632238195*^9}, {
  3.76139869512315*^9, 3.7613987079304943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Tan", "[", 
      RowBox[{"\[Delta]", "[", 
       RowBox[{"1", ",", "\[CapitalEpsilon]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalEpsilon]", ",", "0.01", ",", "2.0"}], "}"}]}], "]"}], 
   ",", "KK", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761398636868767*^9, 3.761398669465455*^9}, 
   3.761399514294035*^9, {3.761399979358068*^9, 3.7614000555278587`*^9}, 
   3.761400093056596*^9, 3.761647096397788*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA+ikbu+Z6hD83d6ij5JnYv/gcNpPj
uoU/V1pUpgFk2b/2D1Fr4PqGP3IuQg+GKdq/8vWGG9p6iT/BZquLWajbv+vB
8nvNeo4/kdQ5Vr993r/uLGUeWj2UP0T0ZTm32uG/4MQ830A9nj/3wLdEIo7m
v18+Sks/3Z4/AQTd3r3V5r/et1e3PX2fP+fy8cUMHee/blW5R51eoD9hjNub
1Krnv2xI1B+anqE/KOSghHPD6L9oLgrQkx6kP4+jACyw6+q/Yfp1MIceqT+t
WKyIBynvvz5kNABBdak/HqFPaTly778czvLP+supP+M02GZru++/2KFvb255
qj+kXARy6ybwv05Jaa5V1Ks/i6vF93258L88mFwsJIquP2oluZXx3/G/C5sh
lOD6sT98p/7/BTf0v/rPAHw9JrI/U75iSRhd9L/oBOBjmlGyP1XVsSZBg/S/
xm6eM1Sosj8gOaX02M/0v4JCG9PHVbM/JfLPGzFq9b/46RQSr7C0P4BnCd4D
pPa/5jgIkH1mtz8uck3/KzD5vygThdT6jrc/BKHm4GJX+b9p7QEZeLe3P58J
gWW9fvm/7KH7oXIIuD88klBE3835v/MK77Nnqrg/8yev8ONt+r/bAzVa57W4
Pyaw0QeEefq/LEgFDg==
           "]], 
          LineBox[CompressedData["
1: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
OA7HLcnH+UkY/A+bXdJJ
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$516840#1"]& ], {}}, {{}, {}, {}}}, {}, {}}, \
{{}, {{{}, {}, 
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]], 
          LineBox[CompressedData["
1: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
D8uixK0=
           "]], 
          LineBox[CompressedData["
1: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
/wBfYpTc
           "]], 
          LineBox[{{0.3216963009468771, -5.}, {0.321709820819442, 5.}}], 
          LineBox[{{0.8191498201750974, 5.}, {0.819652641917348, -5.}}]}, 
         Annotation[#, {{Legended}, 
           Charting`Private`Tag$516571, {}}]& ]}}, {}, {}, {{}, {}}}}, {
    PlotRange -> {-5, 5}, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 2.}, {-1.6546669297631609`, 5.248208735030479}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"2-channel\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "True", "}"}], ",", 
                 RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.761398670255712*^9, {3.7613987022830553`*^9, 3.761398711030559*^9}, 
   3.761399515183792*^9, {3.761399980169524*^9, 3.761400056217847*^9}, 
   3.761400093921035*^9, 3.76158360830202*^9, 3.761647098382987*^9, 
   3.7650173578602667`*^9}]
}, Open  ]],

Cell["\<\
Okay!  That looks right.  So it looks like there is a minus sign issue with K \
but otherwise the single-channel result agrees with the analytical expression \
given by Deloff.\
\>", "Text",
 CellChangeTimes->{{3.761400110115052*^9, 3.761400158676721*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["3-channel calculation", "Subsection",
 CellChangeTimes->{{3.761408795056534*^9, 3.76140880015909*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nchan", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eth", "=", 
   RowBox[{"{", 
    RowBox[{"0.0", ",", "3.0", ",", "5.0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"re", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmin", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmax", "=", "12.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D11", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D22", "=", "4.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D33", "=", "6.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V12", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V23", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r12", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r23", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a12", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a23", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"no", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Erange", "=", 
   RowBox[{"Which", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"no", "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", "0.001"}], ",", 
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", "0.001"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"no", "\[Equal]", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", "0.001"}], ",", 
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", "0.001"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"no", "\[Equal]", "3"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", "0.001"}], ",", 
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", "10.0"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VV", "[", "r_", "]"}], "=", 
   RowBox[{"Vmat", "[", 
    RowBox[{
    "r", ",", "a", ",", "re", ",", "D11", ",", "D22", ",", "D33", ",", "V12", 
     ",", "V23", ",", "r12", ",", "r23", ",", "a12", ",", "a23", ",", "Eth"}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7609228437046957`*^9, 3.760922954523758*^9}, {
   3.760923510476204*^9, 3.76092352261665*^9}, {3.760923767870668*^9, 
   3.7609237739073277`*^9}, {3.760924015373334*^9, 3.760924095120471*^9}, {
   3.760924338419701*^9, 3.7609243562934227`*^9}, {3.760924433016068*^9, 
   3.7609244331482983`*^9}, {3.760960005262362*^9, 3.7609600095710707`*^9}, {
   3.760960053078266*^9, 3.7609600566509123`*^9}, {3.760960171624714*^9, 
   3.7609602069138536`*^9}, {3.7609602449926987`*^9, 3.760960288931018*^9}, {
   3.7609603924913387`*^9, 3.760960442872386*^9}, 3.76096159424107*^9, 
   3.7609619272266607`*^9, {3.7609619846014013`*^9, 3.760961997800658*^9}, {
   3.760962226437891*^9, 3.7609622301546087`*^9}, {3.760967945183846*^9, 
   3.760967951237352*^9}, {3.761044617686099*^9, 3.7610446209883423`*^9}, {
   3.761045394541411*^9, 3.761045394936282*^9}, {3.7610454435918493`*^9, 
   3.761045474809362*^9}, {3.761045507543765*^9, 3.7610455339753304`*^9}, {
   3.761045635420673*^9, 3.7610456364182*^9}, 3.7610456771677732`*^9, {
   3.761045713646616*^9, 3.7610457173193808`*^9}, {3.761047134593875*^9, 
   3.761047319523312*^9}, 3.761047406017967*^9, {3.761047441551046*^9, 
   3.761047497038887*^9}, {3.761047554989463*^9, 3.761047688981134*^9}, {
   3.7610510947231627`*^9, 3.761051104357847*^9}, {3.761055355184572*^9, 
   3.7610553554729853`*^9}, {3.761066124893503*^9, 3.761066199809403*^9}, {
   3.761066249668964*^9, 3.761066350046693*^9}, {3.761066410336895*^9, 
   3.7610664307678003`*^9}, {3.761066464582169*^9, 3.761066528383272*^9}, {
   3.761066578313652*^9, 3.76106661953433*^9}, {3.761066889392127*^9, 
   3.761066989250085*^9}, {3.761067139863327*^9, 3.76106714342328*^9}, {
   3.76106719488444*^9, 3.761067211458041*^9}, {3.761067261155138*^9, 
   3.761067274389201*^9}, {3.7610673349939537`*^9, 3.7610673395688667`*^9}, {
   3.761067440924411*^9, 3.7610674722489223`*^9}, 3.7610676020838137`*^9, {
   3.761067773813036*^9, 3.761067797907992*^9}, {3.761068530037965*^9, 
   3.7610685301920147`*^9}, 3.761068901438217*^9, {3.7610706397901087`*^9, 
   3.761070644709283*^9}, {3.761071382996406*^9, 3.7610714067508173`*^9}, 
   3.76107144921484*^9, {3.761071499672139*^9, 3.7610715411898727`*^9}, {
   3.761071784634557*^9, 3.761071807732604*^9}, {3.7610718487775803`*^9, 
   3.761071916078163*^9}, {3.761073996539894*^9, 3.7610740161131907`*^9}, {
   3.761074129279373*^9, 3.761074139065275*^9}, {3.7610744346577263`*^9, 
   3.761074502020956*^9}, 3.761074562050506*^9, {3.761074691500236*^9, 
   3.761074692353491*^9}, {3.761075230526132*^9, 3.7610752534405403`*^9}, 
   3.761146672312395*^9, {3.761146769593961*^9, 3.761146775289312*^9}, {
   3.7611468419971027`*^9, 3.7611468499276247`*^9}, {3.7611470625368156`*^9, 
   3.761147107403783*^9}, {3.761147141321892*^9, 3.761147152391823*^9}, {
   3.7612563347856197`*^9, 3.761256390903137*^9}, {3.761256676531374*^9, 
   3.7612566785294857`*^9}, {3.76125714530925*^9, 3.761257192258934*^9}, {
   3.7612572721947412`*^9, 3.7612572992092533`*^9}, {3.7612573797408524`*^9, 
   3.761257418290296*^9}, {3.761257485856736*^9, 3.761257593487936*^9}, {
   3.7612580097466097`*^9, 3.7612580270660686`*^9}, {3.761258224809104*^9, 
   3.761258225454126*^9}, {3.761258984216539*^9, 3.7612589878949003`*^9}, 
   3.761259021852091*^9, {3.761260669562849*^9, 3.761260679411467*^9}, {
   3.7612607324203873`*^9, 3.761260732787671*^9}, {3.761260814169573*^9, 
   3.7612609267313833`*^9}, {3.761260968673114*^9, 3.761261069771529*^9}, {
   3.761261123954101*^9, 3.7612611371326923`*^9}, {3.761261310552764*^9, 
   3.7612613777021837`*^9}, {3.7612617454374113`*^9, 3.761261747151641*^9}, {
   3.761304312318675*^9, 3.761304314383068*^9}, {3.761313996434215*^9, 
   3.761314012157959*^9}, {3.761317341717526*^9, 3.7613173494794703`*^9}, {
   3.7613174017951527`*^9, 3.7613174198831*^9}, 3.761317478106018*^9, {
   3.761322125113968*^9, 3.7613221744237413`*^9}, {3.7613226212741137`*^9, 
   3.761322631916502*^9}, {3.761340016466696*^9, 3.761340017029152*^9}, {
   3.7613404708394947`*^9, 3.761340472754177*^9}, 3.761340605880921*^9, {
   3.761340820952648*^9, 3.76134082626932*^9}, {3.7613997252832613`*^9, 
   3.761399736608026*^9}, {3.7613999037239*^9, 3.761399907451457*^9}, {
   3.7614002021008043`*^9, 3.761400202313806*^9}, {3.76140884780127*^9, 
   3.761408847976502*^9}, {3.761432709932028*^9, 3.761432724745205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"VV", "[", "x", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.761314045902574*^9, 3.76131405014312*^9}, {
  3.76131748485717*^9, 3.761317499335697*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"1", "-", "x"}]]}], ")"}], "2"]}]}], 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5`"}], "+", "x"}], ")"}], "2"]}]]}], "0"},
     {
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5`"}], "+", "x"}], ")"}], "2"]}]]}], 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"1", "-", "x"}]]}], ")"}], "2"]}]}], 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]}]]}]},
     {"0", 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]}]]}], 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"1", "-", "x"}]]}], ")"}], "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.761314046721326*^9, 3.761314050581044*^9}, {
   3.761317486023528*^9, 3.761317499946307*^9}, 3.761322179053207*^9, 
   3.761322634490501*^9, 3.761340020729356*^9, 3.761340477665658*^9, 
   3.761340613295834*^9, 3.7613408285164633`*^9, 3.761387522049223*^9, 
   3.761399739593504*^9, 3.761399909686982*^9, 3.761400205209141*^9, 
   3.761408856181148*^9, 3.761425763793006*^9, 3.761432677728671*^9, 
   3.76143273167453*^9, 3.761583608448401*^9, 3.761647111006783*^9, 
   3.765017358109947*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"diagsc", "=", 
   RowBox[{"Setupdiagsc", "[", 
    RowBox[{"\[CapitalEpsilon]", ",", "no", ",", "Eth", ",", "r"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.761146848134117*^9, {3.761256736882002*^9, 3.761256740031952*^9}, {
   3.761261484192378*^9, 3.761261487999625*^9}, {3.761261597174334*^9, 
   3.7612616033454227`*^9}, {3.761432735881706*^9, 3.761432737015966*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Etest", "=", 
   RowBox[{
    RowBox[{"Erange", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", "0.01"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equations", "=", 
   RowBox[{"alleqs", "[", 
    RowBox[{
    "Etest", ",", "r", ",", "rmin", ",", "rmax", ",", "Eth", ",", "Nchan", 
     ",", "u", ",", 
     RowBox[{"VV", "[", "r", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.761070650092381*^9, 3.761070685087882*^9}, {
   3.761070720801444*^9, 3.761070830868566*^9}, {3.761070874511541*^9, 
   3.7610709129980793`*^9}, {3.761071570720522*^9, 3.7610715740998363`*^9}, {
   3.761071933766266*^9, 3.761071939420554*^9}, {3.761073769937189*^9, 
   3.761073778599737*^9}, {3.761073900224963*^9, 3.7610739125914173`*^9}, {
   3.761074190371353*^9, 3.761074207726942*^9}, {3.761074776994636*^9, 
   3.761074845077333*^9}, {3.7610750459710073`*^9, 3.761075048977317*^9}, {
   3.761075152576613*^9, 3.761075153023102*^9}, {3.761146680522307*^9, 
   3.761146686622674*^9}, {3.761261621842141*^9, 3.7612616222549686`*^9}, 
   3.761261673949877*^9, 3.761261755979439*^9, {3.76131762031826*^9, 
   3.761317621992709*^9}, {3.761322191194325*^9, 3.7613221974577837`*^9}, 
   3.761340043740425*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"umat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"i", ",", "j"}]], "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Nchan"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "Nchan"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.7612618822742157`*^9, 3.761261884556917*^9}, {
   3.761261918053022*^9, 3.761261948788476*^9}, 3.761340038879084*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"equations", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"umat", "\[Transpose]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", "\"\<Automatic\>\"", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761262048127275*^9, 3.761262062353963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"1", ",", "1"}]], "[", "r", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AwFHH5BXdvqm+gdgd
Csk/Q739WPQ4yT8vlAOEtBfaP2qJeVMJedo/j/RD6Ati4z9mYFn/D4LjP8yH
F2FrmOk/jOTgE6gT6T+j2m5OyyrwP508xkhAFe4/ZlmCWdBP8z9JKhp9WMbw
P0YlD0Y7uPY/c2Dypnjx8T+JpeQbvRD6PwwDp0zzYvI/0o3qXq4v/T+Jz+KC
ujnyP5zhtMECSQBAI6WVdT6C8T9SsIwKZt0BQHj/V++0avA/OdkIyNRpA0DJ
hWGZ5w7uP6+oQXb2FwVAMeTd4Cp/6j8orBLbT6kGQNbw9dpzyeY/MFagMFxc
CEDajl8T8nbiP2pa0vpzBwpAgBd6YhoH3D+mkpx7w5ULQB44/J16fdM/cXEj
7cVFDUBlOj0ZsSrEPz+EQhUA2Q5AEm3P+Mjakz/OHg+X9kYQQNT09m7ZscC/
lijP3XIdEUAgz51JkrnRv19M2/+K5RFAOKcNADVq2r9ww0WafL4SQF49ZcGb
4OG/glT8DwqJE0CURDLLqDHmv60SBUCdTxRAelXOeOFh6r8fJGzoCScVQA1z
jA9K4O6/k08fbBLwFUBI2VEC5ILxv07OMGj0yRZAtOF1WZq7878iepQe3J8X
QFWmUV5y4/W/9z9EsF9nGEClSfR5fOD3vxRZUrq8PxlAI/uElXIC+r8yjKyf
tQkaQN+guk+A+vu/aexYP7TPGkA1ui8pd+P9v+efY1eMphtAy0rfJ1Pw/79n
bbpKAG8cQEkYEalZ6gDALo5vtk1IHUADc831/+0BwPfIcP02Ex5AdAZvu7rd
AsDYMMT+JdoeQEWvOOgwxgPAAex1eO6xH0AOtjeGcL8EwJbguWapPSBAjO9Z
Uk6lBcDO9GdNyKogQDpnc2RZmwbAkx8/EeoVIUCzpXLCwokHwFhXvMLZeSFA
405SwUplCMDBuGgwNuYhQK6K+8MiUAnAKye7i2BLIkAekJ3SUSgKwCGsNsSN
riJAXCnrsVD5CsC7WuG4JxojQDNv2uCy2AvAVhYym49+I0BApDyC6aUMwJT7
sTlk6yNA8q1Qp7yADcBf91q1O1YkQDnf2prTUw7AKgCqHuG5JEBG2oZMSRUP
wJkyKETzJSVAD+PFPkvjD8AJckxX04olQCF0EzX3TxDAHdufJiD4JUDHf411
ILQQwL1aHNNvYyZAYb3k3lwUEcBe5z5tjccmQL/Q1os6bBHAop2Qwxc0J0Bl
ZFg2W8kRwOdgiAdwmSdAPIxlGUUeEsAI5Sz5//8nQH8VkB4pchLAOGjHwg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$516994#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-4.611484983009517, 
                    1.1491578096612924`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AwFHH5BXdvqm+gdgd
Csk/Q739WPQ4yT8vlAOEtBfaP2qJeVMJedo/j/RD6Ati4z9mYFn/D4LjP8yH
F2FrmOk/jOTgE6gT6T+j2m5OyyrwP508xkhAFe4/ZlmCWdBP8z9JKhp9WMbw
P0YlD0Y7uPY/c2Dypnjx8T+JpeQbvRD6PwwDp0zzYvI/0o3qXq4v/T+Jz+KC
ujnyP5zhtMECSQBAI6WVdT6C8T9SsIwKZt0BQHj/V++0avA/OdkIyNRpA0DJ
hWGZ5w7uP6+oQXb2FwVAMeTd4Cp/6j8orBLbT6kGQNbw9dpzyeY/MFagMFxc
CEDajl8T8nbiP2pa0vpzBwpAgBd6YhoH3D+mkpx7w5ULQB44/J16fdM/cXEj
7cVFDUBlOj0ZsSrEPz+EQhUA2Q5AEm3P+Mjakz/OHg+X9kYQQNT09m7ZscC/
lijP3XIdEUAgz51JkrnRv19M2/+K5RFAOKcNADVq2r9ww0WafL4SQF49ZcGb
4OG/glT8DwqJE0CURDLLqDHmv60SBUCdTxRAelXOeOFh6r8fJGzoCScVQA1z
jA9K4O6/k08fbBLwFUBI2VEC5ILxv07OMGj0yRZAtOF1WZq7878iepQe3J8X
QFWmUV5y4/W/9z9EsF9nGEClSfR5fOD3vxRZUrq8PxlAI/uElXIC+r8yjKyf
tQkaQN+guk+A+vu/aexYP7TPGkA1ui8pd+P9v+efY1eMphtAy0rfJ1Pw/79n
bbpKAG8cQEkYEalZ6gDALo5vtk1IHUADc831/+0BwPfIcP02Ex5AdAZvu7rd
AsDYMMT+JdoeQEWvOOgwxgPAAex1eO6xH0AOtjeGcL8EwJbguWapPSBAjO9Z
Uk6lBcDO9GdNyKogQDpnc2RZmwbAkx8/EeoVIUCzpXLCwokHwFhXvMLZeSFA
405SwUplCMDBuGgwNuYhQK6K+8MiUAnAKye7i2BLIkAekJ3SUSgKwCGsNsSN
riJAXCnrsVD5CsC7WuG4JxojQDNv2uCy2AvAVhYym49+I0BApDyC6aUMwJT7
sTlk6yNA8q1Qp7yADcBf91q1O1YkQDnf2prTUw7AKgCqHuG5JEBG2oZMSRUP
wJkyKETzJSVAD+PFPkvjD8AJckxX04olQCF0EzX3TxDAHdufJiD4JUDHf411
ILQQwL1aHNNvYyZAYb3k3lwUEcBe5z5tjccmQL/Q1os6bBHAop2Qwxc0J0Bl
ZFg2W8kRwOdgiAdwmSdAPIxlGUUeEsAI5Sz5//8nQH8VkB4pchLAOGjHwg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$516994#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-4.611484983009517, 
                    1.1491578096612924`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"2", ",", "1"}]], "[", "r", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz7gM2krxz8fv6m+gdgd
Csk/KuC+McSAi78vlAOEtBfaP5Zut0xW5p2/j/RD6Ati4z++ZlnN9s+lv8yH
F2FrmOk/CRa4VLtMqr+j2m5OyyrwP6tiOxEf+Ku/ZlmCWdBP8z8CBHaClQer
v0YlD0Y7uPY/CyDcg99WqL+JpeQbvRD6P6n5GZ9T56S/0o3qXq4v/T9+d4NT
Eoehv5zhtMECSQBA6c85fqsWnL9SsIwKZt0BQIXwJV3bTJa/OdkIyNRpA0By
RJ7KynSRv6+oQXb2FwVA0ShUKB1Oir8orBLbT6kGQJesHhSn7YO/MFagMFxc
CECumjNdMyV9v2pa0vpzBwpA6eD21bo4db+mkpx7w5ULQGXJgaubV2+/cXEj
7cVFDUD+R7IccGlmvz+EQhUA2Q5Atn8K71ZOYL/OHg+X9kYQQO7Me16BAFe/
lijP3XIdEUBjztX0aURQv19M2/+K5RFAgMWEN6B8R79ww0WafL4SQOTi58kA
dUC/glT8DwqJE0DfSGuh8ZE3v60SBUCdTxRAw4YZTkr3ML8fJGzoCScVQBqn
pifYuCe/k08fbBLwFUBy7R8zBPggv07OMGj0yRZANZLpe0aVF78iepQe3J8X
QG3RUkEvfBC/9z9EsF9nGEDMOj75xZgHvxRZUrq8PxlAPOs+EuhoAL8yjKyf
tQkaQL4lBdiQX/e+aexYP7TPGkDD/CogycDwvuefY1eMphtAfE7avPZW575n
bbpKAG8cQK6VkhEDp+C+Lo5vtk1IHUAwf1Hj4BjXvvfIcP02Ex5AKryoNato
0L7YMMT+JdoeQIudWtJXdse+Aex1eO6xH0CSoWCI8E3AvpbguWapPSBAgQQh
E2E3t77O9GdNyKogQILQYoyqELC+kx8/EeoVIUAXPr8NxGGmvlhXvMLZeSFA
2x9zDgzyn77BuGgwNuYhQBt59aigKJa+Kye7i2BLIkA9Qh2iYn6PviGsNsSN
riJACXIByseIhr67WuG4JxojQITGSjOTV3++VhYym49+I0AKnDRWlFN2vpT7
sTlk6yNA3lK5oC/obr5f91q1O1YkQG5HLQxJhmW+KgCqHuG5JECzyotKAbFe
vpkyKETzJSVAOoPDppQ5Vb4JckxX04olQGEYYQfD+k2+HdufJiD4JUAKazu8
DGZEvr1aHNNvYyZAlHQnD111O75e5z5tjccmQPD2hEEAVjK+op2Qwxc0J0Bq
ap9wXZ8lvudgiAdwmSdASgwgfryIFL4I5Sz5//8nQHxZfXzxa9W8GzPC4g==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$517038#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.05462739072180985, 0.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz7gM2krxz8fv6m+gdgd
Csk/KuC+McSAi78vlAOEtBfaP5Zut0xW5p2/j/RD6Ati4z++ZlnN9s+lv8yH
F2FrmOk/CRa4VLtMqr+j2m5OyyrwP6tiOxEf+Ku/ZlmCWdBP8z8CBHaClQer
v0YlD0Y7uPY/CyDcg99WqL+JpeQbvRD6P6n5GZ9T56S/0o3qXq4v/T9+d4NT
Eoehv5zhtMECSQBA6c85fqsWnL9SsIwKZt0BQIXwJV3bTJa/OdkIyNRpA0By
RJ7KynSRv6+oQXb2FwVA0ShUKB1Oir8orBLbT6kGQJesHhSn7YO/MFagMFxc
CECumjNdMyV9v2pa0vpzBwpA6eD21bo4db+mkpx7w5ULQGXJgaubV2+/cXEj
7cVFDUD+R7IccGlmvz+EQhUA2Q5Atn8K71ZOYL/OHg+X9kYQQO7Me16BAFe/
lijP3XIdEUBjztX0aURQv19M2/+K5RFAgMWEN6B8R79ww0WafL4SQOTi58kA
dUC/glT8DwqJE0DfSGuh8ZE3v60SBUCdTxRAw4YZTkr3ML8fJGzoCScVQBqn
pifYuCe/k08fbBLwFUBy7R8zBPggv07OMGj0yRZANZLpe0aVF78iepQe3J8X
QG3RUkEvfBC/9z9EsF9nGEDMOj75xZgHvxRZUrq8PxlAPOs+EuhoAL8yjKyf
tQkaQL4lBdiQX/e+aexYP7TPGkDD/CogycDwvuefY1eMphtAfE7avPZW575n
bbpKAG8cQK6VkhEDp+C+Lo5vtk1IHUAwf1Hj4BjXvvfIcP02Ex5AKryoNato
0L7YMMT+JdoeQIudWtJXdse+Aex1eO6xH0CSoWCI8E3AvpbguWapPSBAgQQh
E2E3t77O9GdNyKogQILQYoyqELC+kx8/EeoVIUAXPr8NxGGmvlhXvMLZeSFA
2x9zDgzyn77BuGgwNuYhQBt59aigKJa+Kye7i2BLIkA9Qh2iYn6PviGsNsSN
riJACXIByseIhr67WuG4JxojQITGSjOTV3++VhYym49+I0AKnDRWlFN2vpT7
sTlk6yNA3lK5oC/obr5f91q1O1YkQG5HLQxJhmW+KgCqHuG5JECzyotKAbFe
vpkyKETzJSVAOoPDppQ5Vb4JckxX04olQGEYYQfD+k2+HdufJiD4JUAKazu8
DGZEvr1aHNNvYyZAlHQnD111O75e5z5tjccmQPD2hEEAVjK+op2Qwxc0J0Bq
ap9wXZ8lvudgiAdwmSdASgwgfryIFL4I5Sz5//8nQHxZfXzxa9W8GzPC4g==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$517038#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.05462739072180985, 0.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"3", ",", "1"}]], "[", "r", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{
                    2.0338983050847458`*^-7, -0.000023902734129268107`}, {
                    0.19562123366948939`, 0.0008109341310394336}, {
                    0.4076968468855879, 0.001963312601978453}, {
                    0.46736468950168325`, 0.0023353084510510224`}}], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA3C/VbjzR/z8c+YstfyFjP5zhtMEC
SQBAYng3WQjGYT9SsIwKZt0BQAWeIKjZLlo/OdkIyNRpA0AlEL4VIfZSP6+o
QXb2FwVA/X1YV9koSj8orBLbT6kGQE6wE7R3MkI/MFagMFxcCEDYTelXmzI4
P2pa0vpzBwpAiM+iWBwDMD+mkpx7w5ULQFdZMoxwmCU/cXEj7cVFDUAT/6rL
cfIbPz+EQhUA2Q5AxopBfmOAEj/OHg+X9kYQQIJhVya2iQc/lijP3XIdEUBk
6+4zsA7+Pl9M2/+K5RFA1A07ZZS28z5ww0WafL4SQI4o5h714eg+glT8DwqJ
E0DA62/zjCfgPq0SBUCdTxRAu6icEEce1T4fJGzoCScVQLd3RW9Plso+k08f
bBLwFUAsY+U0tT3BPk7OMGj0yRZAjw4D0yeKtT4iepQe3J8XQJkAWGM7Hqs+
9z9EsF9nGECrKrH9t5mhPhRZUrq8PxlAN8AOWGUDlj4yjKyftQkaQBOZqeym
ZIw+aexYP7TPGkDWbfaQ53aCPuefY1eMphtAwdZYjgkmdz5nbbpKAG8cQHSu
96wL720+Lo5vtk1IHUCickwOyKliPvfIcP02Ex5A+fpCbz8CWD7YMMT+Jdoe
QG6C9i/oH08+Aex1eO6xH0BOrALpBXNDPpbguWapPSBAPvUCXwsWOT7O9GdN
yKogQGuK1jDBLi8+kx8/EeoVIUAlDPukv4wjPlhXvMLZeSFAkewOdUJKGT7B
uGgwNuYhQMGpkY6fiA8+Kye7i2BLIkASX95VgEkEPiGsNsSNriJAGU5bkEBW
+j27WuG4JxojQEYeUfBpe/A9VhYym49+I0DtD5YyX0flPZT7sTlk6yNACqZb
LdN42j1f91q1O1YkQIK0sJDEmtA9KgCqHuG5JEBhV15Wq3zFPZkyKETzJSVA
JfhnLwLJuj0JckxX04olQAQ+hDa+NLE9HdufJiD4JUCIEWaeczilPb1aHNNv
YyZAPzGpqWkcmj1e5z5tjccmQLUyeIUZNJA9op2Qwxc0J0DhgLZBXfGBPedg
iAdwmSdAfuJqQm9pcD0I5Sz5//8nQG8ipUcF5DA8bKFb9A==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$517082#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.000023902734129268107`, 
                    0.0023353084510510224`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{
                    2.0338983050847458`*^-7, -0.000023902734129268107`}, {
                    0.19562123366948939`, 0.0008109341310394336}, {
                    0.4076968468855879, 0.001963312601978453}, {
                    0.46736468950168325`, 0.0023353084510510224`}}], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA3C/VbjzR/z8c+YstfyFjP5zhtMEC
SQBAYng3WQjGYT9SsIwKZt0BQAWeIKjZLlo/OdkIyNRpA0AlEL4VIfZSP6+o
QXb2FwVA/X1YV9koSj8orBLbT6kGQE6wE7R3MkI/MFagMFxcCEDYTelXmzI4
P2pa0vpzBwpAiM+iWBwDMD+mkpx7w5ULQFdZMoxwmCU/cXEj7cVFDUAT/6rL
cfIbPz+EQhUA2Q5AxopBfmOAEj/OHg+X9kYQQIJhVya2iQc/lijP3XIdEUBk
6+4zsA7+Pl9M2/+K5RFA1A07ZZS28z5ww0WafL4SQI4o5h714eg+glT8DwqJ
E0DA62/zjCfgPq0SBUCdTxRAu6icEEce1T4fJGzoCScVQLd3RW9Plso+k08f
bBLwFUAsY+U0tT3BPk7OMGj0yRZAjw4D0yeKtT4iepQe3J8XQJkAWGM7Hqs+
9z9EsF9nGECrKrH9t5mhPhRZUrq8PxlAN8AOWGUDlj4yjKyftQkaQBOZqeym
ZIw+aexYP7TPGkDWbfaQ53aCPuefY1eMphtAwdZYjgkmdz5nbbpKAG8cQHSu
96wL720+Lo5vtk1IHUCickwOyKliPvfIcP02Ex5A+fpCbz8CWD7YMMT+Jdoe
QG6C9i/oH08+Aex1eO6xH0BOrALpBXNDPpbguWapPSBAPvUCXwsWOT7O9GdN
yKogQGuK1jDBLi8+kx8/EeoVIUAlDPukv4wjPlhXvMLZeSFAkewOdUJKGT7B
uGgwNuYhQMGpkY6fiA8+Kye7i2BLIkASX95VgEkEPiGsNsSNriJAGU5bkEBW
+j27WuG4JxojQEYeUfBpe/A9VhYym49+I0DtD5YyX0flPZT7sTlk6yNACqZb
LdN42j1f91q1O1YkQIK0sJDEmtA9KgCqHuG5JEBhV15Wq3zFPZkyKETzJSVA
JfhnLwLJuj0JckxX04olQAQ+hDa+NLE9HdufJiD4JUCIEWaeczilPb1aHNNv
YyZAPzGpqWkcmj1e5z5tjccmQLUyeIUZNJA9op2Qwxc0J0DhgLZBXfGBPedg
iAdwmSdAfuJqQm9pcD0I5Sz5//8nQG8ipUcF5DA8bKFb9A==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$517082#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.000023902734129268107`, 
                    0.0023353084510510224`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7612620529233637`*^9, 3.761262062828302*^9}, 
   3.7613005949601*^9, 3.761317634484481*^9, 3.761322206183511*^9, 
   3.7613226398360243`*^9, 3.761340055505039*^9, 3.7613406190771217`*^9, 
   3.761340832451139*^9, 3.7613875260713177`*^9, 3.7613997443878098`*^9, 
   3.761399913554823*^9, 3.761400214944291*^9, 3.7614088704049892`*^9, 
   3.761425769350232*^9, 3.76143274572293*^9, 3.761583609259955*^9, 
   3.761647115696498*^9, 3.76501735875278*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sols", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"equations", "[", 
         RowBox[{"[", "\[Alpha]", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"umat", "\[Transpose]"}], "[", 
         RowBox[{"[", "\[Alpha]", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", "\"\<Automatic\>\"", "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "1", ",", "Nchan"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"Etest", "-", 
       RowBox[{"Eth", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "no"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.761075047418874*^9, {3.761075525579275*^9, 3.761075536049959*^9}, {
   3.761261791755274*^9, 3.761261796377631*^9}, {3.761261990551571*^9, 
   3.7612619909241123`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uopen", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"umat", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "\[Alpha]"}], "]"}], "]"}], "/.", "sols"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "no"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1", ",", "no"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.7610708282601767`*^9, {3.7610709285799294`*^9, 3.761070958541772*^9}, 
   3.7610710084887743`*^9, {3.761300618970706*^9, 3.761300619681191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uopen", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.761300636449172*^9, 3.76130064528083*^9}, {
  3.761322214364195*^9, 3.761322214615054*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AwFHH5BXdvqm+gdgd
Csk/Q739WPQ4yT8vlAOEtBfaP2qJeVMJedo/j/RD6Ati4z9mYFn/D4LjP8yH
F2FrmOk/jOTgE6gT6T+j2m5OyyrwP508xkhAFe4/ZlmCWdBP8z9JKhp9WMbw
P0YlD0Y7uPY/c2Dypnjx8T+JpeQbvRD6PwwDp0zzYvI/0o3qXq4v/T+Jz+KC
ujnyP5zhtMECSQBAI6WVdT6C8T9SsIwKZt0BQHj/V++0avA/OdkIyNRpA0DJ
hWGZ5w7uP6+oQXb2FwVAMeTd4Cp/6j8orBLbT6kGQNbw9dpzyeY/MFagMFxc
CEDajl8T8nbiP2pa0vpzBwpAgBd6YhoH3D+mkpx7w5ULQB44/J16fdM/cXEj
7cVFDUBlOj0ZsSrEPz+EQhUA2Q5AEm3P+Mjakz/OHg+X9kYQQNT09m7ZscC/
lijP3XIdEUAgz51JkrnRv19M2/+K5RFAOKcNADVq2r9ww0WafL4SQF49ZcGb
4OG/glT8DwqJE0CURDLLqDHmv60SBUCdTxRAelXOeOFh6r8fJGzoCScVQA1z
jA9K4O6/k08fbBLwFUBI2VEC5ILxv07OMGj0yRZAtOF1WZq7878iepQe3J8X
QFWmUV5y4/W/9z9EsF9nGEClSfR5fOD3vxRZUrq8PxlAI/uElXIC+r8yjKyf
tQkaQN+guk+A+vu/aexYP7TPGkA1ui8pd+P9v+efY1eMphtAy0rfJ1Pw/79n
bbpKAG8cQEkYEalZ6gDALo5vtk1IHUADc831/+0BwPfIcP02Ex5AdAZvu7rd
AsDYMMT+JdoeQEWvOOgwxgPAAex1eO6xH0AOtjeGcL8EwJbguWapPSBAjO9Z
Uk6lBcDO9GdNyKogQDpnc2RZmwbAkx8/EeoVIUCzpXLCwokHwFhXvMLZeSFA
405SwUplCMDBuGgwNuYhQK6K+8MiUAnAKye7i2BLIkAekJ3SUSgKwCGsNsSN
riJAXCnrsVD5CsC7WuG4JxojQDNv2uCy2AvAVhYym49+I0BApDyC6aUMwJT7
sTlk6yNA8q1Qp7yADcBf91q1O1YkQDnf2prTUw7AKgCqHuG5JEBG2oZMSRUP
wJkyKETzJSVAD+PFPkvjD8AJckxX04olQCF0EzX3TxDAHdufJiD4JUDHf411
ILQQwL1aHNNvYyZAYb3k3lwUEcBe5z5tjccmQL/Q1os6bBHAop2Qwxc0J0Bl
ZFg2W8kRwOdgiAdwmSdAPIxlGUUeEsAI5Sz5//8nQH8VkB4pchLAOGjHwg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$517337#1"]& ]}}, {}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][
                    #]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 12.}, {-4.611484983009517, 
                   1.1491578096612924`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AwFHH5BXdvqm+gdgd
Csk/Q739WPQ4yT8vlAOEtBfaP2qJeVMJedo/j/RD6Ati4z9mYFn/D4LjP8yH
F2FrmOk/jOTgE6gT6T+j2m5OyyrwP508xkhAFe4/ZlmCWdBP8z9JKhp9WMbw
P0YlD0Y7uPY/c2Dypnjx8T+JpeQbvRD6PwwDp0zzYvI/0o3qXq4v/T+Jz+KC
ujnyP5zhtMECSQBAI6WVdT6C8T9SsIwKZt0BQHj/V++0avA/OdkIyNRpA0DJ
hWGZ5w7uP6+oQXb2FwVAMeTd4Cp/6j8orBLbT6kGQNbw9dpzyeY/MFagMFxc
CEDajl8T8nbiP2pa0vpzBwpAgBd6YhoH3D+mkpx7w5ULQB44/J16fdM/cXEj
7cVFDUBlOj0ZsSrEPz+EQhUA2Q5AEm3P+Mjakz/OHg+X9kYQQNT09m7ZscC/
lijP3XIdEUAgz51JkrnRv19M2/+K5RFAOKcNADVq2r9ww0WafL4SQF49ZcGb
4OG/glT8DwqJE0CURDLLqDHmv60SBUCdTxRAelXOeOFh6r8fJGzoCScVQA1z
jA9K4O6/k08fbBLwFUBI2VEC5ILxv07OMGj0yRZAtOF1WZq7878iepQe3J8X
QFWmUV5y4/W/9z9EsF9nGEClSfR5fOD3vxRZUrq8PxlAI/uElXIC+r8yjKyf
tQkaQN+guk+A+vu/aexYP7TPGkA1ui8pd+P9v+efY1eMphtAy0rfJ1Pw/79n
bbpKAG8cQEkYEalZ6gDALo5vtk1IHUADc831/+0BwPfIcP02Ex5AdAZvu7rd
AsDYMMT+JdoeQEWvOOgwxgPAAex1eO6xH0AOtjeGcL8EwJbguWapPSBAjO9Z
Uk6lBcDO9GdNyKogQDpnc2RZmwbAkx8/EeoVIUCzpXLCwokHwFhXvMLZeSFA
405SwUplCMDBuGgwNuYhQK6K+8MiUAnAKye7i2BLIkAekJ3SUSgKwCGsNsSN
riJAXCnrsVD5CsC7WuG4JxojQDNv2uCy2AvAVhYym49+I0BApDyC6aUMwJT7
sTlk6yNA8q1Qp7yADcBf91q1O1YkQDnf2prTUw7AKgCqHuG5JEBG2oZMSRUP
wJkyKETzJSVAD+PFPkvjD8AJckxX04olQCF0EzX3TxDAHdufJiD4JUDHf411
ILQQwL1aHNNvYyZAYb3k3lwUEcBe5z5tjccmQL/Q1os6bBHAop2Qwxc0J0Bl
ZFg2W8kRwOdgiAdwmSdAPIxlGUUeEsAI5Sz5//8nQH8VkB4pchLAOGjHwg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$517337#1"]& ]}}, {}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 12.}, {-4.611484983009517, 
                   1.1491578096612924`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "[", "r", "]"}], "}"}]], "Output",
 CellChangeTimes->{{3.761300639714328*^9, 3.7613006458002872`*^9}, 
   3.7613176517897263`*^9, {3.7613222116686287`*^9, 3.761322214924917*^9}, 
   3.761322642407096*^9, 3.7613400792963142`*^9, 3.761340626445883*^9, 
   3.761340837719376*^9, 3.761387529124857*^9, 3.761399747786578*^9, 
   3.761399917456668*^9, 3.761400220715892*^9, 3.761408887386524*^9, 
   3.7614257799200487`*^9, 3.761432767509755*^9, 3.761583610297454*^9, 
   3.7616471186010237`*^9, 3.76501735950847*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Kmatrix", "[", 
  RowBox[{
  "Eth", ",", "Nchan", ",", "no", ",", "r", ",", "rmin", ",", "rmax", ",", 
   RowBox[{"VV", "[", "r", "]"}], ",", "Etest"}], "]"}]], "Input",
 CellChangeTimes->{{3.761068780234721*^9, 3.7610688000914297`*^9}, {
   3.761068861968066*^9, 3.761068883047351*^9}, {3.761068987300913*^9, 
   3.761069002067769*^9}, {3.7610711840533113`*^9, 3.761071199973184*^9}, {
   3.761072088467593*^9, 3.761072117761581*^9}, 3.761072279184969*^9, {
   3.7613043684770117`*^9, 3.761304374937899*^9}, 3.761304812612009*^9, {
   3.761317709955867*^9, 3.761317712134314*^9}, {3.7613178087227383`*^9, 
   3.761317847155615*^9}, {3.761387038165929*^9, 3.761387038817782*^9}, {
   3.761425800197124*^9, 3.761425803321376*^9}, {3.761425838490498*^9, 
   3.7614258387771263`*^9}, 3.761425930963727*^9, {3.761425972312804*^9, 
   3.761425989170802*^9}, {3.761426064229761*^9, 3.761426071137775*^9}, 
   3.7614328723992443`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"-", "0.40354820272399056`"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0.7199105807262947`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.694066823698071`", " ", "\[ImaginaryI]"}]}], "}"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.761432785328528*^9, 3.76143287469094*^9, 
  3.761583611258391*^9, 3.761647120202957*^9, 3.7650173602061*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]", "[", 
   RowBox[{"De_", ",", "\[CapitalEpsilon]_"}], "]"}], ":=", 
  RowBox[{"Arg", "[", 
   RowBox[{"Hypergeometric1F1", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox["\[CapitalEpsilon]"]}], "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "De"}]]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"2", "\[ImaginaryI]", " ", 
       SqrtBox["\[CapitalEpsilon]"]}]}], ",", 
     RowBox[{"2", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"re", "/", "a"}]], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "De"}]]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.761400295105589*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Etest", ",", 
       RowBox[{"Kmatrix", "[", 
        RowBox[{
        "Eth", ",", "Nchan", ",", "no", ",", "r", ",", "rmin", ",", "rmax", 
         ",", 
         RowBox[{"VV", "[", "r", "]"}], ",", "Etest"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Etest", ",", 
       RowBox[{"Erange", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Erange", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "0.002"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.761317863727027*^9, 3.761317901493277*^9}, {
   3.761317976264312*^9, 3.761318010869542*^9}, {3.761318044109271*^9, 
   3.7613180506247597`*^9}, {3.761318113787437*^9, 3.761318114507063*^9}, {
   3.761318277458818*^9, 3.7613182812957163`*^9}, {3.7613187398222923`*^9, 
   3.7613187399466743`*^9}, 3.761341203705628*^9, {3.761387081750327*^9, 
   3.7613871110522623`*^9}, {3.761432910125739*^9, 3.7614329104938107`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndsz",
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"3.851859888774472`*^-34\\\"}]\\), step size is \
effectively zero; singularity or stiff system suspected.\"",2,172,1,
   17568315184908849490,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.761432968979808*^9, 3.761583675769135*^9, 
  3.761647187236171*^9, 3.7650174231571817`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dat", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.761433992048868*^9, 3.761433993329727*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"-", "0.11790894805234287`"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0.9725762195947838`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.23258438700548822`", " ", "\[ImaginaryI]"}]}], "}"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.761433993815592*^9, 3.7615841598102407`*^9, 
  3.761647768428356*^9, 3.765018016894611*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"K11", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "2", ",", "1", ",", "1", ",", "1"}], "]"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"K12", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"K21", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"K22", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "2", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.761321508248451*^9, 3.761321518198279*^9}, {
   3.761321575175111*^9, 3.761321600875115*^9}, {3.76132176284932*^9, 
   3.7613217629855556`*^9}, {3.761321837107029*^9, 3.761321852495965*^9}, 
   3.761322467912694*^9, {3.7613998200122547`*^9, 3.7613998459201927`*^9}, {
   3.761434009425568*^9, 3.76143400956433*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"K11", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7614340013284616`*^9, 3.761434003479039*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001`", ",", 
   RowBox[{"-", "0.11790894805234287`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.761434004066739*^9, 3.761434011198762*^9}, 
   3.761584159942767*^9, 3.761647769145382*^9, 3.765018016996648*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KK", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Legended", "[", 
     RowBox[{"K11", ",", "\"\<3-channel\>\""}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.761340810115739*^9, {3.7613409203485537`*^9, 3.761340922293057*^9}, {
   3.761341172387801*^9, 3.761341188339198*^9}, {3.7614000665717907`*^9, 
   3.761400072079502*^9}, {3.7614073403024063`*^9, 3.7614073472971487`*^9}, {
   3.7614126008894987`*^9, 3.7614126012812653`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwlVHlYzGkcr+lQU0iRoVJCZWNHu9Fq8FVWSUWH6NkHT0gqng5aN7sRNkcU
oaxIl2hzlIqO7zvTNU02XZ6WQodOlabpzmh/76/3eeaZ/z6/z/dzzd8d6LaX
o6CgsJ/50f9vqdJq590uYLZH0mLPL8Cx0/55Idd9odylXJThLMETM9Ptm46H
wGYvaVzNrCo81mlioZZ2Es4+tgqo2laLqz5tvnIr4Aw8cRa3Ra+ow1cOmhzz
C+chWryuLrfmHVpnig8X3LsIvQar3DttGjBn3rkvrjkRULyhYU7e5Y/4d5HR
04O+kSAwOuTF2dmIDaMsASjTzZY+9G9CPf6Hhaqh0dB490eHXQHN+Ju3gH4R
srri6tC/BWNj2AeL7MSuSrs+4/uKYfeWpDuQ/3vff+ZurThHeeu0pc/vQnLm
UJEmtKHnSpYQhMnldh5m7ehkFW7j1XofMlMMW2KndWC3K2UYD+HmyrY7+jvw
8oH28VTpA5gbwfXSqO1E8wu67yqGE+BMyKkG1cwuLI9fnyWTJ0L3codNSVFf
cD9DnqecDOuNBTcsg7qRW5cQtJqbAtv2eKiNOfXgIyq31kMwqscvlot7cSOV
SzcVogyVlhqqfMUuKq/+I7CqOCbobfyKFxl2lcaPYUOXVb3fzj5cvP2qaNAs
Dbza3SZOv+7DMuaYufx/IDzxvOdrayn6RfachOXp8CjM94JPqhQZMEayJxBW
e/WHXbx+3MKIw0gO6pxAlTcX+jGRYVeX8BR8hzqMRMP9OCCvPdpp8gx6Pm3s
cPSV4a+XqADPIMEy3vbUOxne4LGCwnbLZak+jgP4mYV7Dke9Dwh4BQP4M/sy
YPDSaGW8xSCeJRJGoQwwbW5V10kexBrmesYDKGsaCzmhN4QL6qnhmRDln2fa
FTmEh3zpAS9gAvlZAerDWDhoxlz8At5v93DnnRlGnUlAsF9d6To0PowsmjgL
zCIKdXlHRvD53a8pJY7Z0H6lxOaKbAQ5rGHZcFM/DvYGj6LbZAChyRZanvSN
4gNqX20OeOyvOHEqeAz7qT2eL2FAqmX9UTaGtlT++pcwlm2Q03xkHKOovDtf
gZJjXPMd+Tg2H6cFeQUprXGKeue+oQUreC7kXt8oDJ4mx9DodYyCuaCBb62f
x8ixypg9GMSxN+W9Jt9xPk1/Tx7MS7bhCbK+YzC1IygfDDxvuz2yn0AhvVaW
D73x1+1c6idwxmSAIcq+blH8LwqEpTdaAPpv+ZWSMAXCwp1EUJfl/LSsWoEo
sI9A8FrMazBSJA9LHJnEE8jp/8O2IUiRuDDt1T5LQDhntZJApEhGaHuKCKgF
qTxVmcUh9+fSAgpBxyT0oIMfh2xoogcLIfqQ14AOckhfCgUUgoNIf98hXSVy
m6JJhLBBQX7pcKASWcuI5aApAsGCvrwlEiXSMU4HRwQmsbmDSSbK5JqINRhO
n8j40B+mTNg6VorgRYSgemGrMmHnRbsQarYLpc72KoStn3shNHP+NQ19rEIm
56EQVNMCVlbPUCVs3eoKYd33xmqP46rkD7omvCIIU1S8Ob9VlZiyBhXBjuqi
xU5uU8gbdi6KwNXJ27FHOIUcoXX6UARVW90+GliqEUOalnnFUJlgxRl5qEZK
qXxexSC2tVp7y0idBNJz44shdkmAAe+OOplN6bUUw5OlZzxjeFyCFG5hCSxq
jPSzjuGSfT70lUCH7Oh6AwMNQseJSSw0XLm2Zm+iBqFpPNpZAqKgJdlWfE2y
kx3UUpht/ck0L1+TqLKBKgVLXx87fZephK7zzPRSWFPtzQ9rm0rYtftaCl/8
k64bh04j32mdLcRQvHV2t5nRdJJM63pQDDHOI2nlhdPJpskCgWV3us38FVpk
iLoxKAbriOiNny9rkThaJ6sy4O+K8t7UpkXsWIJlIFNW5YbaziC9bB3KIOLu
X+334meQmzTu42XgvGqCW6WkTdawAygBbsSfs1f7aZM2GtfTEsgNN0uZXq1N
Itj4SUDvzW7R4TU6hI0LpxyWzw1/kZiuQ/auddzSzy+HyRzPJP8DoJhlmA==

          "]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1: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
e37vm7O0Gv4HLsrTyw==
          "]], 
         LineBox[{{0.32163659254434623`, -5.}, {0.32164952678328956`, 5.}}], 
         LineBox[{{0.7991941795151483, 5.}, {0.7997700502793935, -5.}}]}, 
        Annotation[#, {{Legended}, 
          Charting`Private`Tag$1147433, {}}]& ]}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2.999}, {-5, 5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 2.999}, {-5, 5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"3-channel\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "True", "}"}], ",", 
                 RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7614094543564463`*^9, 3.761412601835764*^9, 
  3.761433718815466*^9, 3.761434013115267*^9, 3.76158416009623*^9, 
  3.761647769597061*^9, 3.765018017117825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"De", "=", "6"}], ";", 
  RowBox[{"a", "=", "1"}], ";", 
  RowBox[{"re", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "0"}], ";", 
  RowBox[{"rmin", "=", "0"}], ";", 
  RowBox[{"rmax", "=", "20"}], ";", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "funs"}], "}"}], "=", 
   RowBox[{"NDEigensystem", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", "r", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Vmorse", "[", 
            RowBox[{"a", ",", "re", ",", "De", ",", "r"}], "]"}], "+", "De", 
           "+", 
           FractionBox[
            RowBox[{"l", 
             RowBox[{"(", 
              RowBox[{"l", "+", "1"}], ")"}]}], 
            SuperscriptBox["r", "2"]]}], ")"}], 
         RowBox[{"u", "[", "r", "]"}]}]}], ",", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", "r", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"r", "\[Equal]", "rmin"}]}], "]"}], ",", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", "r", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"r", "\[Equal]", "rmax"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"u", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", "3", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<SpatialDiscretization\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<FiniteElement\>\"", ",", 
          RowBox[{"\"\<MeshOptions\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<MaxCellMeasure\>\"", "\[Rule]", "0.2"}], "}"}]}]}], 
         "}"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"channel3states", "=", 
  RowBox[{"vals", "-", "De", "+", 
   RowBox[{"Eth", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.761412764375285*^9, 3.761412778049574*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.2572227820519872`", ",", "4.1581812663427975`", ",", 
   "5.019883099374172`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7614127707334967`*^9, 3.7614127785681868`*^9}, 
   3.7614341745198183`*^9, 3.761584160207039*^9, 3.761647769958185*^9, 
   3.765018017195162*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Legended", "[", 
       RowBox[{
        RowBox[{"Tan", "[", 
         RowBox[{"\[Delta]", "[", 
          RowBox[{"1", ",", "\[CapitalEpsilon]"}], "]"}], "]"}], ",", 
        "\"\<background\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalEpsilon]", ",", "0.01", ",", "2.0"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", "KK", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalEpsilon] \!\(\*SuperscriptBox[\(\[HBar]\), \
\(2\)]\)/(2\!\(\*SuperscriptBox[\(\[Mu]a\), \(2\)]\))\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(K\), \(11\)]\)\>\""}], "}"}]}], " ", ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.825315", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.825315", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
         "Dashed"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1.257222782", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.257222782", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
         "Dashed"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2.79355", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.79355", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
         "Dashed"}], "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.761412551671752*^9, {3.7614127974694357`*^9, 3.7614128150610113`*^9}, 
   3.761647144007069*^9, {3.764518840147893*^9, 3.7645188406664143`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0]], 
           LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA+ikbu+Z6hD83d6ij5JnYv/gcNpPj
uoU/V1pUpgFk2b/2D1Fr4PqGP3IuQg+GKdq/8vWGG9p6iT/BZquLWajbv+vB
8nvNeo4/kdQ5Vr993r/uLGUeWj2UP0T0ZTm32uG/4MQ830A9nj/3wLdEIo7m
v18+Sks/3Z4/AQTd3r3V5r/et1e3PX2fP+fy8cUMHee/blW5R51eoD9hjNub
1Krnv2xI1B+anqE/KOSghHPD6L9oLgrQkx6kP4+jACyw6+q/Yfp1MIceqT+t
WKyIBynvvz5kNABBdak/HqFPaTly778czvLP+supP+M02GZru++/2KFvb255
qj+kXARy6ybwv05Jaa5V1Ks/i6vF93258L88mFwsJIquP2oluZXx3/G/C5sh
lOD6sT98p/7/BTf0v/rPAHw9JrI/U75iSRhd9L/oBOBjmlGyP1XVsSZBg/S/
xm6eM1Sosj8gOaX02M/0v4JCG9PHVbM/JfLPGzFq9b/46RQSr7C0P4BnCd4D
pPa/5jgIkH1mtz8uck3/KzD5vygThdT6jrc/BKHm4GJX+b9p7QEZeLe3P58J
gWW9fvm/7KH7oXIIuD88klBE3835v/MK77Nnqrg/8yev8ONt+r/bAzVa57W4
Pyaw0QeEefq/LEgFDg==
            "]], 
           LineBox[CompressedData["
1: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
OA7HLcnH+UkY/A+bXdJJ
            "]]}, 
          Annotation[#, {{Legended}, Charting`Private`Tag$1147532, {}}]& ], 
         Annotation[#, 
          "Charting`Private`Tag$1147532#1"]& ], {}}, {{}, {}, {}}}, {}, {}}, \
{{}, {{{}, {}, 
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwlVHlYzGkcr+lQU0iRoVJCZWNHu9Fq8FVWSUWH6NkHT0gqng5aN7sRNkcU
oaxIl2hzlIqO7zvTNU02XZ6WQodOlabpzmh/76/3eeaZ/z6/z/dzzd8d6LaX
o6CgsJ/50f9vqdJq590uYLZH0mLPL8Cx0/55Idd9odylXJThLMETM9Ptm46H
wGYvaVzNrCo81mlioZZ2Es4+tgqo2laLqz5tvnIr4Aw8cRa3Ra+ow1cOmhzz
C+chWryuLrfmHVpnig8X3LsIvQar3DttGjBn3rkvrjkRULyhYU7e5Y/4d5HR
04O+kSAwOuTF2dmIDaMsASjTzZY+9G9CPf6Hhaqh0dB490eHXQHN+Ju3gH4R
srri6tC/BWNj2AeL7MSuSrs+4/uKYfeWpDuQ/3vff+ZurThHeeu0pc/vQnLm
UJEmtKHnSpYQhMnldh5m7ehkFW7j1XofMlMMW2KndWC3K2UYD+HmyrY7+jvw
8oH28VTpA5gbwfXSqO1E8wu67yqGE+BMyKkG1cwuLI9fnyWTJ0L3codNSVFf
cD9DnqecDOuNBTcsg7qRW5cQtJqbAtv2eKiNOfXgIyq31kMwqscvlot7cSOV
SzcVogyVlhqqfMUuKq/+I7CqOCbobfyKFxl2lcaPYUOXVb3fzj5cvP2qaNAs
Dbza3SZOv+7DMuaYufx/IDzxvOdrayn6RfachOXp8CjM94JPqhQZMEayJxBW
e/WHXbx+3MKIw0gO6pxAlTcX+jGRYVeX8BR8hzqMRMP9OCCvPdpp8gx6Pm3s
cPSV4a+XqADPIMEy3vbUOxne4LGCwnbLZak+jgP4mYV7Dke9Dwh4BQP4M/sy
YPDSaGW8xSCeJRJGoQwwbW5V10kexBrmesYDKGsaCzmhN4QL6qnhmRDln2fa
FTmEh3zpAS9gAvlZAerDWDhoxlz8At5v93DnnRlGnUlAsF9d6To0PowsmjgL
zCIKdXlHRvD53a8pJY7Z0H6lxOaKbAQ5rGHZcFM/DvYGj6LbZAChyRZanvSN
4gNqX20OeOyvOHEqeAz7qT2eL2FAqmX9UTaGtlT++pcwlm2Q03xkHKOovDtf
gZJjXPMd+Tg2H6cFeQUprXGKeue+oQUreC7kXt8oDJ4mx9DodYyCuaCBb62f
x8ixypg9GMSxN+W9Jt9xPk1/Tx7MS7bhCbK+YzC1IygfDDxvuz2yn0AhvVaW
D73x1+1c6idwxmSAIcq+blH8LwqEpTdaAPpv+ZWSMAXCwp1EUJfl/LSsWoEo
sI9A8FrMazBSJA9LHJnEE8jp/8O2IUiRuDDt1T5LQDhntZJApEhGaHuKCKgF
qTxVmcUh9+fSAgpBxyT0oIMfh2xoogcLIfqQ14AOckhfCgUUgoNIf98hXSVy
m6JJhLBBQX7pcKASWcuI5aApAsGCvrwlEiXSMU4HRwQmsbmDSSbK5JqINRhO
n8j40B+mTNg6VorgRYSgemGrMmHnRbsQarYLpc72KoStn3shNHP+NQ19rEIm
56EQVNMCVlbPUCVs3eoKYd33xmqP46rkD7omvCIIU1S8Ob9VlZiyBhXBjuqi
xU5uU8gbdi6KwNXJ27FHOIUcoXX6UARVW90+GliqEUOalnnFUJlgxRl5qEZK
qXxexSC2tVp7y0idBNJz44shdkmAAe+OOplN6bUUw5OlZzxjeFyCFG5hCSxq
jPSzjuGSfT70lUCH7Oh6AwMNQseJSSw0XLm2Zm+iBqFpPNpZAqKgJdlWfE2y
kx3UUpht/ck0L1+TqLKBKgVLXx87fZephK7zzPRSWFPtzQ9rm0rYtftaCl/8
k64bh04j32mdLcRQvHV2t5nRdJJM63pQDDHOI2nlhdPJpskCgWV3us38FVpk
iLoxKAbriOiNny9rkThaJ6sy4O+K8t7UpkXsWIJlIFNW5YbaziC9bB3KIOLu
X+334meQmzTu42XgvGqCW6WkTdawAygBbsSfs1f7aZM2GtfTEsgNN0uZXq1N
Itj4SUDvzW7R4TU6hI0LpxyWzw1/kZiuQ/auddzSzy+HyRzPJP8DoJhlmA==

           "]], 
          LineBox[CompressedData["
1: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
           "]], 
          LineBox[CompressedData["
1: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
e37vm7O0Gv4HLsrTyw==
           "]], 
          LineBox[{{0.32163659254434623`, -5.}, {0.32164952678328956`, 5.}}], 
          
          LineBox[{{0.7991941795151483, 5.}, {0.7997700502793935, -5.}}]}, 
         Annotation[#, {{Legended}, 
           Charting`Private`Tag$1147433, {}}]& ]}}, {}, {}, {{}, {}}}}, {
    PlotRange -> {-5, 5}, Frame -> True, LabelStyle -> Large, GridLines -> 
     Automatic, FrameLabel -> {
       FormBox[
       "\"\[CapitalEpsilon] \\!\\(\\*SuperscriptBox[\\(\[HBar]\\), \
\\(2\\)]\\)/(2\\!\\(\\*SuperscriptBox[\\(\[Mu]a\\), \\(2\\)]\\))\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(K\\), \\(11\\)]\\)\"", TraditionalForm]}, 
     Epilog -> {
       StyleBox[
        LineBox[{{0.825315, -4}, {0.825315, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False], 
       StyleBox[
        LineBox[{{1.257222782, -4}, {1.257222782, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False], 
       StyleBox[
        LineBox[{{2.79355, -4}, {2.79355, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False]}, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 2.}, {-1.6546669297631609`, 5.248208735030479}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"background\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"3-channel\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "True", "}"}], ",", 
                    RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.761412583972575*^9, 3.761412606159195*^9}, 
   3.761412816797202*^9, 3.761434177840485*^9, 3.761584160432135*^9, 
   3.761647770498562*^9, 3.765018017384612*^9}]
}, Open  ]],

Cell["From the fortran code (!):", "Text",
 CellChangeTimes->{{3.764518939586381*^9, 3.764518949473057*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"datf", "=", 
   RowBox[{
   "Import", "[", "\"\</Users/mehtan/GitHub/R-matrix-prop/3chanmorse.dat\>\"",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764518845194921*^9, 3.764518880830599*^9}, 
   3.765021974415886*^9, {3.765022062816779*^9, 3.765022064631221*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pf", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"datf", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"datf", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "datf", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalEpsilon] \!\(\*SuperscriptBox[\(\[HBar]\), \
\(2\)]\)/(2\!\(\*SuperscriptBox[\(\[Mu]a\), \(2\)]\))\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(K\), \(11\)]\)\>\""}], "}"}]}], " ", ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.825315", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.825315", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
         "Dashed"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1.257222782", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.257222782", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
         "Dashed"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2.79355", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.79355", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
         "Dashed"}], "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.76451888274225*^9, 3.764518918253744*^9}, {
  3.7650218267464037`*^9, 3.76502189224645*^9}, {3.765021926695394*^9, 
  3.765021926918434*^9}, {3.76502199055618*^9, 3.765021993554905*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
kyp2vQXC/5HB/wWpY1Yj
      "]], LineBox[CompressedData["
1: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
gWI/e4XhWioK+ndYTqKIYftTixjeMioavzO9yGGLYVgQfbVRj4onaumCg7pi
8N9spyVlUvFFwcc/chZM4CzdBtNxCk67VnT2g5kYju5S2Vb6mYK7T519y7IW
w4gsLt2vm4JFBzwM7ZzEENr1aMP6Jgr+dlt0PNxTDOd0/Gx2lFNwnZViy0Nf
Mbza4uJwO4+CV406dHsPi6FMb5W1bgoFRVPyDs2OFIOGyRzqsxgKLlUIe+oe
LwZnhUMR6X9RMLzHefKFa2LYOGiUctuPgk3tc33qssVgeHmVHX8zBadX/yob
uS8GC/3s6D/tKeiT10xfWikGY/0GD8lyChYnZk5sQDHkfqlsKFpAQYXw4IK0
DjH8szVdUqBNQQc/u/E2vhguPua1vFel4HWXGRuU+8Uw81XlTc5vEqWrvtzC
ETGczrtx4fkAiX/o130LoUjgWt+pxmg+iZGsa7YFbAloXUlPCm0jsWV0/zWh
rgQuM5+vSKsnUUsCPZpGEgjmazKHykj0a9VY5WwugcLm9KPH/yaxpFx6Pspa
Aic1x7hmaSROyqngPnGSQJvlyvp5F0l0SkhYOuQpgW0lGUV2p0lMDd112tBP
AvkvLllmhpAo32Xe4R0sgffHM6Ys2keimaOKfnKkBL60Jn0d8CLxNIf7V3O8
BEwXlmTIN5DYqlfcOClFAgvzlRS1bUmcoRY9Y3mOBLzF/6icXUHi3p9bDgYU
TfTX/G42MCaxjL/4n5xKCUxv3rWPOpdEonkSu/uFBHLrtefqaZK4obRzF7tT
AvuYY27HGCSmZ/5dYieQwB1TQTiLILE3Npwa0S8BydONy+XDBHKOuHiUjEhg
/n1fO6UvBJ71nn+3lyKFoOZJyTskBL6xHxmbrSGFKnqQOeUjgTOXvXTcPFMK
WsYBgUNtBB7QvZV5wUgKqwLSnxg1EfiIFjJYZy4F89tJjUVPCaQM2a8ZtZZC
zYvIuJhyAjd+1Ele6iyFlQuPLSt+QGDm869S361S6PyzyNb0LoGfi+qXp/tJ
YbNhxFV2NoErUlPi2oOlMCaL93BKIzA6yv+j8kkpjPea639JJrD9kJWx1Xkp
zLvtwxi5SOBszyknj6ZIgZimkh4UR+BBG/mbghwpsCNvfPeOIrDCuHKuqEgK
vYldnQ0nCaRpXQrRqpLCtkf25Q/DCHQj9jQ4N0ohLrNXYnSMwFv9HK3oTinY
uz85b36UwIEu1QOVAimEfLor5wcTuKqWVznULwWpdPEes8MEnit4qL5gVAr3
dpo/swoisPNqzI7tVBmApv5O9gSec2prcbKGDMZHt3s+msCHDiwhW2bKgJ5/
s8dmgq/SjXBXWiiDlxqdpa9CCFS26rqznCODkX6hpf+Ens1G+SMBa2Sg8LjV
Y3kEgTlTItfnOstAGDL2xuUsgYPjG9O7t8pANOud4cd4AqFH/wt7rwyWvn0Q
rjgxr7j2USv7IzJIftpUNpBJYFfVq8SIkzIInBd1l1tA4Ly8LHHJeRnQmry7
J1cSGPTv+ZIig4H2u9u6XxJYHfbnOb1cGdRSm2hJQgJV/WZ+2PxABoa1ZUH3
Rwn0cBlamFAlg2k5D8nH00i8vep5eH2jDBjjCdM8OCR+m3+jdbRTBmaTbubt
3kaiFStAz0QogxLr2h+SWBIvjK4O9huY0C8P/du0msQP4qnP0kdlsKD1bZnq
f0g0aO2Z1kGVwwH/y0VlthQMLq/aqzJZDokGnUPOGRSsyb5cYTVLDqk/Hm+Z
p0JFRoKP2l8L5eC+XbXd/SIVPUNXeBdy5HC4u8B0xJyGd3YxikRr5PDOPLtS
mUnHHw6CSdob5BC1hxe/wVgZrTmlrhu85PCJHitOqFTBi3qxudF75XB0f3Zr
H4WBH1W3/ao8Ioc515u6xrqYeNGlk8o6Kf////NfC1Qctw==
      "]], 
     LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
t3Kv7kmlTwNx2H3P1z1ceJN28sJdLhavCNLNG75coCWFVL2anAbLTY9j/Ly4
II9V56HZaZiW0/yj7s4F8wMb8JNEISxsXML8s5ML/gHaBgrSQhhT359R7sSF
8x4L3IzkhLBS713bYQcuVDhMnrRXFsJsv3LWZjsu9MKvO0FqQlhuJs+T3MaF
SdPu94laQrDcn/K3H3FhmcGTiRv6QjiZaRtWasmFbRqFGk+MhSCkqiUc2ciF
A0qX7HtMhaD94qu6jTkXrkodiaFvFEKGq5OLqikXnol335SwEsKeBdvnM024
MMy3bdW0E0K+d6F7qxEXyFQTxmYnIRTf09bLN+CC4X/t3E0IcfHlZ4/qcWHX
J9KWIz5CiPST2u+iw4XYDtb+jL1C2PBTucdQkwuFjV8yH4QIQbO0vFlKnQtt
NS3P3hwQwozzrXXUJVxg3Hv462eMEIhXOwy6VLigeCtXeuaEEOZrSt55qMSF
DVlJ65QTheDQaHr7ijwXAlIidq85L4RrBsaqxxdy4UKCe/KOVCGEm/bK7ZHh
wqOYLZWhV4TQXyG6YDOPC5/26w+ezRXC6P4rcavJXBD6KeBuFwhhPTo4toTA
heWuIv3nJUJwVj72UXKOA3a2/1z77wvBvSvVZGKGA4c29cSzK4Ww1CpL6t8U
B66ZvCiVfiKE33ujfQbHOfBixZ13KxqEYCYro9HF48DIkoxx9FoI8ebbfZrY
HJCUi1Xf/RaL5ysFyToGB4zIgXYn3gtBkLVTr4LKAXehY3TWJyGczmE8K/3H
gXj2+huPvgoh52Hvi1t/OFD8V6Ol46cQFjfQDW+McODtVyn6n1EhaBXpyeT+
4ADrA19xjo7xy/yI17VvHFj05sfmJTyMT16NstcGObDp+duQ9VMY33rH1+b0
cyCw8nHGTrEQKg4veHW9lwMXS/PrD5BmQHdu/En+Bw5U5SWPXJCegTfrSxSL
uzkwcDlKqkRuBqa6yV/udXBAdNZnbaPyDDyOWkSobuOAVqy13xe1GXB+037l
eQsHth80Os/XmoHDwXLn3jRzICpQ5dHClTOw/yd1sOclB3K98J9Xrp6BkmeO
GcPPOdC4gy7etn4GnMJW32U+5cAfqwG9gE0zEOGduVRcywFp8+adJ61mQHFs
P0f2MQdMVj2Iy7WbgZeBNVralRzw0swueew0A3iZqMfmFRw4pXyq+53bDJyS
y893us+BUplQwZjPDFRlrR8JvsuBTpzrMmLADHQXbkk8VcIBzvhGW/X9M9i6
tf7o9UIOKNN1ojZEzkD0puKWmgIOWI4szHM/PAOGaXP7P97gQPDA1Kuo2BnY
NzoQwMzlQGrXb2pq4gwsnNKvmn+NA4+b3ymUnZ+BTj/xTqOrHBise7rpdeoM
hGXttnHJ4ID4QVHw9ysYXpKOaYfTOKBTmHp5MncGRPP7NK9f5IDjtaNPFW7N
wMdhoWRjMgdiLvn/NCqdgb7bHzf/PcuBvET7edsfzECxu1/z/CQONB1Zuya4
aga8mQ8yzE5xYDRMzff0kxlI29jxYF88B+b7S5y72TADRH6rbMYJDqx141Q8
eT0DKlUVzQ1HOeBj/62/5+0MVNIyntFiOHDa8s0s/f0MTBASp5dEcaBsbaWu
ZP8MaJmlntkRyYF3enkuWt9mwLG0zeV0OAf4amdjLUdm4IS9dVDtfg4sVogs
9v43A3EElQZKEAeQpGfXEcYMDKR7eGrs40CICPgZvBmoTVIy9fLnQDp3pVr5
1AyU7opwu+LHgdp/ijZt4hm45H6otsubA1+HZg+OkERgU2vhJuHJAVzvWO6M
tAi0j/1eY+3GAd323mZleRHIJSQ7n9nJAaeGBsoaFREUn9l8/5UTB45U35V3
WiaCQlXtLXhHDty8m7kxTFsEb8s9ZK3tOfDqZlzQuZUi8I7jLrlgw4GxzKD0
26tFkFmgFNC1lQMLkp2ePF8vAmPc8A9ZxAHTePPh/k0iKNp/MNvTkgN+UZqS
HCsRDIT8OX17IwfOBMuYyNiLYHb/vpIxcw7c9xn31nUWwbO7UsI16znwwfnn
GSt3ESismUs+tZYD49ad5bt9RXBlLMSmazUHlm6o/XQiQASjsYHmqkYc2Gp8
S5S1XwSVIUv8Qg04EKadsqIyUgS3RbVV9XocyFSNce48LIJ9fp6mUis48GSB
34m/sSK4f3AlxU+LA98JNkVziSKopnl0VWlwgDhl3LkkWQTN3uRvpGUcWMlU
5a1PE8GUZKCy3xIOuPwmLHW9KgKy0vXEGhUOHBtkWEdeF4FkUI+8zCIOFLz7
HJlySwSOdzZ+DFbgQMvrVzklpSIwcyU+bZblAPVpeVPjAxF4lXu3LV3AAdmH
18a+VInA81m4KFaaA2bFiXKCJyL44LDfd1CSA7tzwzbIvhRBymTisBmZA+fS
dgUatIhgbPFoynUCB8qTNqfZdIigoDSngjfHhp5junUBH0RQJ9We8UzIhskI
uR8n+zG8a1vqk8bZsCxASL7+TQRRcQIdRw4btnn8Na4ZEcGRurZ+FTobIhw+
eL3/J4JJq5K2f6NsuArPkigMEYSemRyvH2FDvWnJAyJfBDVupsFpQ2wYXpne
pz4tgr3KnQv3fWYDWeP4zIY5Eawu0xNY9LLBUClAx4M8C3r+rQqK79iwS8rB
KVpmFtsfyIez29kQK153PE1+FoJkUsbfv2ZDIX9ZYZnKLPQo33pa+ZINbRTJ
jtfLZsE7+l351Xo2MH5wOd+1ZyG2O7PneA0b5D8NLZ5aOQsktyBd/0dssOho
26poMgsTRW/K7e6zwb+x6oCx2SzQWtfuXlfKhuSaG9e2b56FI5uMN2jeZkPF
vXONwVsx/eMWSP4GG/oKDv47bT8L/s6fo4jX2DB91Us233kWBuXT2icz2KCR
YmXx1H0Wrh/+sZV1iQ22CYb7en1noVjB48+/82yIjFmUygiYhdvT8WW/TrMh
e/9cjWToLBy68TV1OJ4Nz/2oQ1oHZ8GnU5Tx4xgbRnb+t0CYhbNvYx4PR7NB
wrbRyCduFmDdW86vA2ww2nTP8+jpWWDKX3Yc288Gd5OrpzOTZ0Gn0/0Vax8b
4lecvF+eNgtS6o+dpnazoXhJSG/b1VnoMDfjEb3Z8FbWRThyfRam8uIeyrux
gUXaoC26NQvi5QonNZ3ZoCTU2qFyZxY+z8/bvW47Gzax5x9bWz4Lq3h3XOy2
sWHf34lbTtXY/U2fdu0BNlz8OtIe9nQWHBpeBR/byIbKD13scy9nwf681PnM
9WwYaK1TLWyZBeF8p6oKEzbMPLtt9aIDG19gONppyAbNyosRAx9m4dV7Wx2a
LhvsSw9nc/oxPNKtDszXYsOhvN0vZYZm4Yzyq2cmy9iQc9l2VPfXLCyYCJXx
UmVDw1mThVvHZuG95Mi+04ps+H1iifke5iyYHO558WAhG+YdJAXE8mfh0YPf
Sp+l2LA6kHUxe3oWqiJfHyKR2dg+5cvjyrlZMG9VfWuKY0PCjpZvnWQxLBbn
qIXOsKDU6iFxVEYMnnVjB/MnWNBplrsKpyAGkzeNz3u5LOAYJnksVRVDvmun
WIrJAmXNiEQzdTEMv3q5aRuFBZbK7vdcdcTw76VjVNIfFsbrLT2RBmIYNzHM
axpmQSpOfzrFRAzvbeWfiL+yoHpcXqvUTAy/w5+8QQMsGKTNODRtFsPmrT1t
53tYMPtz9MjXrWI49GRpfVc3C3QGPhYI7LH5/u66rvCWBY5dz9tkXTB9q9aG
7G5hQUxzKcvAQwwntU5o3G9kQV7dZRVbPzF8zB55M/6MBU0PTqB9+8RgnWLs
blPHgr+394UnhIrByVzrXW4VC6SvOWZdPyiGBOVEQ1o5C9ZcWt9Qc0QMn9+S
Y6CMBV6JGn/fx4lh5YrE/NxiFiQekVpAPS0GkdmjB+wCFtwJ468nXRBDj7nv
TYc8FnTv+eGvkS6GP1lOkfeyWcDb9TZlY5YY+n/uVJfIZIGq/eNqjzwxxI8a
V+1PZQFY5n+Nvi0Gu+u1yzqTWRCyNpmQfkcMP+UfhhmdYUG6XpThvXIx7Cn8
l5GdwIIaNR/3lmoxpFetzZw5wYKv8tanfjwVg8bPgLCQIyyYkzAqm3ophiDG
1sW9h1igK/rvAF8Mt5sqirZEsGAHF4dVfMyeoKjZRyEsOPKPttzhoxgG5gUZ
a+xjwc2h/u0hA2K4RNyzNms3C171NB1OGhJDSbvpPElvFoy13c/P/4XFl9JS
ecqNBQsast48HRODpsYvnQlnFphWJzB7mWKQs4wIj3Zgge/d/cpMPhYP040n
GTYsOPPfcbsQw2+RsU+EFQvK/mu/uDl4Nk+HQNvMgvfnda5ukZgDM/eZowcs
WMCPW/jCZ/4c9Hhcq2atY8GSqKnfRxXmQHyup/bIahZYBf+WuaI6B5FRWaeE
BiwI9XlnWqE+B4qNjfPP6bIgw/npnnadOXDUMw9YoMWCOuuiC78M5iAg8e/x
G8tYMGSRWiUymQPvsocueotZgDc++kXFfA7irp2gPlVigb62P36dJTa/q7G1
vRwLnFXtDZyt5+DU+Au/IRkWHFuw1i18+xzEPpi3NlqSBfkEtYTzLnNwq5TY
JkFkQcsk+W6hxxyk6t9QLBQzgcpgv3/hNwdG6fVqG4RMkP39dWJg3xyc0Xf+
2T/OBLPBVg1u6BwsD3fyPcxlwu53j+znH5qDoaaydHkmE869vh6jd3QOXpXt
OFZDYcKDp2dubo2fg8nitYoef5nQU3GgdU/SHEhbOoVM/2RifcGDEXthDubN
y4ooHGLCslxYdC19DlTzJjXtBpmwLW3llqqsOdh36Vgqp48JEUmKoV15mP2x
pNL8D0y4cmw2c/Q2Np58O8K+iwlPI8ae4e7OgULf5pGJNib82Nv7a2nFHCw8
851w7zUTiB4N0uaP5yCrNq7Xu5EJBg531+2qn4MpaQXH+c+ZsBMydx9snINM
3TuHXtcx4YRpXPLF1jmoLFq9KbaaCbdWBlWWdmL2KjypMnnIhDfqToNNH+fg
5Hyzbto9JtAVzXHfBubARv1JelkpE+SlNFeOD83Bj/fr+UGFTLAQS++S+z0H
7TdfzmrlM8GfL4g3pMyBv9C54k8uE5Ipw6W2rDmw9OML72YxoeJHx7t9gjmQ
03xMD89gQl9fzXiCcA7YpVcSVqcyQRTkLLsDh0NpJvkPJ5KZkOnfWupDxKEO
iaH45jNM0PKxsAiVwKF2X79/l05h+Lg9endUCoeuOemzPOKYsN1Za9/Z+ThU
PuF8VfsYE77bXx/PlMWhWp8fH3jRTIi2np96SwGH/oX/vtsaieG35Yx6xSIc
cpA+tCg3jAm5FhM1z1Rx6LH0VbWIYCasXHfArn0pDu3V3fMCApjw0mhk6JM6
DmmSR5nKu5ngou8R/UsThxgbNj9lezHht1YXia2DQ0u2nlDocmPC8WVwQ6SH
Q4vOVeDLXJggpVpnJG2Ize/IPnvOkQkFCitbVIxxaOqTT06gHRNMFtz2XLEG
h3aYEy2srZnQKqlIX2uKQ+ZxpIgVwARPwsXTyByHHp47YSC1CeO3SKTovBGH
ZrROxLLMmHBqMua+nyVmv5SG28BaJsjx/jsww6FtnWnPG42ZUMrw6z1ujUPG
376V3zPA+D/WE3LeFodSsg10s3WZ0PXLRnh1Ow5FG900SNJiwp7vLzIKd+DQ
ulfb6w+pM4HzebX2Ixccct/m2+2/hAnne+/Uv9iFQ8OXmSE7lZmg8m7xjg4P
HDrkqnvBWoEJ5e0ZIwPemH0a+oYWC5lg+Zp47I8fDpFDVNyNpZnQ2xArxfXH
/A9bjNOVYELwU+Yt8T4cUnBxN9YgMGGyOnDt/BAc6lFk/1gsZkBqxWD74jAc
Cr0sv1BZyIBlZTv89A7gUG/430bFCQZUF71mmx7CoTGTqwwFHgO25Zud3xqD
Q0Ww9YYiiwGDORWqO4/iUE2nVusiGgMirix/tOcEDmV99Q9f/I8B4tQcqwPx
OBTurJ2m/psBV5OlP8eewiHvb7f0VgwzYEXS6YgLSTh0jzxrafSNAfXxAnH2
ORyyMIh+b/aZAY7HwrOLL+AQ5YjegFUfA4ajhvWqLuHQuRE3d+cPDDgc4fby
ZToOzUd6Dru7GEAO6djZlYlDD9b0PznQzoDrey1HB7Mw/HQychNaGGDoWxM3
moNDlp6X6BlNDGhy11vIz8OhwH5hbckLBuxyKSjBFWD8jVVl1z9lwN/t8uYL
C3GolKZa8KGGAbHbLnQvLcGhjMJ1L/5VMkAGZvauvItD1IEie1wFAwo3RAvM
7uMQ88YN26X3GLDGdPTitgocanvtVWteyoA2Y99luypxSI65KMOjkAHeKz8+
3vsYh14ly34+ms8AhvY224N1OLSwKSk15zoDTqs//xZfj+XrlbLy+mwGKCw2
jrr4Aoc0XjWtH8pkwF3FUmJuIw5VDUga4tIZsGGhal7pKxzq1np9SfciA97N
u7zqcSvGpwYDV+fzDNhLJLxuasehZaeSk04kMYA3e9zjXScOWUsqqpQkMODC
FJ369R1mT9MipQ+xDFjMD0gc+4j5/67n+MxRBjxiDiiM92F8V7u4xSCGAUBx
uEf4jEMndidF+B5kwKffzZvkvmJ8mBVPp4UzYP8P055l33Fodo0DoymEAdOD
D4INf+JQMfM+4u9jwH+7EYvfOFTxN3BC358BGu+zsRUkDv1JfTU/wJcBtW/n
ablTcKhZSeZcnicDbFtOPd1Hx6HUY+nefbsY8PUlzyGKhdUP/8z0BS4MiKwP
/ZnAxeIBe9UdHBmAq/l+JFWAQ2ft7BdctGNA9kPXeXmTOCTae937rTUD9O61
F9wV4tDxNTfnJBEDnhdvWlM7i0MBywvxDpsZ4FRQ3fYKh0cuO8b3XLZgwEju
Ct8PRDxSuspQ7DNlwNGrN1lDEnjUeX5AS3UNAyTSZc9RpfDoWyw+da8RA25e
OK8yOR+PvOJa7O+vZIDRmekKkhweFTgc8OetYMDrk4eQgiIe2Rxw6bLUYoD7
8T/9Gsp4tEKxNS1VnQFj0d7hRovxqGnt0pIvSxgQf+D97EY1PAqLeTRfX4UB
C/dvzbLXwCN1k56uWEUGFAfU63pq4dHilG9DXbIMMPVb1RC0Ao/6rXVAfT4D
3noUu8To49E1BllweB4D/HYq/000xPQ3fpnuIDGA5ZAWm26MR5IPJlyW4xmQ
ZINbcHMNHkl4vhiPnaWDEjpWfM8Uj/K0TtP6pulwbyNt/RNzPPJYXmxkPEGH
Tev3drVsxKNUlVNNqTw6fFjd799jiUdvzkYXUFh02Gewnf8DYfZmf223o9NB
oNOUQrfGo6WGKpb3x+hwUWOd2rQtHln9uSiW+kuHpUvuV0s44FGcRKb0wRE6
VCots1FywiPj7NSA3u90sJLN+qq5E48ubfgxZ/aVDgNSkodWu+FR6R7q2K0B
OoSREgiWnnjEXKSgKtFHB5GYk+vgg0dtBg2ZUR/okDEdYui9G5tv0Xbnb110
0BJ8aw7Zi+FD1HSzfUuHJywX9yOBePSo9/6t2lY6bKe+oSSF4FGhrJ2R1is6
DP3ZcCojDI/ezQbis17SIWq4Ur7gAB6VXA5eTHxOB8JX7bIHh/CIH1B39NgT
OuR+yttYH4NHsu8aFKiP6aD/YcHHN0fx6F7vX96eSjq87Dgb1HcCj3i6N5X6
y+ng0jo5+TMej7ab2J1wvEeH342R6cxTeEQheC95U0qH489+LZ9JwqOBoA2z
lkV0mFfr+WTeeTwa6fDWeF5Ah4JH3duVU/AozVMnaf0NOqy+j4a1U/Go8re0
Rm0OHVpLnhxecxmPnPknZ9Zk0cHj1n8vkOGRfOOYUk0GHajXC/N3ZOPROp3m
iHVpdEjIUjLxzcUj96YjoicpdJC7fOlN6A3Mn54TnRvO06E0Rex9rACLr/OW
3qYkOpidPcI8W4hHqt83KtqcokNnAuXMlRI8Qh9/ZbyLo8OeE3uUb9/Fo0GD
+9Yex+nAiekrr7iPR1dKiGt+HqbDuUg7eF6BR9/zIzwjouigHPryU3slHmkY
uNdOHKBD+b41Yf2P8UhXwcLufBgdLHeXiX7V4dHejgx5xRA69HouvcquxyOd
mF750n10CHK9smL2BR6F/4mzM/Wnw6Qj+YV0Ex7tv0OoafelQ6ptvLPqazza
wPi309eLDupW7N8r3mD5X1KizXajQ/Wm4BPr3mL5EVCzMnknHazNvspYdeHR
w+jsQDUnOgyaOBc5v8cjx57W93Xb6RBh2Gq6uweLx6qWCGdbOsyusOgM/4RH
pLEFG6hb6fC/dvkZj6Ll9CySgQ46S7V457/iUUdURqjWZjrUL7p+Ies7Vi9O
trW/sqCDo9z8pUU/8Ug7wNkjYD0dfkifqXr0G4+qZioU8GvpEEOesG4YxSP9
X/vEJcZ0IOEOfOmg4NFHT4GKrSEd8oQ/Iz/T8ajPm+JP06ODwbg7/i8Ly8/c
1r5MHTo0sTtzuFw8Onhi/hEzTTq40rYYzAnwaErJAYaX0WH0b23T/Cks37eS
zFOW0CH2p77bkhk8El1o9VmjQgeZb7fG9MR4ZK4tf++7Ih1u9yskrMcT0LKF
J9QvydFh7ccUOWsSAVlMnm42W0CHtk7RnZ2SBKRlW39pVIoO3m9iNvhLE9BR
tQcJORJ0oDf9e39gAQFlefy+bkukw+nnfoFxcgQ0eYHzbWqOBgp1PRMXFAlo
Lz7Q5qGIBncrbdKuKRNQc2/b54BpGlg8eKFRspiAXjdXZChP0KC7dHVdlRoB
1bjeiXzPo8He23fsGzUIqLgLRSezacDLW/yjS4uAXq5SvLGFQYPk7IyYLysw
fRaV/6YoNFDNIEr80yegyui73nWjNHh4MfYm35CAaEqXWdG/aQDnmMb41QQk
u1J4z/gnDfpOBbYuXEtAvMNnzzOHaBASO+iltp6ARk6+PPfoCw2mD+9grLQg
oNwrcPfQAA3SD75OMt9EQNgynWLSR4PlYWaLbLYQMD6ecRJ8oEFNYMWDXVYE
FF1+5NOzbhrY7lm+JWAbpi9EMT6xgwZfvXL6DtoR0CknEbJpo8HBXdKhJx0I
aG53l96CFhrM7Tg9c9GJgBq9lxh/bqJBtp0gM3cnAe3pu+RW1EAD3a3hOnfc
CCh2Zf31A89o8GLz8LPHngT0OM1KaP6EBjvM3ZyafQgIN9ERT66hwciajl/v
dmP4m7NU+ytpcGSV5fFvewlIg7Orv7SCBpJ6NdKUQAIqv3bj4dH7NLipqVc4
HkJATw6FFNvepcEqtYJ1xHAC0rnlW7O4hAavlOU75CIJSKys/pN5mwZu8hd2
q0cRUP9DD73WfBqMycxwDA8TULfU/dQbeTSIk4hO3nCMgKLqXs6LyaHBAvzo
YrtYDG+5zcXbs2hQNONT6X6SgNqDPrppZ9LAdOLD1sBEArLrXb5cnEaDtxzr
wagzBCQMGCJ/u0gDX/qzA6fOE5DtbDmpPpkGzFEjXFoK5l/sZrWcszQ4M1Jy
LS+VgKxSLXccPU0DpSGVlWWXCQgN7r7mnkCDewPpjbVXCGgnfbtgfRwNNvbg
d73OJqBW6ycHVI/T4EPX8X8fcglIwWGncOYwDfa10eO/3yCgzb7vC0eiaCBo
DpClFWB4vPnp1x5Jg5QXA6WThQSU+G6T8aNwGix94mBBLiWgzqpc5Zz9NKis
+u8BDQH53ilTSgyiwdZy033LHxDQ2e9a+mEBNOi/82Dc6CEB3bzUutNtDw3C
CtVTN1Vh9v+wygBfGszcyFbfXoPJMt4jq7xokHHtvw5CQI4ur22XutNAM/OU
XfAzAlpA3/Ba2pUGdZd4QzENBPR91WmXGSca2J8PjT7dREC3DrlwGQ40GEr8
Trr8moA01SLKftrRICrO9cbNNwR0rDbz0KdtNMAfbTe6/5aAjN6e2d5hRYOc
Q5tannQRUAeRaN60hQb64dWere8J6NWaQbMnm2jwMmgFvaeHgIzNW+0fWdDA
2f/m6eFPBPRu6eXIsvU0+O0tq8T4TECeC0TFRWtpcMzt/P3prxjfA75Q8lfT
QMp5erPkDwL6nEtHeatokG9/qFdphIB09+LKc1bSYLX1nxCtPwRUkP9b+5ou
DVosvYWr/xHQ1aC9ldnaNPC0eJ9hSSWg1Hk2268tpwF17VZtRwYB3V4cJMhZ
RoMEo/p6bzYB9YakVuUtoYGs/qod+3lYPPCX4wtUaFCqVTxyZBzDZ/sWj2Il
Gpj997r2FAEFUw/DPXkadP73+tYMAdl/x22oXEiD3f89zhUTkMnhZqunMjTg
/He8iyeiBx4pPs3zaHBOktZeTyKi7sy1SZ1kGigT9vq1SRLRjvSCJ/0EGjwQ
fWL3SRPRC7WS6ZE5KmyetD8/soCISpM0d7BEVOjhNqqy5IioP1T4UDRNhSDG
2kczikQkMbVAbf4kFSb+3bOSUiGi0N4tN9QEVLj0S+2z8hJs/KIYHWMuFZZ9
vxqhs4yIPh9IbUQsKlR/lphbs5yIqsiHg93pVNjWezIbtIko+I7c4nAKFT53
c/ScdInoT/HOocRRKkS0h7z0XUlE2rxlFTm/qTD76tvOsFWYf0b7Lz76SYWr
DS6jx1YT0bos1SPt36mg/fRN3Lm1RFS0UPfAyFcq1FdvWHh1PRG525yJnvlM
BYeKypLbFkT07pr6OZV+Kgzf1TZ/uImIKtUEJaa9VIguyut+voWI0t5Of9z1
gQqk/AUBb62IKN9ppfThbipczzkr6N9GRAYo0TWrgwqGVyYv/rYjIu+FE3dr
26jQlBq5jONARNcWXJH83EIF1+Rfj2edsOtJTsenm6nw97SnrYwrEZkUreEt
a6TCifjub6ruRNRVYnXS+gUVZI6hKF0vLF6t5+Uj6qlwK+oJ0dSXiOJdSE+u
1lFhTYRBntUe7HpZd8iLx1R4E1y4yiUAw8+Rov23kgree5Ve7w4iomdj4eyF
D6lA97nkEbGfiFb6BHZsfECFRHcx9UQ4EU0/Ha0MLaOCvMuRxORIIkoKkC7N
KaXC3e0UhewoItpJoN55U0QFi2177hUdJqLbpQV1gltU6N7St6nyGCZXbe1b
kU8F/w12PQ2xROQ0J5z1yqMCb93L4M6TROTzb8w8LYcKycZrpj8nEhFts3FS
cxYVVLHq9/cMEUUdGP8syKRChfZ/Cxgienw8dLPhZSqA+pWncylExJd+XB2Y
SoU+VbLjgjQiskvFm+anUGG/YvzPJRmYfcpp7f3nqTC1gH1E/yoR6RWeDZM9
S4X0ecHzzK4R0SBHY4njaSpoEL8WWF8notTmW0MpCVSonXVa43qTiJ4+3fCo
LY4KNlMtbf63iOjqBdNM0gkqfOGZ+0YWEdEHbu+ZbUepEMl8yIorxfAd8U5O
jqHC3JjmuZQyIvoSrnjz7SEqZP/OVcl5QETMMedX0pFUWPFD5mHJQ2y8xO4p
53AqPB9MQtVVRPSwL2Prtf1U2NE33t9Yg+HzfkvhtyAqjLyLCO9+QkRtwvaF
WvuocPjtz9kvz4ioaSL5aoQ/FSRa3LP+NRBRD3FYr86PCjdeduoKmohIavn6
PrE3FYzqtzTgW4hohcr4FQdPKjQ/rnWRbSOi2Zy04OtuVHB7qP9XrYOIhrZE
OI3upMK/sluxBt1E5NskscPUmQrxxQoLLD4QUfXPbwHnHamwoCCl2KaXiEZL
gtMH7KlQlCta79ZPRA07dT/q2VJh3dWYroBB7HpO2cqT1lR4m/bP/9A3IuJd
iy74iO2ifS/48U/+ICI2Tkl/xRYqMJN6Ui6NEJHr+hXvT26iQtJJG7Xrf4jo
q7Nl+icLKigdf1F95x+WH9bCkFVmVLgXvdqmhorl55zY98I6Kmw6cOdrM4OI
xhL4B36ZUOF9yOJD79lE9Gvk/A1LYyoEBGQQhnhExM0N+XvTkAoC3/9eWCai
3kNOTtP6VEjxiDWcmCKizU+n+711qbBkJ7OZKCIitd1GCc+1qfDIIdBdfo6I
KFKPrZdqUsHKZpCiTiChaju3VYnqVOiHHadWkUmIcp1i9nspFUI3vpbfOI+E
Gq47BtstpoLQ1KzMToaEHCZ3P3mkTIWM1RUbPRaS0McWkuEiJSpoGiz/GChP
QgENq9tPyVPhiU5OULQSCTW/6ksZW0gFOw3pqVMqJETCUaN3zafC0OLT6WlL
SGh18dGzTVJUOKQkWH5jGQmZ/kpsNJSkAkE2/EnZchLS3KiqfZNEhWtSw9vr
tEno7SXvOikCFfRJbsOvdUnowca9h+PnKNAgfnv440oSMgx382eIKODyX3tb
RULG8sFxe4UU+M1/nE9bTUKcNR1vPk1S4BhL12RqLQk9mWmy2j5OgXnU/Ddk
MwyPmUxuM48CBX/kfBQ3YPNZpQ2YcyiwejiZuXwzCVlfkWJXMynw+ovwjDGQ
0M7kSDCkU8DjU5Ty5q0kJPdWvaOMQgHK+7/l221IaMboWqr2PwokdPiAlz0J
LeVtv1j8hwILWz98CnbE9A+0tyz/RYGSRuuww84kFOaSv6l4mALrnz0TnXYl
oad1+wRa3ynQWWN09bI7CakEN7HufqXA7kclK/K9SOgLfe8qg0EKsO+pvLjv
S0Ln1sxVVvVT4GxJuvPTPSR0NXdvrFkfBZRv4f+0BpCQxzKX1KaPFHhw/fiJ
3iASmjhf9s/uPQU2Z9Flfu4noZcHtmf2dVHgY3pAESOchK4E6l7w76BAUMqA
qTCShGSlzd/T2ygwccahUzKahBSWJO2Pb6VAakLznkVHSMg2Rt5d+jUF1E6Y
8rSOk1CMikRefhMFqmMeXDCJI6EW8/Omxi8pYB2pvnRLAgmJ5RoNW55TYHB/
dpXjaRKyGmGc9qqnQPi+edt8zpJQ5lPfdaw6Csz6nfqyP5mEOuy97S/UUOCK
Jy/y6EUSCi2zeq1RTQFt11D82TQSmh5NKHrxiAL1jt9zMjNIqKk6juJZQYHt
tq4Gt66SkFJjdb7gPgV+oPam8mskxNYtfZldRoHoTZvcnl0nIZ17X51M71CA
ZFY91naThKQL/7h+LqZArsmKhE+3SGhg1qM7rpACBoY35X4VYfiPdr5Uv0WB
xhWyd1mlJPRsyZB+200KuC4/v0FURkLHVugqHMyjwJ8l0++lyknoj6btSeVc
CpxYdChQ5RF2v2Hf/tfZFJCW+zOhU01C7t6+gwevUuC2tHfa2lqMjyuCPy7N
pMAa8nsN9JSECnfud+1Op8CbOas6p+ck1EZv3ZuQSgEv4VN7v5ckdONmu8j4
IgXoAsMfYc0k1N153eBPMgUS2UUxx1tIyKDKgp53jgLytEUS59tI6Ft/LNp5
hgJ3/qbevNpBQnFcmqHUaQpY/JwzLuwmoZyywcrWBAp0fz3a+vADCZ1tMuo6
HU+Bvf1Urxe9JGQZHJVoGUsB7gd/xtt+EjIvz+8WHaPA+c5PSQODGF9SFB83
HqGA6hv7RX++kVCCU5xRUgwFKpoaH3B+kFDrxktbtkVRYMvztVvEIxjep6kj
Ugcp0Ft7r0/mLwkxLrJleyMoEFKpFrp4jISCu7zaboRRYOr+1RldGgltt2dM
Be2nQFqpxBVTJhZP9UVFq4MpoH77pM5WDgl5x+14JNpHgZo8zjMXPgntsjso
272XAjbZIU57JkjI521P9c09FPh6+duviGkM36MGxw/4UeDARZfjsSIS+uoq
Y2npQ4G5s2+kL8yRkP5v+ldZLwpkndpQmE0go7acy4v+uFNAN7ZyXTGZjCLc
Dj14uosCzw5rd1TOIyNNi38bU3dSYMfB/14IIGPrw53ue5wp8DN0AbdzISa/
tvFbvYMCRwLPJg/Kk1HgIa+zc9spILFncvGoEhkd862qfWdHgRtekZU8FTLK
N1kWnWNDgVW7fm3FLSUjB9fsm17WFHi1w3NwgTqmb52uppwVBdzsug8s1SSj
pnUr9r/YQoF/Vgi3UoeMDKuKDV02UyBu85NrZnpkdK900fGWDRSYb26wcpsB
Gdm5DiyYM6NA0ZrCRlcjMgpTeUcdWkeBtauUdu01IaPnZjbf51ZToF330r/I
dWSUpf0y/5IBBXw0xfHxZmSk9lRxw7/lFGAuPSJ7cQMZmVg5T151oUCSMqU0
ZzMZ7SPMNoqBAoryeyxKgYxEYaHSgRYUKJPpe1e9lYw6pXV0GrD5NkrY7Wuy
ISOtj0ucHU0o8B73crzbnoy67w67HzGiQMCMSepXRzKSqcFf4WDz88fvqo85
k1HuPG9uiT4FUjhLagWuZLT11mffOF0KLKFn2hE8yOj77i5KuA4FKkdJ32W9
yejF7P7UQ1oUQCNx0cv8yMh88JvvOcz+/m8skqE/hv+f4da76hQIHQi6YbGP
jF6v3UfoV6PAzMcvRrbBmD67jcPzl1LgcpdTi1soGenEC065LKaAZluL574I
MkLotUO+CgXqms3phw6S0eNx7WH2IgrYv3h4OiGajB563R3foUSBb3WaSqlH
yGiTXEhEjQIFDlbl3r9+HMOvwtxwuTwF8OUylnfjyGhS/5RFriwFrt1J6q1J
IKOn2/SLlRZSQL9wPOTVaTK6NF2QlD+fAi9uRAjfn8XwDDSYNZChgPO1nxlD
yWTkaTBp2ypFgV8Z7trUi9h4623Xg+dh/fBSZ/1E2n/+8FbLSlJA8vyWHaRM
MnJM2+TXSqZAfmLtiHwWGbktu3HgDIkCxnH6xzRyMPx/dTdsJ1Kg5cgtKaM8
MiKwSVVqBKwfHlK4vTGfjIp1DR4LcVg/DEtZa38b49+kqfnfuTE4GSRq9ygm
I8H+8uav4jGQ9Y/xC7pDRrvMV30amh2DEu9/7Oh7ZDR4S5tMF43Beje/84nl
ZOTVcEEgickdTj2q6Y/I6NmVFzvWzYzBbnubRzeqyUj7aXb7QeEYsLe+sLpX
i/nTF7vy2fQYnLNc/bnuKRnxfMt3KGLyIos7ES3PyaiWUauaNDUGD9Yunvv4
kox6g+Zfmpscg81GGdk/mrF8eEp7lIXJH/WI+vQWMjpX71m5EZMDtWJfTrVh
8TFM7JqaGINxNeZOiU4ySiB7+3/A5EsqgaOK7zA+Xi7++xKT1RQG4zQ/ktF5
DWthGyZXzd+xcHUfll/0VYF0TN4q+bpk8wAZfZFrllqN6f+MNzN3+EJGxpb9
C7IxOVxU3u01hNWb46mvFmP2zk5oBIQMk9ESO3pVGyZncq8JDv8io0Lf/Ec3
MP+0GVKXkv6S0R65lsE8DI+n/xKXZYxhMi64tB3Dy+HXfwsiMrqcHUvRxfD+
PhRm+4BJxuqpIqcRi0f05x/fnnLIaGLFwuQrWPyIvbui3vDJaBwaJe9g8b3e
/ZbYN0FGZY4eyWKMDwbtm/N+TpPRBtq3T2UYfxpfPV7FFGH1zPJB7R1pCuxs
0H0tnCMjUgdlEofx9e+TfI95RAnk/OlxfRvG7xPVclhHkkB9caqpYiw/pCuS
E7WlJNBqU7meZ0socOuuUGHNfAlUnEWUI2H5uaYo6t4WWQnUZLktjLcC64c3
/27aoSCB7n+y1LixigKeOT49PoskUEN/v6+8KQVomR+CQ1UlkOmTMZk4rP6d
SrWePrpUAg19nrdcgNVT+eRnl8+qSyCR2QLFSqxe3zltpHVFUwJN3d5K/r6b
AubxJU9v6UigSs+V6c1YP+o6quJYoSeBhG2Cy+VYP/SPSv/5zEAC1fUzikmX
sX4Y/t+JjgTysn9eu6sE64fBx+f1m0ig31JC1a0NFFDZSy/4tU4CPbBJlnn+
BeuHPgFr2GYSaPfdOwPsGawfug+0iTZg1989OZ2Href7nB18pS0lkD/58H0N
bH8UvL2ZpYIkEEOpWX4ptl+dsjY9t8JaAp103/VWlkeFtC0PVNbZSqDSFK09
9EAaaGxQf4i2SyDp+jBfqTkaPF6XjZx3SCC9tIbFuD90sDGeN+DnIoGmZ/sp
jO1M+KJ/Kjx8F+ZPsNWb66/ZEKn93xNRCXSJU3nW4yQPxMtCs857Y/r9Qy4v
PiSEuU+3BTE+Euj//7//fxPdSHc=
      "]], LineBox[CompressedData["
1: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
      "]], 
     LineBox[{{0.3224838021075847, -5.}, {0.3224915706509504, 5.}}], 
     LineBox[{{0.8008916499217502, 5.}, {
      0.8014003133394005, -5.}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    StyleBox[
     LineBox[{{0.825315, -4}, {0.825315, 4}}], 
     Dashing[{Small, Small}], StripOnInput -> False], 
    StyleBox[
     LineBox[{{1.257222782, -4}, {1.257222782, 4}}], 
     Dashing[{Small, Small}], StripOnInput -> False], 
    StyleBox[
     LineBox[{{2.79355, -4}, {2.79355, 4}}], 
     Dashing[{Small, Small}], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(K\\), \\(11\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"\[CapitalEpsilon] \\!\\(\\*SuperscriptBox[\\(\[HBar]\\), \
\\(2\\)]\\)/(2\\!\\(\\*SuperscriptBox[\\(\[Mu]a\\), \\(2\\)]\\))\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2.99}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.764518887711062*^9, 3.764518920358433*^9, 3.765018018989174*^9, 
   3.765021894726203*^9, 3.765021928950588*^9, {3.765021976717808*^9, 
   3.7650219950840797`*^9}, 3.7650220732521343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"pm", ",", "pf"}], "]"}]], "Input",
 CellChangeTimes->{{3.765021998539019*^9, 3.765021999225236*^9}, {
  3.765022079912431*^9, 3.765022081464163*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA+ikbu+Z6hD83d6ij5JnYv/gcNpPj
uoU/V1pUpgFk2b/2D1Fr4PqGP3IuQg+GKdq/8vWGG9p6iT/BZquLWajbv+vB
8nvNeo4/kdQ5Vr993r/uLGUeWj2UP0T0ZTm32uG/4MQ830A9nj/3wLdEIo7m
v18+Sks/3Z4/AQTd3r3V5r/et1e3PX2fP+fy8cUMHee/blW5R51eoD9hjNub
1Krnv2xI1B+anqE/KOSghHPD6L9oLgrQkx6kP4+jACyw6+q/Yfp1MIceqT+t
WKyIBynvvz5kNABBdak/HqFPaTly778czvLP+supP+M02GZru++/2KFvb255
qj+kXARy6ybwv05Jaa5V1Ks/i6vF93258L88mFwsJIquP2oluZXx3/G/C5sh
lOD6sT98p/7/BTf0v/rPAHw9JrI/U75iSRhd9L/oBOBjmlGyP1XVsSZBg/S/
xm6eM1Sosj8gOaX02M/0v4JCG9PHVbM/JfLPGzFq9b/46RQSr7C0P4BnCd4D
pPa/5jgIkH1mtz8uck3/KzD5vygThdT6jrc/BKHm4GJX+b9p7QEZeLe3P58J
gWW9fvm/7KH7oXIIuD88klBE3835v/MK77Nnqrg/8yev8ONt+r/bAzVa57W4
Pyaw0QeEefq/LEgFDg==
             "]], 
            LineBox[CompressedData["
1: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
OA7HLcnH+UkY/A+bXdJJ
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$1147532, {}}]& ], 
          Annotation[#, 
           "Charting`Private`Tag$1147532#1"]& ], {}}, {{}, {}, {}}}, {}, {}}, \
{{}, {{{}, {}, 
         TagBox[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.004583333333333334], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           LineBox[CompressedData["
1:eJwlVHlYzGkcr+lQU0iRoVJCZWNHu9Fq8FVWSUWH6NkHT0gqng5aN7sRNkcU
oaxIl2hzlIqO7zvTNU02XZ6WQodOlabpzmh/76/3eeaZ/z6/z/dzzd8d6LaX
o6CgsJ/50f9vqdJq590uYLZH0mLPL8Cx0/55Idd9odylXJThLMETM9Ptm46H
wGYvaVzNrCo81mlioZZ2Es4+tgqo2laLqz5tvnIr4Aw8cRa3Ra+ow1cOmhzz
C+chWryuLrfmHVpnig8X3LsIvQar3DttGjBn3rkvrjkRULyhYU7e5Y/4d5HR
04O+kSAwOuTF2dmIDaMsASjTzZY+9G9CPf6Hhaqh0dB490eHXQHN+Ju3gH4R
srri6tC/BWNj2AeL7MSuSrs+4/uKYfeWpDuQ/3vff+ZurThHeeu0pc/vQnLm
UJEmtKHnSpYQhMnldh5m7ehkFW7j1XofMlMMW2KndWC3K2UYD+HmyrY7+jvw
8oH28VTpA5gbwfXSqO1E8wu67yqGE+BMyKkG1cwuLI9fnyWTJ0L3codNSVFf
cD9DnqecDOuNBTcsg7qRW5cQtJqbAtv2eKiNOfXgIyq31kMwqscvlot7cSOV
SzcVogyVlhqqfMUuKq/+I7CqOCbobfyKFxl2lcaPYUOXVb3fzj5cvP2qaNAs
Dbza3SZOv+7DMuaYufx/IDzxvOdrayn6RfachOXp8CjM94JPqhQZMEayJxBW
e/WHXbx+3MKIw0gO6pxAlTcX+jGRYVeX8BR8hzqMRMP9OCCvPdpp8gx6Pm3s
cPSV4a+XqADPIMEy3vbUOxne4LGCwnbLZak+jgP4mYV7Dke9Dwh4BQP4M/sy
YPDSaGW8xSCeJRJGoQwwbW5V10kexBrmesYDKGsaCzmhN4QL6qnhmRDln2fa
FTmEh3zpAS9gAvlZAerDWDhoxlz8At5v93DnnRlGnUlAsF9d6To0PowsmjgL
zCIKdXlHRvD53a8pJY7Z0H6lxOaKbAQ5rGHZcFM/DvYGj6LbZAChyRZanvSN
4gNqX20OeOyvOHEqeAz7qT2eL2FAqmX9UTaGtlT++pcwlm2Q03xkHKOovDtf
gZJjXPMd+Tg2H6cFeQUprXGKeue+oQUreC7kXt8oDJ4mx9DodYyCuaCBb62f
x8ixypg9GMSxN+W9Jt9xPk1/Tx7MS7bhCbK+YzC1IygfDDxvuz2yn0AhvVaW
D73x1+1c6idwxmSAIcq+blH8LwqEpTdaAPpv+ZWSMAXCwp1EUJfl/LSsWoEo
sI9A8FrMazBSJA9LHJnEE8jp/8O2IUiRuDDt1T5LQDhntZJApEhGaHuKCKgF
qTxVmcUh9+fSAgpBxyT0oIMfh2xoogcLIfqQ14AOckhfCgUUgoNIf98hXSVy
m6JJhLBBQX7pcKASWcuI5aApAsGCvrwlEiXSMU4HRwQmsbmDSSbK5JqINRhO
n8j40B+mTNg6VorgRYSgemGrMmHnRbsQarYLpc72KoStn3shNHP+NQ19rEIm
56EQVNMCVlbPUCVs3eoKYd33xmqP46rkD7omvCIIU1S8Ob9VlZiyBhXBjuqi
xU5uU8gbdi6KwNXJ27FHOIUcoXX6UARVW90+GliqEUOalnnFUJlgxRl5qEZK
qXxexSC2tVp7y0idBNJz44shdkmAAe+OOplN6bUUw5OlZzxjeFyCFG5hCSxq
jPSzjuGSfT70lUCH7Oh6AwMNQseJSSw0XLm2Zm+iBqFpPNpZAqKgJdlWfE2y
kx3UUpht/ck0L1+TqLKBKgVLXx87fZephK7zzPRSWFPtzQ9rm0rYtftaCl/8
k64bh04j32mdLcRQvHV2t5nRdJJM63pQDDHOI2nlhdPJpskCgWV3us38FVpk
iLoxKAbriOiNny9rkThaJ6sy4O+K8t7UpkXsWIJlIFNW5YbaziC9bB3KIOLu
X+334meQmzTu42XgvGqCW6WkTdawAygBbsSfs1f7aZM2GtfTEsgNN0uZXq1N
Itj4SUDvzW7R4TU6hI0LpxyWzw1/kZiuQ/auddzSzy+HyRzPJP8DoJhlmA==

            "]], 
           LineBox[CompressedData["
1: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
            "]], 
           LineBox[CompressedData["
1:eJw123c81e8XAPC7b2lHRNpTSFHaziNtDRXR/EolVLQo7dLWjgbaRSlFgyZS
2ruktJRcd+89+H18nN/95/v6vOK5zzjnvM9Tn2/niLipC1kMBmMCh8Go/29k
/9d9SK4IGPTHodiZM7255w0RvLdsLdkKzOLHul6zD5SIoB+j8NMxxrOipTWW
y6qPIvAwhnYKOfQHnL69NUyrEoG6ZkFAzhkZPHp5dlS+RgRC9zmDhIlqWPxg
1ZG2HDF0YGUHPZFooc21MX/WOohheeH4MSMv6aHotIvXz25iyPTibmOoDRB9
SLYeBohhgu/gyGS5EeyTiqkRxTDO5ZvnzVsmeFg/3HQxSCZUPnKdZoZFkfUf
MXzrbn/h5CcztAobfOt5ghjuN9uibj7cAvfHNWW57xRDxNRXjrNSLLBw6O/J
+46JQfXt/d1OPy3QwvPGSUWWGOK7cMY4u1jhToftkil3xNDZa3PmrIlWiGhZ
P6AYFjpO0+5aY4X60Ry/Uc8vXvpIMqyQr7F9XiMSQ6NBvQR77lshvPp9l+8m
MXRJH7LFr8wKduXnlw23k4C05Nrd22IrUJMrPO0iga6TM35usVph7r36CUpA
Bo06uTaxQaOrrjMXDJXAS/vCcLGjDepn9zRQAve5Rb9HdLIBdRjUiUjgp+VH
u7ieNuBtSQ1IXiIB94SuTtc8bJC7IoraQQm0fLmri29fG1CDUQuWwIoPwyb7
etuAPt6TEpBUzD5eTj3Tx3FNAgcippcNp57p7SuUwF2fk0t2Ub9PL/etBAam
D5n5ydMG9PR+S6BdL2+Vb28b0MMpJJCePcv+RXcbxpEUZvXr6HmSmm+26uPE
iJZS6OZTe/yJiw2Cqy6mP+kkhXt31lZNcrBBLbV7PfpJIXSyijO+mQ0uPQ0c
uNtfCmNbRceVcG0wlT4QKXxq5ql6bLOC9XL9gFI4HNQ6NExnhUxqtNwVUmCe
KFPuklohaN+x2NZJUhju+eXx3CormDfGUBEoBQFRvKv8ZoUL1GmUn5fCsldz
zzu+t8Ik+oClUDx5RhbvqRWM0+onKIW/Lo1i86nzPDeq/oSl0MrXe7t7nhUm
ULMLr5bC1eH7D8dkWkFfnx46KSxfO5ybmG6FM/XhzJOBa0WObMZBK4ynA0YG
38YcGNl6uxW09eHSQwai+VF3LiRa4VT98Q6UwbW9fsw2sVYYW38cY2SQ5xrC
i4ywgrp++8JkcPrVycy06VbIqF9ulAwWBZo23R5vhdF0AMogPeBz3R0/Kyjr
h9stg7IRuxdleVsh7UT9RwaBdvkrtvawwsjkJVQGy2DVwZzeE6l4l1PZNvee
DIqyJrMbNbfCcWr3il/KYHu49ehtphVG0AEtg7twdm2ozgLSKfUHIoPDZPlx
udACRwPqB5TBjgrx0fU/LEAG1Ee0HH4v8ypkvbeAuEc/KqTlUPAF/Lc+tkBK
2/oIlMOMNs8crfkW8KMTRA4PhLHpy7MtIKwvLxPlcH97x1dVJy1wuL4czJVD
t3+mP1MPWWBYffrGykH5cUlt8TYLCOrTbaMc/Fs7xXuuscDB+vQ4IAdDqW17
2mILDKETTg5hoq1R/P8s8K8+/HLlIPpXURU/1QJ0uBTLQVv1b6BglAXo430v
Bxev71NmDLYAfRx/5PAo/EbBWw8L0NunksPxU+5jx3ayAL1clgKYa4dvKLW3
AD291gqoYsrcxvAtQA/XRQEWS//Lb8xm8KE/Cnj7YnHMDLkZqGChMlgBySfD
34j/mKE+2wzTFNBmAfHYWmaGfnRBUMCVfau/d3xhBmqxVEArwCtpeu8nD8xQ
X606bFfABvee8+NyzeBFD6iAcys2vup8wQx0eb6ogL2fczK+HzMDXU7zFfBh
2GWPk8lmoMvfUwVkWzamR24yA12uyhUQsH1mz0ErzUCXlxoFiDucYLVeZAa6
HBionx95a5Z2phli6PquhMjo6rm/J5mhYUOUwLvyrf+nEWZwoAuMElY9YnDe
+5pBRMeDEqY7KGrKepuhkK7/Sgi4Nq5VdQczHKHjQwlb//U+ZmtthijaAyUM
a9XyaEe+GYbT8aKE9v3SegVaTNCaXpAS4n50XrRZYQKap4lKyLKPiSqqMgE9
velK8Mvs7t/oqwno4eYq4aNPKmfWaxPQfERSP++f/qSg2AQ0D7FKmLqm46EO
t01Al/8EJWQPNq85cNkEdHnfqIRcxoHddqdMQJfvnUpIc9O+PXDYBHR5PqCE
UcKf0zruNAFdfo8pgXBqO99dZwK6vJ5WQjB/34g5y0xAl88sJWw7f/VBk4Um
oMtjrhJKBnQ79mSGCT2inv2ulO+cZMJ4VcLDLdFJIQEm9EkJq3PGnvIcZML4
VYLLw2z3lp4m9EoJD86We9o6mzCelXDI9Xqm1tGEfinB69rTY/omJoxvJXj/
i2CymSb0TAnJ2ZOqnPVGjHcVrDkyYfRQiRF9U4FHv5FOiyqNGP8qsJkXzjlZ
ZkTvVNAqe4zTr5dGzAcVLO3x0d+t2Ij+qeDTGOeKjbeNmB8qyp2jP39lG9FD
FeSzssaMO2PEfFFB0H7XNoWpRvRRBR2D9vkPTzZi/qgg6XhY8dPNRvRSBfLF
jzJmJhgxn1Twy/LwhXGxEf1UwbDHZf5n5xkxv1RQO+Nc3bRQI3qqgslPAmwt
Jxox31SQNYMM+DrCiL6q4DZz9dnLg4yYfyo4e+360O19jOgt9X1/sm0x3YyY
jyrYt7/xn5kuRvRXBSMdg38HtzRifqog0KuHOoxnRI9VcHyGvf0iqwHzVQUd
Fkwbuonqlxp8VsH22JAFZ4UGzF8VlM8L3fnmlwG9VkHufc1JdpkB81kFE8i+
swGvDOi3Cvg7XiTve2TA/FZBrChw+p8CA3quhuY+D8x+1wxQVs91IzV4rstf
kXnBgL6rIStDXOCUboBNdEFQw9Yg7ZPDhwzovRoGi5RHnHYZwI0+EDW8Xt21
Y+ZGA/qvBuH8WfP84g3wqZ67wWoon7kipHKxAfsBNayReeqTIwywgY5ANcTd
1Yz1n2HA/kANAU+ifRlBBuhJH7AazvjnPHk+2oD9ghqa5Hkp04Yb4EN9+sao
Qc6ccTuhvwH7BzVcsn/Vera7Aej0WKuGWw9WcQO7GIAO5yQ1zJ0/d2+AswHo
8EtWwwYdyRrV0gB0uBxRw2ej08QpfAPQx5uuhgNlRw5E1uqBPo7zajieVrpo
u04P9PZdVUMbq/3XHKke6OXeUsN2z6b/flfpgZ7eA+rn/8w82O67Hujhnqih
YPPFv+Ef9fCa/qhh1K5fousv9HCW7k/UkLf4zqlGj/SQQBdUNfTJvW+/+I4e
AumCoIaKRTnB5df10IkOaDV86XYybmKWHuj2XqeGmIQ2S9+c0gPdvtvU4FI8
Ki70qB7o8szTQPbpFdsk+/RAl9PmGmge7vRk93Y90OXPUQO9mhUHem/QA12u
Omigbt7AIdWr9ECXlx4aCLuTeevcEj3Q5cBLAy/Js38xC/RAp+9ADaS79TIN
n60HOt1AA9/c1vd0DdYDnR5jNDBk9+kc7gQ90OE8WQMBetN7c4Ae6PAL08AR
c3ylZage6HAJ18CJDd6DGvfXA328URqw7fKBrh56oI9jmQYiiwuXju+mB3r7
1mggItln0iZXPdDL3aKBsjO8TSUOeqCnt1sDbWq/3nVopgd6uEMa0MozyhK4
eqDbqxMa4EUNeiey6YBun85qoPuY5u9i9Tqg26PLGvDglfvwFTqgebuhgYpu
ky7dqtEBzdE9DRDLqZaJlTqg+SjRgObmy4/Tv+mALvcvNTDlbe77oI86oMvz
Rw0863H8aMwrHdDl9LsGWqin7L/0RAd0+avSQGjextEtC3VAlyuJBi6wLWWX
CnRAlxeNBkqcm8Suy9MBXQ4sGphaF+6ZckWHnmvhUpEpnJ2pQ8+1YPi9Of33
GR16roUJow48HpuhQ8+1UDlr+/Wlx3XouRb+LDVqUlN16LkWOE+bXe+fokPP
tZDufialBfXnDZ5robgEnE+c0KHnWji4TVH254IOPddCXcLM+/ep9TR4roWF
gzxGvGTp0XMtjBjd7eePQAN6roXYntf39J+hRs+1kHbpRkGnqVr0XAuLQi0/
ORe06LkW7Kp8Z7x+pEXPtVDUavHzL2+16LkWbie6PYr5rEXPtbA3Y24S/4sW
PdfCUd2HdePLtOi5Fmpnq/c2+aRFz7VwrnzJrOfvtOi5FlZvv1n7+pUWPddC
4NQupwKfadFzLTh/qbQsLNGi51r4WDy6Wf+HWvRcC6ExBelPC7TouRZejrqe
1/uGFj3Xwm/XRiXRV7XouRZKv7T1Ss7Uouda6N3UIT/ljBY910Hw0sLyPWla
9FwHF0e/SV6eokXPqXNWrSwK3K9Fz3Wwz67ZiXa7tOi5DpomrRhTtUWLnuvg
TkzbxAvrtOi5DtJX26WHx2vRcx3VfxjVbeO06LkOTv1rv+ptlBY9p/KiZnbt
lggteq6DMQecp/afrUXPdbBi/RtHQYgWPdcB39vu97HJWvRcB48jH3cdP06L
nuugFWf3MNsILXqug6PeP6/lDdOi51TcSXYKFvlq0XMqD38e/9CxrxY9p9b3
zq5dhZsWPdeB3+oZV4921aLnOji5vqIgpL0WPddBu35xl5yctOg5lXfKC77f
WmrRcx08H7Cv81k7LXquA3vbxPFLqLxr8FwHXxi3pvjVatBzHWj7X/RqadSg
5zq4NULiXa3SoOc6aHlgr0chlecNnuvgvX+6Iq1ag57rYHBs5ZR1vzXouR5q
Q93n/PdNg57rodo/adOYTxr0XA+V2VNP+LzRoOd6qIOg8K7PNOi5HkKebnJ2
eqRBz/UQfnXfm+b3Nei5HvIyC3bZ3dag53r4PejlZLvrGvSccuZaWefmVF1s
8Jyqy/YiO8fzGvRcD01nVPbqclKDnushVvBuhPcxDXquhz3DZyWOpupwg+d6
uDuxw6e5yRr0XA+k8nPQuu0aWEcXLGo+a78p0zdp8O8H9DBt76ebxYka9FwP
7ZqTdNFKDXquh+vNozMdYzXouR4e5kVLxlCONHhOObx84oQNERr0XA/fG3/8
kD9bg57r4Vu1w0ztdA16Tv38t2lvB0zRoOeUU80n5KwL1KDn1M+/O5JXOkqD
nush9cb+Z/ZEg55TzljeNIocokHP9fBiiv2CB/016Lke/vQs/+lIudrguR7+
mz8zPN5Ng57roeVCpam8qwY9p/qmdluy/SinGzw3gOa/l1GX22rQc6pPS17X
r629Bj03wOWMLFZyMw16boCxF6dWMBtp0HMDbItzub2epUHPDXBu1K79Fqsa
PTfAHGVo1EaDGj03gPbW3mFctRo9N8DpeZxGB6Vq9NwAfQ/FPO9Qo0bPqfk8
+rgm748aPae+f9tjx7E/1Oi5AYpu+Z3++0WNnhtArIxuvuWDGj2n+rRWbgu6
Un1Tg+cGGNa1z4kXT9XouQECl7plr3ykRs8NsHgAM6Uz1Yc1eG4An5nf/D7l
q9Fzqg9tJPyyK0+NnhugcSVz+Aiqr2vwnPr92xVL6zLV6LkBhMtnJxWfVaPn
BrBlZcD2DDV6boC/hrWCicfU6Dm1fvaGzi6H1ei5AfSifo7ivWr03ADdC0YX
P9ypRs8NUB2e5Zq6VY2eGyB54a9eyzao0XMjLD0eVzlpjRo9N8Lfrc+h30o1
em4E0cZJAU6xavTcCJa1kTWMaDV6bgSH93aj5fPV6Dl1T1nQovPvuWr03AhF
bp8OfaK8bfDcCJ+8nqS8Claj50Z4PC+ox7PJavTcCJmv/414Ol6NnlP3plCZ
4PkoNXpuhLadypq/I2r03Ahn1vELvg79v+dG6NpZ9b3aV42eU/fMa4y1euoe
0eC5Ecomle2z81Sj50ao/rLJoQt172jw3AhVIYtVw7qq0XMjyP0MU2d1UKPn
RuiR6uq6wVmNnhth47tr4845qNFz6l73vfTbyxZq9Jx6rhj5XG+nRs+N0Oxf
VasePDV6bgR4bpcXxlSj50Yo9/ucv9+qQs+N4PrLT/+Munc1eG6E+7fPrudo
VOg5de8Os5syUq5Cz42QZUyK2SlSoedGSL91pvTNPxV6boKExl8XOFWq0HMT
PPbxHbLguwo9N0Gs0H7MrS8q9NwEHq3b7+J/VKHnJki7/cU0540KPTdBxohL
aQXPVei5Cd59rIp0eKJCz01gWJ0ye1WRCj03wdjoyYnl91TouQmcYzQFw6l7
bYPnJmh+MsMlK0+FnpsgNLv/IfscFXpugpE9O3VKuqRCz00wLHDHY915FXpO
zX/+pDWLT6vQcxP4VoQP/ZemQs9N8ASyGocfVaHnJijUOVX+OqRCz03wK8fw
IJy6tzd4boKiFU/Tq3ep0HMTlCyZuHbpNhV6bgI2VAYbN6nQc2r+OeKeO9ap
0HMTVE4uUjquVqHnJriYNPNq9goVem6CjUE7RvrHqtBzaj+a//5ZEa1Cz00w
oGufiNULVei5Cd4HVr9znKdCz01gYq/zuztbhZ6bYOu4kui5YSr03AyhVxev
5AWr0HMz+HztOzNvsgo9N4PDkE4u/wWq0HMzvPJJz20xRoWemyE4Ksn58QgV
em6G07uqpiT6qdBzM3iOnhbmPUSFnpuBP39pL/kAFXpuBo//fhZd7adCz82Q
enlPu1hPFXpuBkZ6+iBvNxV6bgaTwc3B1E2FnpvhUlzK1ZJOKvTcDAk7Yqz7
XVXouRk+6j6z57ZVoedm6B9mKvRyUKHnZui82Mmd01IF3emAMcMZu/9GfW+i
wr//N0NuSqXdbb4K3tEAm2HV8dR1h9gq/PcAM1SF3Ty0rE6Jnpvhtr44cKpF
iZ5T6/u08pSvQYmemyHD5Hi0vUaJnpthz+ZiD75CiZ5T62/jMUsjVqLnZvhv
986OfwVK9NwMs6s/JX76q0TPzWDXKyXy2S8lem6Go8vn/n1YoUTPzVCzfIgx
/4sSPTdDo/BR+258VKLnFjjtfCAj960SPbfAwBXL/PJeKtFzC1gu1kbceqpE
zy3QdFwp/16JEj23wHtlcO+SQiV6bgH577EvX99ToufU7w8s+fMtX4meW2DJ
mK9xohtK9NwCJd26r7BcU6LnFmhxcpSgxRUlem4B5yHfXvTIUqLnFnDvs9WF
nFei5xaoThqZNuu0Ej23wCDtisLEdCV6boHkQSVj044p0XML/B5X6fvwiBI9
t0CiZcOOvweU6LkFqvSTBtjtVaLnFph0p7F//11K9NwCPfYtygrfpkTPLbD2
ULfIA5uV6LkF1uXUrS1er0TPqfFT7lVp1ijRc2r+pc6n3OKV6LkFUjf/y5q3
XImeW0D67l9t+lIlem6BhOM1Z75GK9FzC7zZ9yDZKVKJnlug1Mf3YViEEj23
ALvSzSdjrhI9t8C3E9GSPzOV6LkVnJ1Lq9xClei5FUL39XVZNU2JnltB/Wbv
3uLJSvTcCgMDHw5qMUGJnlvhIuOSa/hYJXpuhaVRA3xvjlSi51ZoFhuU1Mhf
iZ5bYWTGcFb4cCV6boVI9695dwcr0XMraC947G/jq0TPrbB5ZFnqSm8lem6F
G9yXTz/1UaLnVjg3h9vR112JnluBM3xbRlpPJXpuhcKmo4czuynRcyscy51Q
F91JiZ5bgWqeKj+7KtFzK5wOH/bb31mJnluh6tAAU24bJXpuhUO/j3h0aa1E
z63QZvvC1anNlei5FV73u19u10SJnlvBNm3+hK18JXpOrc/36CcLW4meW2HZ
yVUxqxlK9NwK5UcYHcQmBXpuhafnjm0VqRXouRXIoGM6qUSBnlthXOPWidp/
CvTcChc8ncMYvxTouRU65J5XtyhXoOc2mLrC63DX9wr03AbnTy73HfpCgZ7b
wKHZi/LpJQr03AYjng1ZmXBfgZ7bYGHLc4y0Wwr03AZxnHs7H+Uo0HMb1a90
qZVmKtBzG7zcNiDc9YwCPbdBcetR2ZNPKNBzG7BGp3/dcViBnttgUqdVNY+S
Fei5DdbMN31kbFeg5zbY9Gj38YCNCvTcBkU6+1F7VivQcxvEaNsXf16mQM9t
wAuT1XWJUaDnNmAsU9jFz1eg5zZwZB/48XK2Aj23gceONtHdpivQc2o/8ns+
3zJZgZ7bYPqXVfq/YxXoObWf47nfx4xQoOc2eCtcejB3qAI9t8GeAV8+uw5Q
oOc28PR+8W5vHwV6boNbdu6JjF4K9NwG4mZO71d3VqDnNnhxsPSN2kWBnttA
cKRb3HIHBXpug/y2sjxNMwV6boPB78uPJPIV6HktLOv9xoHNVKDntRDrqPU8
aJaj57Xgltv8RyetHD2vhQinDc1vy+ToeS3wvle+m1AjR89rYYuTrLewUo6e
14Jg7IPGOyvk6HktbC/kPHT7LEfPa8Gu+GDuuzdy9LwWHnmVNkt8JkfPa4Hr
wdN1fyRHz2uhTxN5wJd7cvS8Fn79J3DZc0uOntdCV05wjP81OXpeCxUZuyda
s+ToeS0wM7yj752Vo+e1MDA2p3Zduhw9r4X2bW1mkipHz2thefvXMxofkKPn
tZDzQdOhbJccPa+F0L8tAi5slUMiXQBrYfqM0MKE9XL89/5a0MZ7HZ6QIEfP
qf1uvf5O92Vy9LwWZgli+rJi5Oh5LfiJl3H/zpej59R+txvaq3SOHD2vhU2p
H25fCZWj59T4NWVzU6fI0fNaOJBpXrA1UI6e18LcsG45K0bJ0XNqv7Rb+keC
HD2vg0u/HE2zB8vR8zqQSQaapvvI0fM6+JeU5B3sKUfP6+Ds7CPngnvK0fM6
SGj2cWRYZzl6XgearnFO/7WTo+d10FX63im6jRw9r4MjpSEBCS3k6HkdbOX8
d2xHYzl6XgdvNEGt0thy9LwO8ssPX8u1ydDzOpio3r/kpUGGntfB3K9Hx9ao
ZOh5HeS2rQa+VIae18H2U75BvQUy9LwONu5jrQ6qlKHnddC7ZUleYoUMPa+D
1R9ltoufZeh5HTxu3WxG2VsZel4HXRzOFfNfyNDzOqgeNsJ7+GMZel4HiT4h
V+IfytDzOrjpNtsjr0CGntfB0/tbcxV5MvS8DkyPIn37XZWh53XQl7nmbnym
DD2vg+KwXgMfnpGh53XQJsPhCj9dhp7XwciAt21DUmXoeR0ccklNvHhAhp7X
gQO79KVxtwzrO4NUN3FvOnmbDN8fYZA+H1cOu7RRhvWeQTzODw7jJMogno4H
Bglsz501f6UM6z+DZK1vMa50qQzfN2GQJRvyXXpHydADBln098m7QxEy6EjH
C4PsmzdknnW2DH1gkHWJcW+jQ2X4fgqDlNotdKyYIkMvGKQJGTlw4gQZvKDj
iUEOGXf0eTxahn4wSMFYs2movwzfZ2GQb6fjjhUMlaEnDLJ3ykiWr68MVtLx
xiA/b80fXtBXhr4wyEybV8BQdxm+/8Igt1p725d0l6E3DDJoQFx2YCcZtKfj
kVqvshH/q4sM/WEQ0/iJoxa1keH7Mgxy1q+ojamFDD1iEFJsf2+fnQye0fHK
IMXzl7h058rQJwaZfijBu6hOivHLIEsLIjizzVL0ikGet/fYa9FKMZ4ZxK3z
yOcnFVL0i0F0dxrfGCGWYnwzyJwNKyPE/6ToGYPkdB2Tm/JbivHOIOYXbpf9
K6ToG4MUTh89UfVZivHPICsv7M44/06K3lHzv5S/P+ylFPOBQYYsWNW7ZakU
/WOQXf/qFr4skmJ+MEjyoviAnfek6CGDvElILRp9W4r5wiDZ9su/NsqVoo/U
eLnt9r7JlmL+MEim55WvKRel6CWDDPg18MHcM1LMJ2q+ST/6u6dL0U8G+W9y
PjGnSjG/GKSy4uSvVwel6CmDNEvt1vRMshTzjUEGRi56mrBDir4yyIT4hCZB
W6SYfwzybsDsH+7rpegtgyw4FdHfbrUU85FB8jxyWkuWS9FfBnlRuTj+7RIp
5ieDXOV8mHlrkRQ9ps7DrdWjjAgp5isVfz1jLu6cI0WfGSRI3bRRfJgU85dB
+pdcaLpwmhS9ZpDhD5ISQidJMZ8ZpHZ+efiEcVL0m0HajbNcDRgpxfxmkPiK
mpjhIEXPmWSV4dXpwUOk2L8zyePkOVRMS9F3Jilslhs4uK8U+3km+dPP5/Uw
dyl6zyRLN8pvj+ghxf6eSZIeP2oc2FmK/jPJjX1ez0NcpdjvM8nRBYtkEU5S
7AeYJMRz4JoVraXY/zNJ7ktr5LZmUuwPqPHntC843kiK9wEmuWmftPA6W4r9
ApO8/uy/4nmtBO8HTOJ2/MePKpME+wfqeYP6DFMnwfsCk3QZeKGos1KC/QST
fHkxbtBIiQTvD0zS+7V7s2iBBPsLJnkz9MrAg38keJ9gkmeFw/Lv/pBgv8Ek
qh6hO6vLJXi/YJLsfSsv23+SYP/BJGkzm7Ub+VaC9w0mWTasd0XCCwn2I0yy
+9HRf1eeSPD+wSQzHQqGVhVJsD9hknFfp/9wvS/B+wiT2L0Vl4blS7BfYZK+
Ue7ao3kSvJ8wyYDK31HlVyXYvzAJr8fNTi6XJHhfYZLnU4La/Xdegv0Mk9x/
tCsk85QE7y9MsjHq9XvFCQn2N0wy5+7p3UNTJXifYZJbXZ5t3H1Qgv0OkzCO
OFz/lizB+w11PtvdnT12SrD/YZKxquz7m7dK8L7DJJclm1LKN0iwH2KSisUx
F/omSvD+wyQL/2pqkldJsD9iksXGXgGiOAneh5hE/viFZOxiCfZLTPL+Rren
2ZESvB8xyfYDJ982j5BAV7oAMon1YCYnfo4E70tMMquVIPJnmATfp6TGX1Cn
GRMswfsTkziqD2TfmiyBN3R/xSQ7Lrjt7hoowfsUk5wYOGZ/ymgJvn/JJM0n
et/hj5Dg/YpJ6vKfcTYMl8BqOqCZ5MDuxlu1gyR432ISU0eGc2x/Cb6vySTi
e9wPIi8J3r+o+F//79Iidwl0pgs0kxRN23impocE72NUPJ1acCO6iwTf72SS
4LLcGll7Cd7PmCQor7rfKmcJvKL7Nya5My/4sNVBgp6zyKCogBY7W0rQcxa5
Psbtkn1TCXrOIl38J4ae40vQcxZ5U1zu4sOWoOcsEp2tlZXWitFzFokLHVI2
0yxGz1lkzne3dyqdGD1nkaxW3bR7VGL0nEXO1zS27yETo+csYmua7/9YKEbP
WaRz4Ph1Ef/E6DmLZOy/W8iuFKPnLJKa3sY+67sYPWcRVu/CJRPKxeg5ixyY
U/RO81GMnrNI+1VZ3iffitFzFpkZ+vXq2Jdi9JxF1kTk99KXitFzFtm/43vu
xUdi9JxFsvckQehDMXrOIumnJpbY3RWj5yzCb715fPEtMXrOIhvtxv1YnStG
z1mE9OTH97sqRs9ZZNwQx+ayLDG+L8sipoXxGdnnxeg5Nf/1X3vGnBbDcrpg
sYhbZUyue7oYPWeRL/M43oqjYvScRTb31BTcOixGz1kk6qjPoPX7xeg5i8yw
tc8dtUeMnrOIZdOv0a12iNFzFmm9sUnery1i9JxFNvzIEeVsEKPnLHIwbvHU
TYli9JxFhAdSUqbGi9FzFrnztVF5z+Vi9JxFpsUeaFK3RIyeU/M1Ffh+jRKj
5yzy1zUz7OYCMXrOIhGupqUHw8XoOYv8Uu/eGzdbjJ6zSPOkvleCwsToOYss
XPVmv0+wGD1nkeO9d/q2DRKj5yxyKbrwU22gGD1nkeeR1tU1Y8ToOYvc7buq
9ccAMXpOxc/l6puFIEbPWcT53G7nnKFi9JxF7qWEjz45UIyes4jdL87hAz5i
9JxFvA96PE/yEqPnLOJR+p8s0V2MnrPIwM2H2St6itFzKp5KdmgWdxWj51Q8
KTa8XdRRjJ5T8/9cun9hOzF6ziK1Je9iFzqJ0XMW2Xbck7/IXoyes4g/9N8W
00KMnrNJ64f5grgmYvScTS75dfRazRej52xCptrP2cwWo+dsIrg5fFlynQg9
Z5M53/KijltE6DmbNPvdflSWQYSes8neykWsOxoRes4mez5FnXqpEKHnbBJd
Vt3rt0SEnrNJ9+8Hd+hqROg5m4zZ4P242T8Res4mC7pzFT0rReg5mwSE3eSO
/CFCz9nkT3CCdd5XEXrOJsxxrmVbPovQczaZMOfhvvPvReg5m0wZH9j72WsR
es4m8XGBOdLnIvScTXL+QXOHUhF6ziaumX23Dn8kQs/ZpHjy2JyohyL0nE3W
ShLupd4VoedsEihrdO3JbRF6ziZH2qUt0OWJ0HM2Wbwhv22vayL0nE1kzbtd
m50tQs/Z5Hr1qdAjmSL0nE3UFyN2vTonQs/ZZLzriU/c0yL0nE1GVAxhj0gX
oeds4vDF32HzMRF6zib5WwK5xUdE6DmbCOOvVTAPitBzNkns9Dhl1F4Res4m
8518wpN3idBzNvkQPM/4cZsIPWcTe2N+lOsWEXrOJs3L/R4t2iBCz9lEo33A
up0oQs/Z5OsrpScnQYSes4lXk9TckBUi9JxN5G1Ltl+KFaHnbBLSNCjRFiNC
z9mkA1OyMXiRCD1nkxubiWfOfBF6ziYpVRdX8sNF6DmbpC1ya7Zgtgg9Z5Ok
rl+Ol4SJ0HM2Od24a5uuISL0nE1+P0zZtn2KCD1nk7c1fcSiiSL0nE0GVfcI
CBovQs+p87r/bP+d0SL0nE3YkklfugSI0HM2ufimjcMBEKHn1Pk4dyurHSpC
z9nkIHdL47hBIvScTR7cnzP4T38Res4m5gfFC0P6idBzNul/MuDQK08Res4m
PUImPQ/oLULP2aRTdGrtwx4i9Jw6v+BJQ4d0FaHnHBJZ3mvinY4i9JxDMhO/
RAxyFaHnHOJ3enrNvbYi9JxDPpkPA7QRoeccIlnb8V5pKxF6ziHpmjdjJjUX
oecc0vl+reCrnQg955CQms4XFvJF6DmHTJp+Zq2WLULPOWTcRo/V2xki9JxD
dicXLWtrE6LnHCJ6uOJajkmInnNIVXqa/Si9ED3nkIyBu8//UgvRcw5p2vLa
vLUKIXpOfd+HY1PaSoXoOYeYV7nF3xEK0XMO2bz26O6Z1UL0nEMmH13Qru6P
ED3nkOj9PpzMX0L0nEPSnr/ynPxdiJ5zSGEynDGXC9FzDtl1MX3Opc9C9JxD
wovHLA77IETPOURdGF1h91aInnPIg24PM4teCtFzDvn9oupTwjMhek59v3/o
9r5PhOg5h+ydf+a0tFiI/78Mh3R/HNL2ykMhes4hA7xe911yT4iecwhnib7A
q0CInnPIvczKLN1NIXrOIdXvO44rzBWi5xzSf1vQld05QvScQ+yLLu0LzRai
5xyS6jXeqVeWED3nkMHjPWZZzgvRcw7J77c95MMZIXrOIa5DOzpknxSi5xxy
6DjZuz1NiJ5zyMuapYr5x4ToOYcURyR4j0oRoucccuzMo3C3Q0L0nEPazul1
oOV+IXrOIb5XbA/Me4ToOYccEURqanYK0XMOKTi+PfHrNiF6Tu3XzUjG6y1C
9JyK1x+iDyUbheg5h5yNuv/1wTohes4hlzv9rL27RoieU/GS2P/hvXghes4h
16a0VhWuEKLnHJL18c63p3FC9JxDbod0d/y4RIieU/HlJ2b8iRai5xwiWGDs
qY0Uoucccjw/9YHdAiF6ziHt7A4P7T5PiJ5zCH/LqXsBc4XoOYecPKEKjpwl
RM+5BERPffaFCdFzLnnhmDzmTogQPecSYXKfkpqpQvScS2KHjr/fLkiInnNJ
xNiMRcETheg5l9Q0Of/p0Hghes4lAdW/7T+PEaLnXHL+3ZOL7UYJ0XMucWNK
20eNEKLnXGIpjftxF4ToOZf4ZQutLYcL0XMuOTcpxrR0iBA95xIX1+nP3w8U
oufU9y27sW/wACF6ziXe3abtvuQtRM+5ZI/8vL59XyF6ziVP1/s4p3kK0XMu
cVgXurK9uxA955Id/oVrsnoJ0XNqvjPbPh/UQ4iec8k8d5d5H7sK0XMuWXm6
6vbKzkL0nNrfw3HT23cUoudccrFp7cV3rkL0nEueDOrXKNlFiJ5zyVXeibrJ
bYXoOfV9F+SFHRyF6DmX3G3097rBXoieU/MzyE98byVEz7mkHedh2ssWQvSc
S5SbVr0obSZEz7mkV47DlDdNhOg5l2yoLV32p7EQPeeS21OPl7EbCdFzLslt
9f11f54QPeeSSU0/OsdzhOg5l2QsP3GqlCVEz7mE1dF+ak+mED3nkhnLnw5O
r6tBz7kkPrDlki61Neg5l5DXSZ6F1hr0nNoP/20f4iw16DmXXA7skjvIXIOe
c8nUr+OPu5hq0HMuaT7yCsPJWIOec8n0caIFfQ016DmXGN8bzkbpa9BzLhnY
++DNR7oa9JxLgka12O9HPTd4ziVJK9ym/tXWoOdcsrsoxXSdem7wnEuafQvw
vkI9N3jOJU6c7l2/Us8NnnPJrWDRlqHUeA2ec0nj9j9+VlDPDZ5T803z9bhP
zafBcy65drz6VxU13wbPueQzd3PSbGp9DZ5zSWDw/Ig+1H40eM4lA3p/2DXf
VoOec0nf5Xs6NGII0XMqP0KODOvNFqLnVHysGbqxgjq/Bs95RFg6I8yDOv8G
z3mkU97TpwNbCtFzHrn2KE/Qloq3Bs955F75cic1Fa8NnvNIn7QV4+TdhOg5
j+RNb1ro30eInvOIe7DtSZ/BQvScR/6mTp1jN1qInvPIUSeBbARVXxo855Et
Tm9aRS0Souc8sshy8JTfhv97ziPKlEunyo7933MeGb5k2KCcO//3nEfCu28+
Z/nzf895pNEP6bIeTiL0nEfqioY6XZsjQs95ZNqhsrlORSL0nEd2Jr6TLJ74
//s5j8xbmSTd4CVBz3nk7pNnpzmvpOg5jzzd1Hak70Qlek79uecViynEjJ7z
CJHufLEj+k5Rg+c80upWzW3f9j/Qcx7pvO72wFNn/6DnPDLjqf/BXR5V6DmP
7N6w+sgr/j/0nNr/uRkrbx7+h57ziNXvVIG7+h96ziOnDzMebR1YjZ5T388d
pxEtroZ2NMA8cvhQ2oT8lGr0nEdWuse+8r1djZ7zyI9dQyamvKtGz3lkVeLR
x6Orq9FzHlk7aZw01FCNnvOIbcPX1J08AXrOI0dCdpQtsBeg5zySPUznPKuD
AD3nkZI5abzCngL0nFpPxbgB770E6DmPbF10ssMTXwF6ziNJT16EPRkmQM95
pOfMbnPV/gL0nJq/edPoxaMF6DmPtF5lbDF6vAA95xHLyD3vUycK0HMeuc7d
0WZJkAA955HivMPTy6YK0HMeORdxa8CvYAF6ziM7pF8tB6cL0HMeSd75y6wL
FaDnPPI8RtvfcYYAPeeRTXtPNzJQzw2e88i3QcKEUzMF6DmPFCYwD7WeJUDP
eWT+2gdRodRzg+c8ciPnz7Tl1HOD51T8mcVv51PPDZ5T53vcdrUf9dzgOXU+
PSwxv6jxGzznkcRszz1LqOcGz/mk9bqi0b+o+TR4ziezYvvcHEA9N3jOJ/fC
hnWLDxOg53wyeP79Nyep9TV4zieBfs0i86j1N3jOJ9q66xfyQgToOZ+sdczj
n6b2q8FzPjGeL+q/fpoAPeeT2L7bdoyj9rfBcz45vEPfqtEUAXrOJ8F8was7
kwXoOZ/0jD8/YvYkAXrOJz73Ip9pJgjQcz6ZbZqn3BQoQM/5xPPZsgVM6rwb
POcTmz/32ZqxAvScT8oCNt8SUPHR4DmfLIvPuDphlAA955Nk7ZtxlwME6Dmf
vL5cbrNR8dXgOZ8s39RneCARoOd80un9leRDfgL0nE/8b18b8YGKzwbP+eRS
heSI3VABes4nlZc6c/0GC9BzPtlwViZZPFCAnlP7HTxsZsoAAXrOJ7u9WMoC
HwF6zifTtwyf8qWfAD3nE/7z9lNUVL40eM4ne9Qhjfl9BOg5nwgu+s519hCg
53wievVzaK/eAvScT5x5lgk+vQToOZ8UbfO0DekhQM/5xD588gnoJkDP+eT8
Mu9h/l0E6Dmf9Fs3x4V0EqDnfOLCXBE2jMrvBs/5pHrAhC8DXAXoOZ+k8jpe
9HQRoOd84vrfBHWXtgL0nE9+tL4Z4OgoQM/5ZGFUl/N8BwF6zifv73kMMrQS
oOdUPE9I7lbdQoCe80nHzdN3fGgmQM/5RGqo2vmgiQA955OYRX/GZTYWoOd8
MndP7MX9fAF6zieRVj0zgStAz/lkR/aLkNlsAXrOJ33X/3H0ZwrQcz45Orri
Qfe6avScTwqSnmc3tlWj53xys23oNJm5Gj3nE2uTWW3eG6vRcz5ZF8Gad0Nf
jZ7zyYI0/oQUbTV6zidBDxfI4tXV6DmfqDayg0KV1eg5n4xoxkobJK9Gz6l8
e37vm7O0Gv4HLsrTyw==
            "]], 
           LineBox[{{0.32163659254434623`, -5.}, {0.32164952678328956`, 5.}}], 
           LineBox[{{0.7991941795151483, 5.}, {0.7997700502793935, -5.}}]}, 
          Annotation[#, {{Legended}, 
            Charting`Private`Tag$1147433, {}}]& ]}}, {}, {}, {{}, {}}}}, {{}, \
{{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
kyp2vQXC/5HB/wWpY1Yj
          "]], 
         LineBox[CompressedData["
1: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
gWI/e4XhWioK+ndYTqKIYftTixjeMioavzO9yGGLYVgQfbVRj4onaumCg7pi
8N9spyVlUvFFwcc/chZM4CzdBtNxCk67VnT2g5kYju5S2Vb6mYK7T519y7IW
w4gsLt2vm4JFBzwM7ZzEENr1aMP6Jgr+dlt0PNxTDOd0/Gx2lFNwnZViy0Nf
Mbza4uJwO4+CV406dHsPi6FMb5W1bgoFRVPyDs2OFIOGyRzqsxgKLlUIe+oe
LwZnhUMR6X9RMLzHefKFa2LYOGiUctuPgk3tc33qssVgeHmVHX8zBadX/yob
uS8GC/3s6D/tKeiT10xfWikGY/0GD8lyChYnZk5sQDHkfqlsKFpAQYXw4IK0
DjH8szVdUqBNQQc/u/E2vhguPua1vFel4HWXGRuU+8Uw81XlTc5vEqWrvtzC
ETGczrtx4fkAiX/o130LoUjgWt+pxmg+iZGsa7YFbAloXUlPCm0jsWV0/zWh
rgQuM5+vSKsnUUsCPZpGEgjmazKHykj0a9VY5WwugcLm9KPH/yaxpFx6Pspa
Aic1x7hmaSROyqngPnGSQJvlyvp5F0l0SkhYOuQpgW0lGUV2p0lMDd112tBP
AvkvLllmhpAo32Xe4R0sgffHM6Ys2keimaOKfnKkBL60Jn0d8CLxNIf7V3O8
BEwXlmTIN5DYqlfcOClFAgvzlRS1bUmcoRY9Y3mOBLzF/6icXUHi3p9bDgYU
TfTX/G42MCaxjL/4n5xKCUxv3rWPOpdEonkSu/uFBHLrtefqaZK4obRzF7tT
AvuYY27HGCSmZ/5dYieQwB1TQTiLILE3Npwa0S8BydONy+XDBHKOuHiUjEhg
/n1fO6UvBJ71nn+3lyKFoOZJyTskBL6xHxmbrSGFKnqQOeUjgTOXvXTcPFMK
WsYBgUNtBB7QvZV5wUgKqwLSnxg1EfiIFjJYZy4F89tJjUVPCaQM2a8ZtZZC
zYvIuJhyAjd+1Ele6iyFlQuPLSt+QGDm869S361S6PyzyNb0LoGfi+qXp/tJ
YbNhxFV2NoErUlPi2oOlMCaL93BKIzA6yv+j8kkpjPea639JJrD9kJWx1Xkp
zLvtwxi5SOBszyknj6ZIgZimkh4UR+BBG/mbghwpsCNvfPeOIrDCuHKuqEgK
vYldnQ0nCaRpXQrRqpLCtkf25Q/DCHQj9jQ4N0ohLrNXYnSMwFv9HK3oTinY
uz85b36UwIEu1QOVAimEfLor5wcTuKqWVznULwWpdPEes8MEnit4qL5gVAr3
dpo/swoisPNqzI7tVBmApv5O9gSec2prcbKGDMZHt3s+msCHDiwhW2bKgJ5/
s8dmgq/SjXBXWiiDlxqdpa9CCFS26rqznCODkX6hpf+Ens1G+SMBa2Sg8LjV
Y3kEgTlTItfnOstAGDL2xuUsgYPjG9O7t8pANOud4cd4AqFH/wt7rwyWvn0Q
rjgxr7j2USv7IzJIftpUNpBJYFfVq8SIkzIInBd1l1tA4Ly8LHHJeRnQmry7
J1cSGPTv+ZIig4H2u9u6XxJYHfbnOb1cGdRSm2hJQgJV/WZ+2PxABoa1ZUH3
Rwn0cBlamFAlg2k5D8nH00i8vep5eH2jDBjjCdM8OCR+m3+jdbRTBmaTbubt
3kaiFStAz0QogxLr2h+SWBIvjK4O9huY0C8P/du0msQP4qnP0kdlsKD1bZnq
f0g0aO2Z1kGVwwH/y0VlthQMLq/aqzJZDokGnUPOGRSsyb5cYTVLDqk/Hm+Z
p0JFRoKP2l8L5eC+XbXd/SIVPUNXeBdy5HC4u8B0xJyGd3YxikRr5PDOPLtS
mUnHHw6CSdob5BC1hxe/wVgZrTmlrhu85PCJHitOqFTBi3qxudF75XB0f3Zr
H4WBH1W3/ao8Ioc515u6xrqYeNGlk8o6Kf////NfC1Qctw==
          "]], 
         LineBox[CompressedData["
1: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

          "]], 
         LineBox[CompressedData["
1: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
t3Kv7kmlTwNx2H3P1z1ceJN28sJdLhavCNLNG75coCWFVL2anAbLTY9j/Ly4
II9V56HZaZiW0/yj7s4F8wMb8JNEISxsXML8s5ML/gHaBgrSQhhT359R7sSF
8x4L3IzkhLBS713bYQcuVDhMnrRXFsJsv3LWZjsu9MKvO0FqQlhuJs+T3MaF
SdPu94laQrDcn/K3H3FhmcGTiRv6QjiZaRtWasmFbRqFGk+MhSCkqiUc2ciF
A0qX7HtMhaD94qu6jTkXrkodiaFvFEKGq5OLqikXnol335SwEsKeBdvnM024
MMy3bdW0E0K+d6F7qxEXyFQTxmYnIRTf09bLN+CC4X/t3E0IcfHlZ4/qcWHX
J9KWIz5CiPST2u+iw4XYDtb+jL1C2PBTucdQkwuFjV8yH4QIQbO0vFlKnQtt
NS3P3hwQwozzrXXUJVxg3Hv462eMEIhXOwy6VLigeCtXeuaEEOZrSt55qMSF
DVlJ65QTheDQaHr7ijwXAlIidq85L4RrBsaqxxdy4UKCe/KOVCGEm/bK7ZHh
wqOYLZWhV4TQXyG6YDOPC5/26w+ezRXC6P4rcavJXBD6KeBuFwhhPTo4toTA
heWuIv3nJUJwVj72UXKOA3a2/1z77wvBvSvVZGKGA4c29cSzK4Ww1CpL6t8U
B66ZvCiVfiKE33ujfQbHOfBixZ13KxqEYCYro9HF48DIkoxx9FoI8ebbfZrY
HJCUi1Xf/RaL5ysFyToGB4zIgXYn3gtBkLVTr4LKAXehY3TWJyGczmE8K/3H
gXj2+huPvgoh52Hvi1t/OFD8V6Ol46cQFjfQDW+McODtVyn6n1EhaBXpyeT+
4ADrA19xjo7xy/yI17VvHFj05sfmJTyMT16NstcGObDp+duQ9VMY33rH1+b0
cyCw8nHGTrEQKg4veHW9lwMXS/PrD5BmQHdu/En+Bw5U5SWPXJCegTfrSxSL
uzkwcDlKqkRuBqa6yV/udXBAdNZnbaPyDDyOWkSobuOAVqy13xe1GXB+037l
eQsHth80Os/XmoHDwXLn3jRzICpQ5dHClTOw/yd1sOclB3K98J9Xrp6BkmeO
GcPPOdC4gy7etn4GnMJW32U+5cAfqwG9gE0zEOGduVRcywFp8+adJ61mQHFs
P0f2MQdMVj2Iy7WbgZeBNVralRzw0swueew0A3iZqMfmFRw4pXyq+53bDJyS
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
PiSEuU+3BTE+Euj//7//fxPdSHc=
          "]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[{{0.3224838021075847, -5.}, {0.3224915706509504, 5.}}], 
         LineBox[{{0.8008916499217502, 5.}, {
          0.8014003133394005, -5.}}]}}}, {}, {}, {{}, {}}}}, {
    PlotRange -> {-5, 5}, Frame -> True, LabelStyle -> Large, GridLines -> 
     Automatic, FrameLabel -> {
       FormBox[
       "\"\[CapitalEpsilon] \\!\\(\\*SuperscriptBox[\\(\[HBar]\\), \
\\(2\\)]\\)/(2\\!\\(\\*SuperscriptBox[\\(\[Mu]a\\), \\(2\\)]\\))\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(K\\), \\(11\\)]\\)\"", TraditionalForm]}, 
     Epilog -> {
       StyleBox[
        LineBox[{{0.825315, -4}, {0.825315, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False], 
       StyleBox[
        LineBox[{{1.257222782, -4}, {1.257222782, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False], 
       StyleBox[
        LineBox[{{2.79355, -4}, {2.79355, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False]}, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 2.}, {-1.6546669297631609`, 5.248208735030479}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"background\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"3-channel\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "True", "}"}], ",", 
                    RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7650220819264183`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2 open channels", "Subsection",
 CellChangeTimes->{{3.761412846857418*^9, 3.761412848976213*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nchan", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eth", "=", 
   RowBox[{"{", 
    RowBox[{"0.0", ",", "3.0", ",", "5.0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"re", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmin", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmax", "=", "12.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D11", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D22", "=", "4.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D33", "=", "6.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V12", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V23", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r12", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r23", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a12", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a23", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"no", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Erange", "=", 
   RowBox[{"Which", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"no", "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", "0.001"}], ",", 
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", "0.001"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"no", "\[Equal]", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", "0.001"}], ",", 
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", "0.001"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"no", "\[Equal]", "3"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", "0.001"}], ",", 
       RowBox[{
        RowBox[{"Eth", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", "10.0"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VV", "[", "r_", "]"}], "=", 
   RowBox[{"Vmat", "[", 
    RowBox[{
    "r", ",", "a", ",", "re", ",", "D11", ",", "D22", ",", "D33", ",", "V12", 
     ",", "V23", ",", "r12", ",", "r23", ",", "a12", ",", "a23", ",", "Eth"}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7609228437046957`*^9, 3.760922954523758*^9}, {
   3.760923510476204*^9, 3.76092352261665*^9}, {3.760923767870668*^9, 
   3.7609237739073277`*^9}, {3.760924015373334*^9, 3.760924095120471*^9}, {
   3.760924338419701*^9, 3.7609243562934227`*^9}, {3.760924433016068*^9, 
   3.7609244331482983`*^9}, {3.760960005262362*^9, 3.7609600095710707`*^9}, {
   3.760960053078266*^9, 3.7609600566509123`*^9}, {3.760960171624714*^9, 
   3.7609602069138536`*^9}, {3.7609602449926987`*^9, 3.760960288931018*^9}, {
   3.7609603924913387`*^9, 3.760960442872386*^9}, 3.76096159424107*^9, 
   3.7609619272266607`*^9, {3.7609619846014013`*^9, 3.760961997800658*^9}, {
   3.760962226437891*^9, 3.7609622301546087`*^9}, {3.760967945183846*^9, 
   3.760967951237352*^9}, {3.761044617686099*^9, 3.7610446209883423`*^9}, {
   3.761045394541411*^9, 3.761045394936282*^9}, {3.7610454435918493`*^9, 
   3.761045474809362*^9}, {3.761045507543765*^9, 3.7610455339753304`*^9}, {
   3.761045635420673*^9, 3.7610456364182*^9}, 3.7610456771677732`*^9, {
   3.761045713646616*^9, 3.7610457173193808`*^9}, {3.761047134593875*^9, 
   3.761047319523312*^9}, 3.761047406017967*^9, {3.761047441551046*^9, 
   3.761047497038887*^9}, {3.761047554989463*^9, 3.761047688981134*^9}, {
   3.7610510947231627`*^9, 3.761051104357847*^9}, {3.761055355184572*^9, 
   3.7610553554729853`*^9}, {3.761066124893503*^9, 3.761066199809403*^9}, {
   3.761066249668964*^9, 3.761066350046693*^9}, {3.761066410336895*^9, 
   3.7610664307678003`*^9}, {3.761066464582169*^9, 3.761066528383272*^9}, {
   3.761066578313652*^9, 3.76106661953433*^9}, {3.761066889392127*^9, 
   3.761066989250085*^9}, {3.761067139863327*^9, 3.76106714342328*^9}, {
   3.76106719488444*^9, 3.761067211458041*^9}, {3.761067261155138*^9, 
   3.761067274389201*^9}, {3.7610673349939537`*^9, 3.7610673395688667`*^9}, {
   3.761067440924411*^9, 3.7610674722489223`*^9}, 3.7610676020838137`*^9, {
   3.761067773813036*^9, 3.761067797907992*^9}, {3.761068530037965*^9, 
   3.7610685301920147`*^9}, 3.761068901438217*^9, {3.7610706397901087`*^9, 
   3.761070644709283*^9}, {3.761071382996406*^9, 3.7610714067508173`*^9}, 
   3.76107144921484*^9, {3.761071499672139*^9, 3.7610715411898727`*^9}, {
   3.761071784634557*^9, 3.761071807732604*^9}, {3.7610718487775803`*^9, 
   3.761071916078163*^9}, {3.761073996539894*^9, 3.7610740161131907`*^9}, {
   3.761074129279373*^9, 3.761074139065275*^9}, {3.7610744346577263`*^9, 
   3.761074502020956*^9}, 3.761074562050506*^9, {3.761074691500236*^9, 
   3.761074692353491*^9}, {3.761075230526132*^9, 3.7610752534405403`*^9}, 
   3.761146672312395*^9, {3.761146769593961*^9, 3.761146775289312*^9}, {
   3.7611468419971027`*^9, 3.7611468499276247`*^9}, {3.7611470625368156`*^9, 
   3.761147107403783*^9}, {3.761147141321892*^9, 3.761147152391823*^9}, {
   3.7612563347856197`*^9, 3.761256390903137*^9}, {3.761256676531374*^9, 
   3.7612566785294857`*^9}, {3.76125714530925*^9, 3.761257192258934*^9}, {
   3.7612572721947412`*^9, 3.7612572992092533`*^9}, {3.7612573797408524`*^9, 
   3.761257418290296*^9}, {3.761257485856736*^9, 3.761257593487936*^9}, {
   3.7612580097466097`*^9, 3.7612580270660686`*^9}, {3.761258224809104*^9, 
   3.761258225454126*^9}, {3.761258984216539*^9, 3.7612589878949003`*^9}, 
   3.761259021852091*^9, {3.761260669562849*^9, 3.761260679411467*^9}, {
   3.7612607324203873`*^9, 3.761260732787671*^9}, {3.761260814169573*^9, 
   3.7612609267313833`*^9}, {3.761260968673114*^9, 3.761261069771529*^9}, {
   3.761261123954101*^9, 3.7612611371326923`*^9}, {3.761261310552764*^9, 
   3.7612613777021837`*^9}, {3.7612617454374113`*^9, 3.761261747151641*^9}, {
   3.761304312318675*^9, 3.761304314383068*^9}, {3.761313996434215*^9, 
   3.761314012157959*^9}, {3.761317341717526*^9, 3.7613173494794703`*^9}, {
   3.7613174017951527`*^9, 3.7613174198831*^9}, 3.761317478106018*^9, {
   3.761322125113968*^9, 3.7613221744237413`*^9}, {3.7613226212741137`*^9, 
   3.761322631916502*^9}, {3.761340016466696*^9, 3.761340017029152*^9}, {
   3.7613404708394947`*^9, 3.761340472754177*^9}, 3.761340605880921*^9, {
   3.761340820952648*^9, 3.76134082626932*^9}, {3.7613997252832613`*^9, 
   3.761399736608026*^9}, {3.7613999037239*^9, 3.761399907451457*^9}, {
   3.7614002021008043`*^9, 3.761400202313806*^9}, {3.76140884780127*^9, 
   3.761408847976502*^9}, {3.761412910031435*^9, 3.761412910192584*^9}, {
   3.761434209113537*^9, 3.761434219885622*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"VV", "[", "x", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.761314045902574*^9, 3.76131405014312*^9}, {
  3.76131748485717*^9, 3.761317499335697*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"1", "-", "x"}]]}], ")"}], "2"]}]}], 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5`"}], "+", "x"}], ")"}], "2"]}]]}], "0"},
     {
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5`"}], "+", "x"}], ")"}], "2"]}]]}], 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"1", "-", "x"}]]}], ")"}], "2"]}]}], 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]}]]}]},
     {"0", 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]}]]}], 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"1", "-", "x"}]]}], ")"}], "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.761314046721326*^9, 3.761314050581044*^9}, {
   3.761317486023528*^9, 3.761317499946307*^9}, 3.761322179053207*^9, 
   3.761322634490501*^9, 3.761340020729356*^9, 3.761340477665658*^9, 
   3.761340613295834*^9, 3.7613408285164633`*^9, 3.761387522049223*^9, 
   3.761399739593504*^9, 3.761399909686982*^9, 3.761400205209141*^9, 
   3.761408856181148*^9, 3.761412913280918*^9, 3.761434222270944*^9, 
   3.761584160724533*^9, 3.761647788111349*^9, 3.761663336963757*^9, 
   3.76166389303507*^9, 3.765018019282484*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"diagsc", "=", 
   RowBox[{"Setupdiagsc", "[", 
    RowBox[{"\[CapitalEpsilon]", ",", "no", ",", "Eth", ",", "r"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.761146848134117*^9, {3.761256736882002*^9, 3.761256740031952*^9}, {
   3.761261484192378*^9, 3.761261487999625*^9}, {3.761261597174334*^9, 
   3.7612616033454227`*^9}, {3.7614342302236977`*^9, 3.761434231574205*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Etest", "=", 
   RowBox[{
    RowBox[{"Erange", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", "0.01"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equations", "=", 
   RowBox[{"alleqs", "[", 
    RowBox[{
    "Etest", ",", "r", ",", "rmin", ",", "rmax", ",", "Eth", ",", "Nchan", 
     ",", "u", ",", 
     RowBox[{"VV", "[", "r", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.761070650092381*^9, 3.761070685087882*^9}, {
   3.761070720801444*^9, 3.761070830868566*^9}, {3.761070874511541*^9, 
   3.7610709129980793`*^9}, {3.761071570720522*^9, 3.7610715740998363`*^9}, {
   3.761071933766266*^9, 3.761071939420554*^9}, {3.761073769937189*^9, 
   3.761073778599737*^9}, {3.761073900224963*^9, 3.7610739125914173`*^9}, {
   3.761074190371353*^9, 3.761074207726942*^9}, {3.761074776994636*^9, 
   3.761074845077333*^9}, {3.7610750459710073`*^9, 3.761075048977317*^9}, {
   3.761075152576613*^9, 3.761075153023102*^9}, {3.761146680522307*^9, 
   3.761146686622674*^9}, {3.761261621842141*^9, 3.7612616222549686`*^9}, 
   3.761261673949877*^9, 3.761261755979439*^9, {3.76131762031826*^9, 
   3.761317621992709*^9}, {3.761322191194325*^9, 3.7613221974577837`*^9}, 
   3.761340043740425*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"umat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"i", ",", "j"}]], "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Nchan"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "Nchan"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.7612618822742157`*^9, 3.761261884556917*^9}, {
   3.761261918053022*^9, 3.761261948788476*^9}, 3.761340038879084*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"equations", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"umat", "\[Transpose]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", "\"\<Automatic\>\"", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761262048127275*^9, 3.761262062353963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"1", ",", "1"}]], "[", "r", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AwHHea0yLPqm+gdgd
Csk/UV9Rhua+yD8vlAOEtBfaP4rlSVR0WNg/j/RD6Ati4z+QpMmnuSPgP8yH
F2FrmOk/4ZzuFi+/4T+j2m5OyyrwP7ySarKdiuA/ZlmCWdBP8z+WnyZuSJfZ
P0YlD0Y7uPY/Zy1hpyBKyj+JpeQbvRD6P4wCjOpmK5W/0o3qXq4v/T9QwmsB
tlzNv5zhtMECSQBAbyXO7FnR2r9SsIwKZt0BQIbe4waCK+G/OdkIyNRpA0Db
Iwp66Jriv6+oQXb2FwVAIgufvn584b8orBLbT6kGQKAgNJG8Pdy/MFagMFxc
CEBUnSu3O/nQv2pa0vpzBwpAPiklip8CrL+mkpx7w5ULQKu/U0lAFcM/cXEj
7cVFDUDNWBOgYlzWPz+EQhUA2Q5ABpN15sWQ3z/OHg+X9kYQQO2417+Wn+I/
lijP3XIdEUBpQeZVlOLiP19M2/+K5RFAtJTCjX7Y4D9ww0WafL4SQBllcxym
39g/glT8DwqJE0BPZbzPUR7LP60SBUCdTxRAVJdWVCjSjD8fJGzoCScVQAWo
bmlpzcm/k08fbBLwFUB+FeLTq0TYv07OMGj0yRZAVS8m686w4L8iepQe3J8X
QDXZK4oN9+K/9z9EsF9nGEBTj6Ck+trivxRZUrq8PxlAzjFMSApS4L8yjKyf
tQkaQCMx4oMb9de/aexYP7TPGkB5qjmP1XbJv+efY1eMphtAXOJuiko3kD9n
bbpKAG8cQO6Qi3a0gss/Lo5vtk1IHUC9C0OmW7/ZP/fIcP02Ex5A4bMDdPHs
4D/YMMT+JdoeQGmmzp12+eI/Aex1eO6xH0DbN44iUsfiP5bguWapPSBAgqSD
jEtZ4D/O9GdNyKogQD4e2583M9c/kx8/EeoVIUBFMUNSK6DFP1hXvMLZeSFA
dcDnhz5moL/BuGgwNuYhQCRJlnHeX8+/Kye7i2BLIkCg6SzELpDavyGsNsSN
riJAWu+Tx2cd4b+7WuG4JxojQLN4wy0wGeO/VhYym49+I0BnXlg7Fa/iv5T7
sTlk6yNAqBNQyeik379f91q1O1YkQJCv406M4NW/KgCqHuG5JEBvYzLooFvE
v5kyKETzJSVAFhdylOcYrj8JckxX04olQEcD0ZSNXNA/HdufJiD4JUB3tWeA
kdXbP71aHNNvYyZA/dgx3UK34T9e5z5tjccmQFKUVMUCLeM/op2Qwxc0J0D7
9vsdBEriP+dgiAdwmSdA2USWzFN93j8I5Sz5//8nQLzEq5WxtNQ/xVLNWA==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1147985#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.5968247312373677, 
                    0.5992444852933068}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AwHHea0yLPqm+gdgd
Csk/UV9Rhua+yD8vlAOEtBfaP4rlSVR0WNg/j/RD6Ati4z+QpMmnuSPgP8yH
F2FrmOk/4ZzuFi+/4T+j2m5OyyrwP7ySarKdiuA/ZlmCWdBP8z+WnyZuSJfZ
P0YlD0Y7uPY/Zy1hpyBKyj+JpeQbvRD6P4wCjOpmK5W/0o3qXq4v/T9QwmsB
tlzNv5zhtMECSQBAbyXO7FnR2r9SsIwKZt0BQIbe4waCK+G/OdkIyNRpA0Db
Iwp66Jriv6+oQXb2FwVAIgufvn584b8orBLbT6kGQKAgNJG8Pdy/MFagMFxc
CEBUnSu3O/nQv2pa0vpzBwpAPiklip8CrL+mkpx7w5ULQKu/U0lAFcM/cXEj
7cVFDUDNWBOgYlzWPz+EQhUA2Q5ABpN15sWQ3z/OHg+X9kYQQO2417+Wn+I/
lijP3XIdEUBpQeZVlOLiP19M2/+K5RFAtJTCjX7Y4D9ww0WafL4SQBllcxym
39g/glT8DwqJE0BPZbzPUR7LP60SBUCdTxRAVJdWVCjSjD8fJGzoCScVQAWo
bmlpzcm/k08fbBLwFUB+FeLTq0TYv07OMGj0yRZAVS8m686w4L8iepQe3J8X
QDXZK4oN9+K/9z9EsF9nGEBTj6Ck+trivxRZUrq8PxlAzjFMSApS4L8yjKyf
tQkaQCMx4oMb9de/aexYP7TPGkB5qjmP1XbJv+efY1eMphtAXOJuiko3kD9n
bbpKAG8cQO6Qi3a0gss/Lo5vtk1IHUC9C0OmW7/ZP/fIcP02Ex5A4bMDdPHs
4D/YMMT+JdoeQGmmzp12+eI/Aex1eO6xH0DbN44iUsfiP5bguWapPSBAgqSD
jEtZ4D/O9GdNyKogQD4e2583M9c/kx8/EeoVIUBFMUNSK6DFP1hXvMLZeSFA
dcDnhz5moL/BuGgwNuYhQCRJlnHeX8+/Kye7i2BLIkCg6SzELpDavyGsNsSN
riJAWu+Tx2cd4b+7WuG4JxojQLN4wy0wGeO/VhYym49+I0BnXlg7Fa/iv5T7
sTlk6yNAqBNQyeik379f91q1O1YkQJCv406M4NW/KgCqHuG5JEBvYzLooFvE
v5kyKETzJSVAFhdylOcYrj8JckxX04olQEcD0ZSNXNA/HdufJiD4JUB3tWeA
kdXbP71aHNNvYyZA/dgx3UK34T9e5z5tjccmQFKUVMUCLeM/op2Qwxc0J0D7
9vsdBEriP+dgiAdwmSdA2USWzFN93j8I5Sz5//8nQLzEq5WxtNQ/xVLNWA==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1147985#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.5968247312373677, 
                    0.5992444852933068}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"2", ",", "1"}]], "[", "r", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AAAAw//6yO6m+gdgd
Csk/gH/IQnQ2IT8vlAOEtBfaPycoF2R7Ylk/j/RD6Ati4z9P4ibK+QJ3P8yH
F2FrmOk/SW9IDSt3iT+j2m5OyyrwPwhonWAEcpU/ZlmCWdBP8z8zuSke6Mub
P0YlD0Y7uPY/mk8eapKXnj+JpeQbvRD6Pzq2W6bKuJw/0o3qXq4v/T+MPlYf
7W+XP5zhtMECSQBA8EiED5zxjT9SsIwKZt0BQOQ9pMI8c3Y/OdkIyNRpA0Ba
NEN+9Qpwv6+oQXb2FwVA5UAcxTBVjL8orBLbT6kGQKMFuFwT35a/MFagMFxc
CEDA0cqJNyOfv2pa0vpzBwpAz2tsI5T2or+mkpx7w5ULQBsty6wWiKW/cXEj
7cVFDUCPKgkPdbOnvz+EQhUA2Q5Aa6N68U4zqb/OHg+X9kYQQFcFwPyDUqq/
lijP3XIdEUD08Pafsfyqv19M2/+K5RFABs/PEitHq79ww0WafL4SQNfVwkVM
S6u/glT8DwqJE0C0DAq8jBOrv60SBUCdTxRAW0mBju+uqr8fJGzoCScVQFkO
5VikF6q/k08fbBLwFUAmF7L+Kmqpv07OMGj0yRZAOZtAma6RqL8iepQe3J8X
QKlqCsvbpae/9z9EsF9nGEA+HKjIF7mmvxRZUrq8PxlA/FhfPH2ppb8yjKyf
tQkaQKj0wNOaoKS/aexYP7TPGkAY/bv9QZSjv+efY1eMphtAwO2Cphtpor9n
bbpKAG8cQOJTio7YS6G/Lo5vtk1IHUAzb2avGRGgv/fIcP02Ex5AUeU0UNjN
nb/YMMT+JdoeQOzHeMuFfpu/Aex1eO6xH0ASAsg+6PaYv5bguWapPSBAal0u
PJ6Vlr/O9GdNyKogQCW/oSD0/JO/kx8/EeoVIUBNu8V/uGyRv1hXvMLZeSFA
6J+xxLkLjr/BuGgwNuYhQOMSpl+Q0Yi/Kye7i2BLIkCy/ib2ruyDvyGsNsSN
riJAoZcYCLM7fr+7WuG4JxojQKlEVLq2yHO/VhYym49+I0A+nhPRFQxkv5T7
sTlk6yNArIGeKNLzIT9f91q1O1YkQO/rKO1m52U/KgCqHuG5JEAgxQ3eW6N0
P5kyKETzJSVAcShZ3vwhfz8JckxX04olQAHqdMkHdYQ/HdufJiD4JUB0uFfI
/L6JP71aHNNvYyZAjNUqhf3sjj9e5z5tjccmQBSvbmVG35E/op2Qwxc0J0Di
1Q/xuXmUP+dgiAdwmSdANoC58Z7llj8I5Sz5//8nQI3qnfNZVpk/aU/Hqg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148029#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.05330885268760326, 
                    0.029875076033547644`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AAAAw//6yO6m+gdgd
Csk/gH/IQnQ2IT8vlAOEtBfaPycoF2R7Ylk/j/RD6Ati4z9P4ibK+QJ3P8yH
F2FrmOk/SW9IDSt3iT+j2m5OyyrwPwhonWAEcpU/ZlmCWdBP8z8zuSke6Mub
P0YlD0Y7uPY/mk8eapKXnj+JpeQbvRD6Pzq2W6bKuJw/0o3qXq4v/T+MPlYf
7W+XP5zhtMECSQBA8EiED5zxjT9SsIwKZt0BQOQ9pMI8c3Y/OdkIyNRpA0Ba
NEN+9Qpwv6+oQXb2FwVA5UAcxTBVjL8orBLbT6kGQKMFuFwT35a/MFagMFxc
CEDA0cqJNyOfv2pa0vpzBwpAz2tsI5T2or+mkpx7w5ULQBsty6wWiKW/cXEj
7cVFDUCPKgkPdbOnvz+EQhUA2Q5Aa6N68U4zqb/OHg+X9kYQQFcFwPyDUqq/
lijP3XIdEUD08Pafsfyqv19M2/+K5RFABs/PEitHq79ww0WafL4SQNfVwkVM
S6u/glT8DwqJE0C0DAq8jBOrv60SBUCdTxRAW0mBju+uqr8fJGzoCScVQFkO
5VikF6q/k08fbBLwFUAmF7L+Kmqpv07OMGj0yRZAOZtAma6RqL8iepQe3J8X
QKlqCsvbpae/9z9EsF9nGEA+HKjIF7mmvxRZUrq8PxlA/FhfPH2ppb8yjKyf
tQkaQKj0wNOaoKS/aexYP7TPGkAY/bv9QZSjv+efY1eMphtAwO2Cphtpor9n
bbpKAG8cQOJTio7YS6G/Lo5vtk1IHUAzb2avGRGgv/fIcP02Ex5AUeU0UNjN
nb/YMMT+JdoeQOzHeMuFfpu/Aex1eO6xH0ASAsg+6PaYv5bguWapPSBAal0u
PJ6Vlr/O9GdNyKogQCW/oSD0/JO/kx8/EeoVIUBNu8V/uGyRv1hXvMLZeSFA
6J+xxLkLjr/BuGgwNuYhQOMSpl+Q0Yi/Kye7i2BLIkCy/ib2ruyDvyGsNsSN
riJAoZcYCLM7fr+7WuG4JxojQKlEVLq2yHO/VhYym49+I0A+nhPRFQxkv5T7
sTlk6yNArIGeKNLzIT9f91q1O1YkQO/rKO1m52U/KgCqHuG5JEAgxQ3eW6N0
P5kyKETzJSVAcShZ3vwhfz8JckxX04olQAHqdMkHdYQ/HdufJiD4JUB0uFfI
/L6JP71aHNNvYyZAjNUqhf3sjj9e5z5tjccmQBSvbmVG35E/op2Qwxc0J0Di
1Q/xuXmUP+dgiAdwmSdANoC58Z7llj8I5Sz5//8nQI3qnfNZVpk/aU/Hqg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148029#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.05330885268760326, 
                    0.029875076033547644`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["u", 
       RowBox[{"3", ",", "1"}]], "[", "r", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AuINY5GbePam+gdgd
Csk/AW6698yCHT8vlAOEtBfaPxp5OX0owTA/j/RD6Ati4z94I9K4VbE5P8yH
F2FrmOk/GE4HpPnTQD+j2m5OyyrwP/CK8+7/kkU/ZlmCWdBP8z/aGQ7JIdRL
P0YlD0Y7uPY/oUbPcGUgUj+JpeQbvRD6P9vLawt/yFU/0o3qXq4v/T/HIuj4
kLVXP5zhtMECSQBASLMdkFfoVz9SsIwKZt0BQOd/61ZWqFY/OdkIyNRpA0Dp
JZSr1ZFUP6+oQXb2FwVAINCRkCfUUT8orBLbT6kGQG7XoxjaVk4/MFagMFxc
CEBp75pa9dtIP2pa0vpzBwpA885rOcQMRD+mkpx7w5ULQFPYdsVFLkA/cXEj
7cVFDUB57ljRKFY5Pz+EQhUA2Q5Ah8t8dA36Mz/OHg+X9kYQQLmwIc+8oS4/
lijP3XIdEUB9krRgQnEnP19M2/+K5RFAlUgUyIktIj9ww0WafL4SQFDgVaVA
ehs/glT8DwqJE0CjhdqozxYVP60SBUCdTxRAQnh9ezc7ED8fJGzoCScVQIoq
7c2JYgg/k08fbBLwFUA2jpOzxaQCP07OMGj0yRZAATccUc7Y+z4iepQe3J8X
QBh8Plwc5/Q+9z9EsF9nGEDOLCYn3QHwPhRZUrq8PxlANPHDdo0G6D4yjKyf
tQkaQIphdhOsdeI+aexYP7TPGkAdFeD/hLvcPuefY1eMphtANO+b7Vw31j5n
bbpKAG8cQMGJ1dT64dE+Lo5vtk1IHUDBfd6sRWnNPvfIcP02Ex5AIZZqcPPa
yT7YMMT+JdoeQFbjm59IU8g+Aex1eO6xH0D6gyUkTbrIPpbguWapPSBAOIYx
+aESyz7O9GdNyKogQPgKIEKF+s8+kx8/EeoVIUBjzjCfUs7TPlhXvMLZeSFA
6rOLwiXr2D7BuGgwNuYhQMHvlYpLT+A+Kye7i2BLIkClPCMp3jblPiGsNsSN
riJAhWVQa0qg6z67WuG4JxojQJa2NUvsePI+VhYym49+I0CXX+OOTEj4PpT7
sTlk6yNAcAAS/W5aAD9f91q1O1YkQGzZDW657AU/KgCqHuG5JEAKuOTE3NQM
P5kyKETzJSVAVq4k2vhnEz8JckxX04olQOLRSRmmnRk/HdufJiD4JUAB3x7H
7k0hP71aHNNvYyZASQnJ4dJAJz9e5z5tjccmQN5i6Y+Poi4/op2Qwxc0J0B3
Sx6deKc0P+dgiAdwmSdAX3HaQ9lNOz8I5Sz5//8nQJmWmgq6G0I/iPOydw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148073#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {0., 0.0014592032534565692`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AuINY5GbePam+gdgd
Csk/AW6698yCHT8vlAOEtBfaPxp5OX0owTA/j/RD6Ati4z94I9K4VbE5P8yH
F2FrmOk/GE4HpPnTQD+j2m5OyyrwP/CK8+7/kkU/ZlmCWdBP8z/aGQ7JIdRL
P0YlD0Y7uPY/oUbPcGUgUj+JpeQbvRD6P9vLawt/yFU/0o3qXq4v/T/HIuj4
kLVXP5zhtMECSQBASLMdkFfoVz9SsIwKZt0BQOd/61ZWqFY/OdkIyNRpA0Dp
JZSr1ZFUP6+oQXb2FwVAINCRkCfUUT8orBLbT6kGQG7XoxjaVk4/MFagMFxc
CEBp75pa9dtIP2pa0vpzBwpA885rOcQMRD+mkpx7w5ULQFPYdsVFLkA/cXEj
7cVFDUB57ljRKFY5Pz+EQhUA2Q5Ah8t8dA36Mz/OHg+X9kYQQLmwIc+8oS4/
lijP3XIdEUB9krRgQnEnP19M2/+K5RFAlUgUyIktIj9ww0WafL4SQFDgVaVA
ehs/glT8DwqJE0CjhdqozxYVP60SBUCdTxRAQnh9ezc7ED8fJGzoCScVQIoq
7c2JYgg/k08fbBLwFUA2jpOzxaQCP07OMGj0yRZAATccUc7Y+z4iepQe3J8X
QBh8Plwc5/Q+9z9EsF9nGEDOLCYn3QHwPhRZUrq8PxlANPHDdo0G6D4yjKyf
tQkaQIphdhOsdeI+aexYP7TPGkAdFeD/hLvcPuefY1eMphtANO+b7Vw31j5n
bbpKAG8cQMGJ1dT64dE+Lo5vtk1IHUDBfd6sRWnNPvfIcP02Ex5AIZZqcPPa
yT7YMMT+JdoeQFbjm59IU8g+Aex1eO6xH0D6gyUkTbrIPpbguWapPSBAOIYx
+aESyz7O9GdNyKogQPgKIEKF+s8+kx8/EeoVIUBjzjCfUs7TPlhXvMLZeSFA
6rOLwiXr2D7BuGgwNuYhQMHvlYpLT+A+Kye7i2BLIkClPCMp3jblPiGsNsSN
riJAhWVQa0qg6z67WuG4JxojQJa2NUvsePI+VhYym49+I0CXX+OOTEj4PpT7
sTlk6yNAcAAS/W5aAD9f91q1O1YkQGzZDW657AU/KgCqHuG5JEAKuOTE3NQM
P5kyKETzJSVAVq4k2vhnEz8JckxX04olQOLRSRmmnRk/HdufJiD4JUAB3x7H
7k0hP71aHNNvYyZASQnJ4dJAJz9e5z5tjccmQN5i6Y+Poi4/op2Qwxc0J0B3
Sx6deKc0P+dgiAdwmSdAX3HaQ9lNOz8I5Sz5//8nQJmWmgq6G0I/iPOydw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148073#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {0., 0.0014592032534565692`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7612620529233637`*^9, 3.761262062828302*^9}, 
   3.7613005949601*^9, 3.761317634484481*^9, 3.761322206183511*^9, 
   3.7613226398360243`*^9, 3.761340055505039*^9, 3.7613406190771217`*^9, 
   3.761340832451139*^9, 3.7613875260713177`*^9, 3.7613997443878098`*^9, 
   3.761399913554823*^9, 3.761400214944291*^9, 3.7614088704049892`*^9, 
   3.76141292306021*^9, 3.761434241338763*^9, 3.761584161024387*^9, 
   3.761647793480756*^9, 3.761663342258904*^9, 3.761663896179881*^9, 
   3.765018019532291*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sols", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"equations", "[", 
         RowBox[{"[", "\[Alpha]", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"umat", "\[Transpose]"}], "[", 
         RowBox[{"[", "\[Alpha]", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", "\"\<Automatic\>\"", "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "1", ",", "Nchan"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.761075047418874*^9, {3.761075525579275*^9, 3.761075536049959*^9}, {
   3.761261791755274*^9, 3.761261796377631*^9}, {3.761261990551571*^9, 
   3.7612619909241123`*^9}, {3.7614342821555643`*^9, 3.761434282681981*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uopen", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"umat", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "\[Alpha]"}], "]"}], "]"}], "/.", "sols"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "no"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1", ",", "no"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.7610708282601767`*^9, {3.7610709285799294`*^9, 3.761070958541772*^9}, 
   3.7610710084887743`*^9, {3.761300618970706*^9, 3.761300619681191*^9}}],

Cell[CellGroupData[{

Cell[BoxData["uopen"], "Input",
 CellChangeTimes->{{3.761602193709037*^9, 3.761602204744811*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AwHHea0yLPqm+gdgd
Csk/UV9Rhua+yD8vlAOEtBfaP4rlSVR0WNg/j/RD6Ati4z+QpMmnuSPgP8yH
F2FrmOk/4ZzuFi+/4T+j2m5OyyrwP7ySarKdiuA/ZlmCWdBP8z+WnyZuSJfZ
P0YlD0Y7uPY/Zy1hpyBKyj+JpeQbvRD6P4wCjOpmK5W/0o3qXq4v/T9QwmsB
tlzNv5zhtMECSQBAbyXO7FnR2r9SsIwKZt0BQIbe4waCK+G/OdkIyNRpA0Db
Iwp66Jriv6+oQXb2FwVAIgufvn584b8orBLbT6kGQKAgNJG8Pdy/MFagMFxc
CEBUnSu3O/nQv2pa0vpzBwpAPiklip8CrL+mkpx7w5ULQKu/U0lAFcM/cXEj
7cVFDUDNWBOgYlzWPz+EQhUA2Q5ABpN15sWQ3z/OHg+X9kYQQO2417+Wn+I/
lijP3XIdEUBpQeZVlOLiP19M2/+K5RFAtJTCjX7Y4D9ww0WafL4SQBllcxym
39g/glT8DwqJE0BPZbzPUR7LP60SBUCdTxRAVJdWVCjSjD8fJGzoCScVQAWo
bmlpzcm/k08fbBLwFUB+FeLTq0TYv07OMGj0yRZAVS8m686w4L8iepQe3J8X
QDXZK4oN9+K/9z9EsF9nGEBTj6Ck+trivxRZUrq8PxlAzjFMSApS4L8yjKyf
tQkaQCMx4oMb9de/aexYP7TPGkB5qjmP1XbJv+efY1eMphtAXOJuiko3kD9n
bbpKAG8cQO6Qi3a0gss/Lo5vtk1IHUC9C0OmW7/ZP/fIcP02Ex5A4bMDdPHs
4D/YMMT+JdoeQGmmzp12+eI/Aex1eO6xH0DbN44iUsfiP5bguWapPSBAgqSD
jEtZ4D/O9GdNyKogQD4e2583M9c/kx8/EeoVIUBFMUNSK6DFP1hXvMLZeSFA
dcDnhz5moL/BuGgwNuYhQCRJlnHeX8+/Kye7i2BLIkCg6SzELpDavyGsNsSN
riJAWu+Tx2cd4b+7WuG4JxojQLN4wy0wGeO/VhYym49+I0BnXlg7Fa/iv5T7
sTlk6yNAqBNQyeik379f91q1O1YkQJCv406M4NW/KgCqHuG5JEBvYzLooFvE
v5kyKETzJSVAFhdylOcYrj8JckxX04olQEcD0ZSNXNA/HdufJiD4JUB3tWeA
kdXbP71aHNNvYyZA/dgx3UK34T9e5z5tjccmQFKUVMUCLeM/op2Qwxc0J0D7
9vsdBEriP+dgiAdwmSdA2USWzFN93j8I5Sz5//8nQLzEq5WxtNQ/xVLNWA==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148294#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.5968247312373677, 
                    0.5992444852933068}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AwHHea0yLPqm+gdgd
Csk/UV9Rhua+yD8vlAOEtBfaP4rlSVR0WNg/j/RD6Ati4z+QpMmnuSPgP8yH
F2FrmOk/4ZzuFi+/4T+j2m5OyyrwP7ySarKdiuA/ZlmCWdBP8z+WnyZuSJfZ
P0YlD0Y7uPY/Zy1hpyBKyj+JpeQbvRD6P4wCjOpmK5W/0o3qXq4v/T9QwmsB
tlzNv5zhtMECSQBAbyXO7FnR2r9SsIwKZt0BQIbe4waCK+G/OdkIyNRpA0Db
Iwp66Jriv6+oQXb2FwVAIgufvn584b8orBLbT6kGQKAgNJG8Pdy/MFagMFxc
CEBUnSu3O/nQv2pa0vpzBwpAPiklip8CrL+mkpx7w5ULQKu/U0lAFcM/cXEj
7cVFDUDNWBOgYlzWPz+EQhUA2Q5ABpN15sWQ3z/OHg+X9kYQQO2417+Wn+I/
lijP3XIdEUBpQeZVlOLiP19M2/+K5RFAtJTCjX7Y4D9ww0WafL4SQBllcxym
39g/glT8DwqJE0BPZbzPUR7LP60SBUCdTxRAVJdWVCjSjD8fJGzoCScVQAWo
bmlpzcm/k08fbBLwFUB+FeLTq0TYv07OMGj0yRZAVS8m686w4L8iepQe3J8X
QDXZK4oN9+K/9z9EsF9nGEBTj6Ck+trivxRZUrq8PxlAzjFMSApS4L8yjKyf
tQkaQCMx4oMb9de/aexYP7TPGkB5qjmP1XbJv+efY1eMphtAXOJuiko3kD9n
bbpKAG8cQO6Qi3a0gss/Lo5vtk1IHUC9C0OmW7/ZP/fIcP02Ex5A4bMDdPHs
4D/YMMT+JdoeQGmmzp12+eI/Aex1eO6xH0DbN44iUsfiP5bguWapPSBAgqSD
jEtZ4D/O9GdNyKogQD4e2583M9c/kx8/EeoVIUBFMUNSK6DFP1hXvMLZeSFA
dcDnhz5moL/BuGgwNuYhQCRJlnHeX8+/Kye7i2BLIkCg6SzELpDavyGsNsSN
riJAWu+Tx2cd4b+7WuG4JxojQLN4wy0wGeO/VhYym49+I0BnXlg7Fa/iv5T7
sTlk6yNAqBNQyeik379f91q1O1YkQJCv406M4NW/KgCqHuG5JEBvYzLooFvE
v5kyKETzJSVAFhdylOcYrj8JckxX04olQEcD0ZSNXNA/HdufJiD4JUB3tWeA
kdXbP71aHNNvYyZA/dgx3UK34T9e5z5tjccmQFKUVMUCLeM/op2Qwxc0J0D7
9vsdBEriP+dgiAdwmSdA2USWzFN93j8I5Sz5//8nQLzEq5WxtNQ/xVLNWA==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148294#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.5968247312373677, 
                    0.5992444852933068}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}], ",", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AAACg/eiyO6m+gdgd
Csk/GedaPZdNIT8vlAOEtBfaP23N6viDKlo/j/RD6Ati4z8Yq/u4oJJ4P8yH
F2FrmOk/MkFj7tk0jD+j2m5OyyrwP0FP07+vn5g/ZlmCWdBP8z+PGxMI7Geg
P0YlD0Y7uPY/2plgdBJwoj+JpeQbvRD6PyrujnVaZaE/0o3qXq4v/T/O1b2S
aLSbP5zhtMECSQBAe2oDwRFrjz9SsIwKZt0BQAofoa/UpGE/OdkIyNRpA0Dk
Danotq6Gv6+oQXb2FwVAY59sc9FcmL8orBLbT6kGQB41dID2qaC/MFagMFxc
CEAiEnbFMCajv2pa0vpzBwpAzdsZWE/jor+mkpx7w5ULQDWCvIy3SaC/cXEj
7cVFDUAMSNYH95WWvz+EQhUA2Q5AkDDIer7OhL/OHg+X9kYQQGXTCDAYn3A/
lijP3XIdEUAQDKXLMuaRP19M2/+K5RFANqrDjleYnD9ww0WafL4SQE5uxTVk
NKI/glT8DwqJE0CPmb8+aKCjP60SBUCdTxRADkUKyZPEoj8fJGzoCScVQHJA
mI6I4J4/k08fbBLwFUCuXzqL0u6UP07OMGj0yRZAKwkd9gHZfT8iepQe3J8X
QB1Q+l2ZCXu/9z9EsF9nGECN/ceq3kOTvxRZUrq8PxlAraS+mfZPnr8yjKyf
tQkaQLTNKSbdf6K/aexYP7TPGkBM3rellLCjv+efY1eMphtAnjHbNml+or9n
bbpKAG8cQAGj8CcVXJ6/Lo5vtk1IHUAdrA+YuUiTv/fIcP02Ex5A6HXLnh9H
er/YMMT+JdoeQP3eyoQOnXo/Aex1eO6xH0APqLX8PxqUP5bguWapPSBAELJp
+FBJnj/O9GdNyKogQEchyIeirKI/kx8/EeoVIUA1hsMQW6+jP1hXvMLZeSFA
B7LoH4xPoj/BuGgwNuYhQJ/SpCS19Zw/Kye7i2BLIkBV9m/EpEqSPyGsNsSN
riJAYg0frbcGdz+7WuG4JxojQC64CYeYDIG/VhYym49+I0BqP50IM+CUv5T7
sTlk6yNAOsJYoECFn79f91q1O1YkQBXlDWIX7aK/KgCqHuG5JEBy5TSikquj
v5kyKETzJSVA4pdMafz3ob8JckxX04olQDzS6e22cJy/HdufJiD4JUD6KBQX
Z6OQv71aHNNvYyZALVAZGLXAZr9e5z5tjccmQM/jSDcIzIQ/op2Qwxc0J0Co
dPuf3l6XP+dgiAdwmSdA96YaOS5YoD8I5Sz5//8nQNlA8aU6HaM/kO+9Mw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148338#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.038456578473355124`, 
                    0.03844723300586531}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AAACg/eiyO6m+gdgd
Csk/GedaPZdNIT8vlAOEtBfaP23N6viDKlo/j/RD6Ati4z8Yq/u4oJJ4P8yH
F2FrmOk/MkFj7tk0jD+j2m5OyyrwP0FP07+vn5g/ZlmCWdBP8z+PGxMI7Geg
P0YlD0Y7uPY/2plgdBJwoj+JpeQbvRD6PyrujnVaZaE/0o3qXq4v/T/O1b2S
aLSbP5zhtMECSQBAe2oDwRFrjz9SsIwKZt0BQAofoa/UpGE/OdkIyNRpA0Dk
Danotq6Gv6+oQXb2FwVAY59sc9FcmL8orBLbT6kGQB41dID2qaC/MFagMFxc
CEAiEnbFMCajv2pa0vpzBwpAzdsZWE/jor+mkpx7w5ULQDWCvIy3SaC/cXEj
7cVFDUAMSNYH95WWvz+EQhUA2Q5AkDDIer7OhL/OHg+X9kYQQGXTCDAYn3A/
lijP3XIdEUAQDKXLMuaRP19M2/+K5RFANqrDjleYnD9ww0WafL4SQE5uxTVk
NKI/glT8DwqJE0CPmb8+aKCjP60SBUCdTxRADkUKyZPEoj8fJGzoCScVQHJA
mI6I4J4/k08fbBLwFUCuXzqL0u6UP07OMGj0yRZAKwkd9gHZfT8iepQe3J8X
QB1Q+l2ZCXu/9z9EsF9nGECN/ceq3kOTvxRZUrq8PxlAraS+mfZPnr8yjKyf
tQkaQLTNKSbdf6K/aexYP7TPGkBM3rellLCjv+efY1eMphtAnjHbNml+or9n
bbpKAG8cQAGj8CcVXJ6/Lo5vtk1IHUAdrA+YuUiTv/fIcP02Ex5A6HXLnh9H
er/YMMT+JdoeQP3eyoQOnXo/Aex1eO6xH0APqLX8PxqUP5bguWapPSBAELJp
+FBJnj/O9GdNyKogQEchyIeirKI/kx8/EeoVIUA1hsMQW6+jP1hXvMLZeSFA
B7LoH4xPoj/BuGgwNuYhQJ/SpCS19Zw/Kye7i2BLIkBV9m/EpEqSPyGsNsSN
riJAYg0frbcGdz+7WuG4JxojQC64CYeYDIG/VhYym49+I0BqP50IM+CUv5T7
sTlk6yNAOsJYoECFn79f91q1O1YkQBXlDWIX7aK/KgCqHuG5JEBy5TSikquj
v5kyKETzJSVA4pdMafz3ob8JckxX04olQDzS6e22cJy/HdufJiD4JUD6KBQX
Z6OQv71aHNNvYyZALVAZGLXAZr9e5z5tjccmQM/jSDcIzIQ/op2Qwxc0J0Co
dPuf3l6XP+dgiAdwmSdA96YaOS5YoD8I5Sz5//8nQNlA8aU6HaM/kO+9Mw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148338#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.038456578473355124`, 
                    0.03844723300586531}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AAAAw//6yO6m+gdgd
Csk/gH/IQnQ2IT8vlAOEtBfaPycoF2R7Ylk/j/RD6Ati4z9P4ibK+QJ3P8yH
F2FrmOk/SW9IDSt3iT+j2m5OyyrwPwhonWAEcpU/ZlmCWdBP8z8zuSke6Mub
P0YlD0Y7uPY/mk8eapKXnj+JpeQbvRD6Pzq2W6bKuJw/0o3qXq4v/T+MPlYf
7W+XP5zhtMECSQBA8EiED5zxjT9SsIwKZt0BQOQ9pMI8c3Y/OdkIyNRpA0Ba
NEN+9Qpwv6+oQXb2FwVA5UAcxTBVjL8orBLbT6kGQKMFuFwT35a/MFagMFxc
CEDA0cqJNyOfv2pa0vpzBwpAz2tsI5T2or+mkpx7w5ULQBsty6wWiKW/cXEj
7cVFDUCPKgkPdbOnvz+EQhUA2Q5Aa6N68U4zqb/OHg+X9kYQQFcFwPyDUqq/
lijP3XIdEUD08Pafsfyqv19M2/+K5RFABs/PEitHq79ww0WafL4SQNfVwkVM
S6u/glT8DwqJE0C0DAq8jBOrv60SBUCdTxRAW0mBju+uqr8fJGzoCScVQFkO
5VikF6q/k08fbBLwFUAmF7L+Kmqpv07OMGj0yRZAOZtAma6RqL8iepQe3J8X
QKlqCsvbpae/9z9EsF9nGEA+HKjIF7mmvxRZUrq8PxlA/FhfPH2ppb8yjKyf
tQkaQKj0wNOaoKS/aexYP7TPGkAY/bv9QZSjv+efY1eMphtAwO2Cphtpor9n
bbpKAG8cQOJTio7YS6G/Lo5vtk1IHUAzb2avGRGgv/fIcP02Ex5AUeU0UNjN
nb/YMMT+JdoeQOzHeMuFfpu/Aex1eO6xH0ASAsg+6PaYv5bguWapPSBAal0u
PJ6Vlr/O9GdNyKogQCW/oSD0/JO/kx8/EeoVIUBNu8V/uGyRv1hXvMLZeSFA
6J+xxLkLjr/BuGgwNuYhQOMSpl+Q0Yi/Kye7i2BLIkCy/ib2ruyDvyGsNsSN
riJAoZcYCLM7fr+7WuG4JxojQKlEVLq2yHO/VhYym49+I0A+nhPRFQxkv5T7
sTlk6yNArIGeKNLzIT9f91q1O1YkQO/rKO1m52U/KgCqHuG5JEAgxQ3eW6N0
P5kyKETzJSVAcShZ3vwhfz8JckxX04olQAHqdMkHdYQ/HdufJiD4JUB0uFfI
/L6JP71aHNNvYyZAjNUqhf3sjj9e5z5tjccmQBSvbmVG35E/op2Qwxc0J0Di
1Q/xuXmUP+dgiAdwmSdANoC58Z7llj8I5Sz5//8nQI3qnfNZVpk/aU/Hqg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148382#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.05330885268760326, 
                    0.029875076033547644`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AAAAw//6yO6m+gdgd
Csk/gH/IQnQ2IT8vlAOEtBfaPycoF2R7Ylk/j/RD6Ati4z9P4ibK+QJ3P8yH
F2FrmOk/SW9IDSt3iT+j2m5OyyrwPwhonWAEcpU/ZlmCWdBP8z8zuSke6Mub
P0YlD0Y7uPY/mk8eapKXnj+JpeQbvRD6Pzq2W6bKuJw/0o3qXq4v/T+MPlYf
7W+XP5zhtMECSQBA8EiED5zxjT9SsIwKZt0BQOQ9pMI8c3Y/OdkIyNRpA0Ba
NEN+9Qpwv6+oQXb2FwVA5UAcxTBVjL8orBLbT6kGQKMFuFwT35a/MFagMFxc
CEDA0cqJNyOfv2pa0vpzBwpAz2tsI5T2or+mkpx7w5ULQBsty6wWiKW/cXEj
7cVFDUCPKgkPdbOnvz+EQhUA2Q5Aa6N68U4zqb/OHg+X9kYQQFcFwPyDUqq/
lijP3XIdEUD08Pafsfyqv19M2/+K5RFABs/PEitHq79ww0WafL4SQNfVwkVM
S6u/glT8DwqJE0C0DAq8jBOrv60SBUCdTxRAW0mBju+uqr8fJGzoCScVQFkO
5VikF6q/k08fbBLwFUAmF7L+Kmqpv07OMGj0yRZAOZtAma6RqL8iepQe3J8X
QKlqCsvbpae/9z9EsF9nGEA+HKjIF7mmvxRZUrq8PxlA/FhfPH2ppb8yjKyf
tQkaQKj0wNOaoKS/aexYP7TPGkAY/bv9QZSjv+efY1eMphtAwO2Cphtpor9n
bbpKAG8cQOJTio7YS6G/Lo5vtk1IHUAzb2avGRGgv/fIcP02Ex5AUeU0UNjN
nb/YMMT+JdoeQOzHeMuFfpu/Aex1eO6xH0ASAsg+6PaYv5bguWapPSBAal0u
PJ6Vlr/O9GdNyKogQCW/oSD0/JO/kx8/EeoVIUBNu8V/uGyRv1hXvMLZeSFA
6J+xxLkLjr/BuGgwNuYhQOMSpl+Q0Yi/Kye7i2BLIkCy/ib2ruyDvyGsNsSN
riJAoZcYCLM7fr+7WuG4JxojQKlEVLq2yHO/VhYym49+I0A+nhPRFQxkv5T7
sTlk6yNArIGeKNLzIT9f91q1O1YkQO/rKO1m52U/KgCqHuG5JEAgxQ3eW6N0
P5kyKETzJSVAcShZ3vwhfz8JckxX04olQAHqdMkHdYQ/HdufJiD4JUB0uFfI
/L6JP71aHNNvYyZAjNUqhf3sjj9e5z5tjccmQBSvbmVG35E/op2Qwxc0J0Di
1Q/xuXmUP+dgiAdwmSdANoC58Z7llj8I5Sz5//8nQI3qnfNZVpk/aU/Hqg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148382#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-0.05330885268760326, 
                    0.029875076033547644`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}], ",", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4ACHLea0yLPqm+gdgd
Csk/LnV2+dLJyT8vlAOEtBfaP1I1S2UPr9s/j/RD6Ati4z9YIufnLvbjP8yH
F2FrmOk/AtsHHQyt5z+j2m5OyyrwPyd1LESs7ec/ZlmCWdBP8z/EgMTDpGbk
P0YlD0Y7uPY/SVKcZuxv2j+JpeQbvRD6P4whHA4FbMA/0o3qXq4v/T/KtfHM
ssnDv5zhtMECSQBAyH4qq/Vc3L9SsIwKZt0BQL4fQIKGgOW/OdkIyNRpA0Ae
sAVXUBLrv6+oQXb2FwVAl15NqPUt778orBLbT6kGQGPDsgKOofC/MFagMFxc
CEB0iW9re+jwv2pa0vpzBwpAu785rvpz8L+mkpx7w5ULQGUT+BlnAu+/cXEj
7cVFDUAqgyryWRDsvz+EQhUA2Q5A9EAcPZSv6L/OHg+X9kYQQCKjHaRLiOS/
lijP3XIdEUBe6n/5Uhzgv19M2/+K5RFA0b9oD16S179ww0WafL4SQELoze+U
3su/glT8DwqJE0B30dB/SUGzv60SBUCdTxRAiRABbR2msD8fJGzoCScVQOcL
+/usv8s/k08fbBLwFUD/vxvcht/WP07OMGj0yRZAjn+Y8lpD4D8iepQe3J8X
QAukvaoo8eQ/9z9EsF9nGECKv5+Arz/pPxRZUrq8PxlAGymuN9Xa7T8yjKyf
tQkaQK8qr1QIDPE/aexYP7TPGkD0q/nw0xjzP+efY1eMphtA3MPfU4JK9T9n
bbpKAG8cQPFLsWiBT/c/Lo5vtk1IHUD6ZsxdiHj5P/fIcP02Ex5ACzgECzN2
+z/YMMT+JdoeQA7XglTDY/0/Aex1eO6xH0CI91CNe3T/P5bguWapPSBAthIa
deytAEDO9GdNyKogQCMHhq+8sgFAkx8/EeoVIUA2DB0AjK8CQFhXvMLZeSFA
fn9fdn+YA0DBuGgwNuYhQKSEowf1kQRAKye7i2BLIkCUtUNq6HcFQCGsNsSN
riJAIpkRWpBWBkC7WuG4JxojQOM+GeD/RAdAVhYym49+I0CsrT1ogyAIQJT7
sTlk6yNAuQm25SYLCUBf91q1O1YkQMge4Qcd7glAKgCqHuG5JEAo+R0Ztb4K
QJkyKETzJSVAqyahXIKdC0AJckxX04olQP/qVIAxagxAHdufJiD4JUD91393
UUQNQL1aHNNvYyZAacJnrbIWDkBe5z5tjccmQPOUtXSG1w5Aop2Qwxc0J0BC
Hka7vaQPQOdgiAdwmSdAvx1eN1YwEEAI5Sz5//8nQGo5exaWjRBAlfy33A==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148426#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-1.0567583271700558`, 
                    4.138267852087987}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4ACHLea0yLPqm+gdgd
Csk/LnV2+dLJyT8vlAOEtBfaP1I1S2UPr9s/j/RD6Ati4z9YIufnLvbjP8yH
F2FrmOk/AtsHHQyt5z+j2m5OyyrwPyd1LESs7ec/ZlmCWdBP8z/EgMTDpGbk
P0YlD0Y7uPY/SVKcZuxv2j+JpeQbvRD6P4whHA4FbMA/0o3qXq4v/T/KtfHM
ssnDv5zhtMECSQBAyH4qq/Vc3L9SsIwKZt0BQL4fQIKGgOW/OdkIyNRpA0Ae
sAVXUBLrv6+oQXb2FwVAl15NqPUt778orBLbT6kGQGPDsgKOofC/MFagMFxc
CEB0iW9re+jwv2pa0vpzBwpAu785rvpz8L+mkpx7w5ULQGUT+BlnAu+/cXEj
7cVFDUAqgyryWRDsvz+EQhUA2Q5A9EAcPZSv6L/OHg+X9kYQQCKjHaRLiOS/
lijP3XIdEUBe6n/5Uhzgv19M2/+K5RFA0b9oD16S179ww0WafL4SQELoze+U
3su/glT8DwqJE0B30dB/SUGzv60SBUCdTxRAiRABbR2msD8fJGzoCScVQOcL
+/usv8s/k08fbBLwFUD/vxvcht/WP07OMGj0yRZAjn+Y8lpD4D8iepQe3J8X
QAukvaoo8eQ/9z9EsF9nGECKv5+Arz/pPxRZUrq8PxlAGymuN9Xa7T8yjKyf
tQkaQK8qr1QIDPE/aexYP7TPGkD0q/nw0xjzP+efY1eMphtA3MPfU4JK9T9n
bbpKAG8cQPFLsWiBT/c/Lo5vtk1IHUD6ZsxdiHj5P/fIcP02Ex5ACzgECzN2
+z/YMMT+JdoeQA7XglTDY/0/Aex1eO6xH0CI91CNe3T/P5bguWapPSBAthIa
deytAEDO9GdNyKogQCMHhq+8sgFAkx8/EeoVIUA2DB0AjK8CQFhXvMLZeSFA
fn9fdn+YA0DBuGgwNuYhQKSEowf1kQRAKye7i2BLIkCUtUNq6HcFQCGsNsSN
riJAIpkRWpBWBkC7WuG4JxojQOM+GeD/RAdAVhYym49+I0CsrT1ogyAIQJT7
sTlk6yNAuQm25SYLCUBf91q1O1YkQMge4Qcd7glAKgCqHuG5JEAo+R0Ztb4K
QJkyKETzJSVAqyahXIKdC0AJckxX04olQP/qVIAxagxAHdufJiD4JUD91393
UUQNQL1aHNNvYyZAacJnrbIWDkBe5z5tjccmQPOUtXSG1w5Aop2Qwxc0J0BC
Hka7vaQPQOdgiAdwmSdAvx1eN1YwEEAI5Sz5//8nQGo5exaWjRBAlfy33A==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1148426#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 12.}, {-1.0567583271700558`, 
                    4.138267852087987}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "r", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.761602194544094*^9, 3.7616022052803*^9}, 
   3.761647796280266*^9, 3.761663345562784*^9, 3.761663898460559*^9, 
   3.7650180199012413`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"diagsc", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.76160207268888*^9, 3.761602107766107*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[CapitalEpsilon]"}], 
          ")"}], 
         RowBox[{"1", "/", "4"}]], " ", 
        RowBox[{"SphericalBesselJ", "[", 
         RowBox[{"0", ",", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{
            "0.`", "\[VeryThinSpace]", "+", "\[CapitalEpsilon]"}]]}]}], 
         "]"}]}], 
       SqrtBox["\[Pi]"]], "0.`"},
     {"0.`", 
      FractionBox[
       RowBox[{"r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3.`"}], "+", "\[CapitalEpsilon]"}], ")"}], 
         RowBox[{"1", "/", "4"}]], " ", 
        RowBox[{"SphericalBesselJ", "[", 
         RowBox[{"0", ",", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "3.`"}], "+", "\[CapitalEpsilon]"}]]}]}], "]"}]}], 
       SqrtBox["\[Pi]"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7616020749064913`*^9, 3.761602108274786*^9}, 
   3.761647797368473*^9, 3.761663346781118*^9, 3.7616638994596977`*^9, 
   3.765018019979376*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Imat", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Wronskian", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uopen", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "\[Beta]"}], "]"}], "]"}], ",", 
           RowBox[{"diagsc", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
         "r"}], "]"}], "/", 
       RowBox[{"Wronskian", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"diagsc", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i", ",", "i"}], "]"}], "]"}], ",", 
           RowBox[{"diagsc", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
         "r"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "no"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "1", ",", "no"}], "}"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[CapitalEpsilon]", "\[Rule]", "Etest"}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.761300636449172*^9, 3.76130064528083*^9}, {
  3.761322214364195*^9, 3.761322214615054*^9}, {3.7616019550904837`*^9, 
  3.7616019625587254`*^9}, {3.761602004539905*^9, 3.761602070359696*^9}, {
  3.7616021139420547`*^9, 3.761602159579413*^9}, {3.761602235508438*^9, 
  3.7616022546883802`*^9}, {3.7616023130984592`*^9, 3.761602320077408*^9}, {
  3.7616024972535563`*^9, 3.761602499144545*^9}, {3.761602797676331*^9, 
  3.761602898188468*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Jmat", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Wronskian", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uopen", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "\[Beta]"}], "]"}], "]"}], ",", 
           RowBox[{"diagsc", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
         "r"}], "]"}], "/", 
       RowBox[{"Wronskian", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"diagsc", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i", ",", "i"}], "]"}], "]"}], ",", 
           RowBox[{"diagsc", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
         "r"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "no"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "1", ",", "no"}], "}"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[CapitalEpsilon]", "\[Rule]", "Etest"}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7616026133677692`*^9, 3.76160262788407*^9}, {
   3.761602800009213*^9, 3.7616028000731564`*^9}, 3.761602908503043*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", "Jmat", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "8.0", ",", "12.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761602322534378*^9, 3.7616023646669273`*^9}, {
  3.761602439799049*^9, 3.761602463901579*^9}, {3.761602511107768*^9, 
  3.761602516862863*^9}, {3.761602643081389*^9, 3.761602643387528*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
hws2oh9wO5w650xB9n8HbNFRDdZqb3dTkPjY/iA64Om2iEMuFBy5czwA7Z66
tVV4DwWvhu6fRNuc2aSaQ1zxpSUKbexrFm7hSoFrBEcsWnPnhpbvxKVuQpfQ
LCMjlVg30h9F09fQokprw9T3kvNnlZeM5hTT/1hP/C9L/Ra6s3tVqKgHBUf3
Xk1FFz9SW7HdkwLT5zkp6IyryifHiS1EKm+gr4Uu/xDnRcFL7+9X0NFey5Q0
91EQ+sUoAX1sGx3SSHyoue482kOX2XRkPzl/yxNm128rt3S5xAEKHitlhKI3
CMqeyCd2u7r4OFprTLLR+iAF2uk/DqPpVnHFX8RjXKu80GLlC4MTD1Hwonzc
Gf0jdp5CszfJyw2cm9Gfj/EHHfWhQPiWyzr029287yUPU3Ah0VkbnanOEWjn
S4Fxw9bZ/fOqH3vb4kdB2f6sEdx/hrLvg0h/Ck79d/4zuuH0+CmtoxSMHNZ4
j16z9qd+bAAFJ6vf5qGFsicemB6ngDvv+VF0haB/5C/ibCshj9l+3PvL5XYg
Od+m6nboz0smpecEk/0vmtBGP4qZiiwMoWAH02IC+929P2CP20kKrhWxetCy
66cNxEIpiPnw9D06/M/0xMEwCjhCl2Wjbbz+7GGfIus5sN0VPa/qODQSRx7P
t0CXMmdkQiNJnrQ/WINWaJmp7zhNgYuBlhj6t8k/SDhDwSqu8iI8z9mpwbJG
MRSoUfU30Xs4OCa/E68cVoxCvyrgyNp0jgL+EzHW6CR5zsU8sRQUGHZ+wTzZ
fvLk5EPis/3rXqD5Ojgbdl2kQOPn1zS0dzxX9NM4Cu7NU3FDr+PmmTqcSMGx
xf4dmF+TTuEN1CVSn93RT9APnvBkvyFWWrrtElr8MO/e5VdIHpgrWKB7P89t
7LpGwfcyjueYl9ElAjkWN8l5Sa9IwrytU1r5b4z4U5tZEHrBFYdNCbfIvCns
24mO9c3ub0mlQPTQIWn0JQVr5p475P3vnyVgvqdeTLno94CC+fWXLmoSP92r
7Xc1nwKdNdWRGphXDc4Vawoo0DoT44Y2MIxe2Enc+PnvOnSZbEcm6zEFjwpq
ZnDeVL8L7c14QvKur3MfulH3jW1pKQUdr9XX4rwaFnLT7amloLpa6yfOt7fc
SrZhL0m+LO2uR+dMffeVqyP7X/E6G+3bHZjp/IrMY+m9+9FT+fFUxxvyfoHb
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
       "]], 
      LineBox[CompressedData["
1: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
jb5UfvJcSQ4L1EO1GGjjxzNH7z0n69uzkUJLxoZYXalkgUHP4XXoyiglCf13
LNjFt0kP7R1RWzenhtyfS2oHuiNAwuBUA6lH4a8O6EjfAh7lj6S+f112RW/x
tn7R18yCEYGqc+h010TNfV9ZULloWfTs+mb3F/d2sOD1zIkUtPuYqt7JbhY8
a3fKQeudLjEN7mcBJZ1bh85f1CVWM8CCs4ffNqMV8+Z+FP9Orh8U70SL/Da2
SRhmQZmx/hi6zaP1SP4YC8KjBySxHkR9JGLF+GhY67IoAe3+tcb6mgAN8lmc
D9FfdIJlRQRpcCx69wx9dbjnnKkQDfMs1V6iN8dtagsXpiHDguctOm16Mk5I
lIYD/eItaOuHlhwmYjSsbnPoRgvb5O6/Ik7Df3c2D8/We9EJxgJJGjRc73Pj
+VA4VuVjJEUDT52CMLpFRqEjZDENFqoKMmhdr467/EtoEDl4Qh39a4UOl4Es
Dct2X9VFp36+9V/QUhpUmH0maMF1e5jzKBqkuAqOoF/0Z/ltladhS/PAGbRb
jGC3P5OMV/jcD802cNJ7zaKBi8F9Fd38pzyZh03D8D+f2+jL95m8estocAqY
TJnNC0sfBz8FGh54KWeif8778vrlchoS1n3JQ6fkr2VzKdLgFq9SjJ4vOdbr
o0RDqExqOdrlTEYqhyoNh74aV6MHk90uPllNw4gKux7tWL/O5ogGDTv26DWj
uzi5tJZq0XDv05IO9H7VStH6dTQssKgZRN+pWOmjtIGGp+Fnf86un+3VoUBt
GpJTl/xDL54Ys+rUIfthWsyF+WhxxeLNho00+C6yWYC+wSrUuKlLg/7CcQl0
feHSpB+baLgWfUYebTLQc+7eFhpqperXo0N9DQbn6NMQtNHRAF0p9dBy3zYa
6p6ZW6C36J9SW2hEA+96cze0X9vHBKftNNwxb/RBl55eL/TamIZ+iytX0ByC
8V5yO2gwgyUxaO1krn5PUzK+yaIktAZnRFyXGQ09Vqey0Stt5fYY76NhLvt8
4uzz6E/EWR0g9bIrMWy2X6hW9zs6kP2K2RCAvp2iFT7sSIOtuEkw2kg6Wf20
Ew1M09oIdFLD3sCnR2kIvy8cjZ4ME/48eYyGzQ0hs/1lt8HrlXCCBl1O1n30
A26vCxedafD5mPMYzf1c9cNrFxqsdPmL0Ps8eln8J2k4qd5fjs5ZHeu+3Y0G
ZS+hD+j5Qzvfhp+iIf388i9ou9R5svWnSX2KtPehCw8WO0u4k/murf6BFlvi
9nKvBw1zOHz/oY82KSy640lDlZoPJ/ZPGaPrz5jeNDzmXs+HrirhOJB+nobD
RUwuNPNsbvbQBRr26uXNXu+lfpR3lS8NgmdFZsevH2ZYnrpIgwnvkx70irSm
9Hw/GqhX4s1oQaNIAQl/GsJ2er9Fj3zf4XQqgIaaNScK0R/CFrz9EEjDRs6D
Gehc1crlq4JJfRqX3EFHf/APDg+h4bN7X/js/U9t6h8KJc+3R9EPbSvBYbD9
Cg3rv9a4o3WfFt5PD6OBNb7gBLoaHi1jXSd5UeSxF21ZkXDvTgwN64pqDqJl
50sfsoql4Wj/wePoLpNIWjKeBp3lS8+i064t6Km/S+prcmj2fs5N/slXk2ng
5M3yR+/y2MQzkkLDj8p7vrP1Js1hb5xKrg9X8UQvO/olcoo4SEZmtp6ligrL
HtynYU9031E0v+CtMas0Glbsf2w3Wz82HkyBdBqqByKt0EOPzHcXEPM0pJmi
2zg0/A4/oMGudsHW2fNw90dneQY5D3uXqKADepwS/TJp0Ottm8LzK/m8J0El
i4bJ67Kj6LSoA/EtxPtGzWbfX6r0zWPVsmkwDvxVibZh1N36Snxz2GM2f4b/
GMWE5tBgba72GC2SrhvV9YQGrxPeMejEi0XXw3Np6BqhwtBq+zQj1+fRkLlQ
cTYfzRcoXY3Mp6HDM/QEuq87NQye0uDN89N+9v2oWP7KIHFT5ud96NsnpEI2
P6OhbMdWI3SxnFDg7UJyfmy/b0C313JfGiuiIU6qRRXNffGvj9FzGvwqFi5D
02oj55JKaDCI9JJDO9347L77JQ3LL1lIoDN/v3blfk3W0+emGHptUayD3Vsa
PLeliKPLfNz2ltWQ+vqSPoP9Zs/eYQvnWhoCoht+o3tWHTGXqSPna3/2yGz/
E+jeU0Fcq67Wi+brst3t9oGGRQous/0sprB5p1w9yc91QTVoxet7TKuI3V1j
Zvuh8RZDY2YjDbc8pe+hv8q+NqohtnYojUK7TIChVxMNZ9NqAtCRqRr69R9J
3hz3d0B/4qd0/T6TPLteL4f+PaaXzWyhYT/7sDB6Udth5itim3MLONA7s7N4
eb/QUFDxrG32fctq49uAr6R/35tOQPfr2a9f1k7692OHa+h5KkEZFcTbPTVm
38f0uGvD+DpJvfAsP4K2GxrjSCPuZ+21Rvt+lHQ16KLhQiG/Kbr4wf7dId00
KC2amn2/arnh92pFD8mD7M3K6H8XUjWqiEs8JVnoxU5V94720tBn6CGN1twz
Irmgj4ZxtUMiaDMdseAM4tXO7XxoNwXNf9u/0fDTrmcOOmvqfOuVfhoKf1z6
2Yznp7b8+fsBkre+y3rRy1OE7gp/p6H1cGIL+pCnuZ/pEMmDlOIP6CTjOIeI
YbJ/9WpV6CUTSivEftAQYf/pOfpGXPHw9TFy/pwsc9AfTvLWNf6iYf6hRxlo
YX3jHIkJGkwfJSejjWRu3LD4TfLo7s1b6KCRVvfoPzR0L2m6gk5tntOv9Ze8
LySuCUC/LmNZNRML+t49h+56uK3K8x85vxVTbmjO6GMbpCdJf8hSOoKWu3j1
4TPi0bkj1midY0+W7psieSQkvANtY/4pfJLYLikL0F4bp+bETpP+oTWhjI5Z
wTi5YYYGI+CUReeL63W1EruxfvKjf30LfS07hw0ibK6OT8THI2RC4rnYoCgu
EIjeOfLS15ibDaoZZ4+jNYydPCeJC6NTd6On+AoOW/CywT4uXQ4d6mOuL8zH
Btdjqws+Yp62TesUEx/NO5aA3r0hZc1Rfjb8dWAHoaX/jNEVAmxYx7bdi542
uy17ej4bbLMnN6E7cjYtYi5gg90tCyV0mnMEzwVBNtwJ9eRBX6nWmlopRH7v
vftHE7GrYvvYZ+I3N8W+os2CAweDhMn4q19Uo7X6lLvWLGSD8UrbYrTMlqbP
3cS9Y6MP0RxJ5z5cE2HDHL+z8egK23elw6Js+Jxw0h/9oMitIFaMDa+6vnii
w6VlHhuKs+GZ+VpntJvHy/t/iE88ueCAtmg6knBvERv09NKt0XLXnoZzSbLh
VmuwMbrXeN4FWyk2iB/310Wffp1sIyHDBm1adBWaV3vThveybPDfP8RGX3/y
VTqAwYbQND1ZNHPlub/aTDKfvZ8WoOeFsH4MEvc+yp6LHuyr+hbDYkNlgSsH
umaLW7s+zYbO7qGJRuLsJOlP48T16jPf0Tc4X9YksdkwZODRgfbcf6Ri5zI2
CB5QbUDbFC8s4VAg88v7+wqtK/M07yFx+OWPOWjac/+jfcvZIDA9lYDm/zj3
Hv8KNsT+d/0yuvaa2Q0HRbKeLoX70TmjU5fFVrIhsyJaH33TJPlSKXGii58y
2ivDyNtZiQ0qpXHi6P0CY26yymzoTl3wrwHXo1eI76k5G1y2pVN1xCXp2zcH
nGdDssXG1++I9Q84yuWlke+bBZsqiEU9y1O4PpB6Dec7UEZscIhxM4+4Lj/P
BO27+2yQUz0bTr2V1kaPKCkf/dDAho9xTVLoZTJB1gGNbOApkpiLtuXrNF7X
RObj++XnS+LqzhuqiR/Z8IPX7C2ap3aEMv/Ehg+SRU/Q64sNxASa2eCw+2Ac
Ov3m9LjrZzYc7vvgjA7c7lCo+4UNakGcQujna0syxolNT4iOlxKPsxfHpbWx
wUJxcSvanrPaR6SdDa3G29PRunnqWzs6SX2xurehPZLCNG90sUFnu/4qdObV
bwoG3WwwOCwgjV56NHb+4x42bLaq/f6CeFKOp87nGxu+h3NEo1cL2r5U72dD
9UmhS+gj//JzvhHHb090QX9qOBplOsiGkgJLI3RucP0+xjAb5q14Nxc9dEbJ
uIE4T7VxooSYZR9IMpIN82OM+tCROuup0VE2rLprX4l2GUvsLRljQ6SNZQQ6
tX3qo9svUo/CXX7or9XmlcvG2SB9IfwM2vi+QEb4BBuW0tLWaEWbk677/7Lh
wBYnNvo/w3f/if1jg9xpLyl0jCZ7TwWxqJKmAJpP9PMalSmSR76O358TA4e6
QhfxzlP5rWj371cW35xmQ1Di4XfoR819AkYzbLDydCxE95TrTs0QHx2OT0P/
D7x9hXs=
       "]], LineBox[CompressedData["
1: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
oz9Xrh+bQG/x0ytLR/8Plp04Ww==
       "]], LineBox[CompressedData["
1:eJwVznswlXkcBvBTkuSW2x6U9j3XF12lBtn1/S6J2Uqbsmbbs4lKZpMGlVZ3
HV3QhRJTNC1dXDdmDIecddCu1aA4bkfbkY6iq0Ll/R2X/e0fzzzz+eeZRxC+
L2jXTB6Pt4Hm/3bwUNJiUEpcDvcs1EP7CX3rTeqpq8zdFOrkJs/r381g8FB4
Yb83Ndla4XZqJoPXfo5LvO2oB83ReztnGzI4ozA/Nm6BHrIafv/bdC6D59vM
Ta0c9GC78XSyvQ2Dby1XfLXVVg/zIjZauTkxmP78mtDWVA87k/6sb9zM4N4t
4vGacQLEKNbxtyMMGncnp10ZJHAm1v/rbbcY1MnNH1zuJhDTytXdesSgOliZ
Zt9I4Mb5D+Zzxhm0zGt6JFcQcPJ+MNEsEqBfWPDj1AIC+V1VaX8FClDxMexw
wXUCe9pHH/ceFGBL5jHNrosEUmrnlm3KFaC8+EpJWyKB9xYRXi8eCrBSFTuk
iCfgH6CLKh4RYJcq0z5qL4GpmG+h01GIa0ezQ5+GE/gy9eS+w1oh+tXx7NJ+
IhB4NERTFyPEsk++zRY/ELiuG8vJzhbiasVFjwB/Ai4lXaZXHgixN2mr9iIQ
4EdmLHg3LMSQoaqgYncCa09ndYXbidBr5ak+5XIC6oxDrqvXiNAq5z6UOBP4
8XyCm98+EYa3NGldRATmD6n6ojJFmJqeW7rfkYD3yoHFn+tF+O5jQVEun0Ce
bp04+40I1xs+djprRWA6obP+gLUYFdOhsnYzAgqDb2aWeYtRuzyi1NCYQPnw
yzdzdotxs1fFpbZZBMxaog/Wp4tx5/3LxSk8ArJ0u/x7SjHO16S335jg4H31
bHnVCzF2TQ/8sYzj4GlHG09iKcFE65apsk8cWAT1syWeElxZoLp8a4QD90qr
z5FhEiyX1bh2DnOgNBPsOp0qwVq1spl7y0FSY9wxVbkEtcFmuoTXHBTF5nnI
nknwSOWx9pFBDqxP8nNsjKXoa3TcUPmCg5j4knyeqxRlkeP6ch0HS0KZ4ECZ
FCPsj2+/3c/BosLuIoVcihNGnkJNHwdnXu7Jk5dK0Uiy1NdIy4FmrtBH/kSK
I8yceb/8y0F0+oKUmwYsjsXXZrzq5WC7ydj+hctYDI6QHojRcJAxaGFcFcLi
aNOHJuceDlRFG9acOc6izZu7Kya7OAgIi2QqC1ns2beoprmT/k1ovGOgZhE+
6kobOjj4frcgq5JaXR3uWUuduOXwuT0dLO4u8Giopv6wdFmUupNFg+ih3jLq
Vt1V17weFi2H1jvcpD67IaLGR8ui9mhHzxHqCcaw/eQrFi/IPYPcqd3MQxtW
vWYxgN8/y436V72i/BV1Tp1asZRa0xmVuekti07Ps8RS6orkDplgmMVpfaaJ
LXXMWN6gaozFO6v4/FE1B/n9kz37P7F4ynKN9j31s9aQh06fWZRJKu68pg4s
MCm59IXF/hORXs+pF2+Li91OWPTp08e1Ue9Y17LDRk/3ggL8WqivebDB/1Bv
tOvmN1EbWz9xXz7JYqJztUpFjbxVzgPUAzVmmTXUh95dcMiaYtFlRW60gvpe
75DJ+mkWzy2J9y+nftnoMzlN7bs5VVBK/R+CGWXu
       "]]},
     Annotation[#, "Charting`Private`Tag$1149705#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{8., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{8., 12.}, {-0.7904054278751298, 1.6950306712384502`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.761602330780394*^9, 3.7616023657481117`*^9, {3.76160244173246*^9, 
   3.761602464298028*^9}, {3.761602500424803*^9, 3.761602517857396*^9}, 
   3.7616026442658587`*^9, 3.761602805094208*^9, 3.7616029129485693`*^9, 
   3.761647802101626*^9, 3.761663352220284*^9, 3.7616639025294228`*^9, 
   3.76501802195789*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"K", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Jmat", ".", 
     RowBox[{"Inverse", "[", "Imat", "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[CapitalEpsilon]", "\[Rule]", "Etest"}], ",", 
      RowBox[{"r", "\[Rule]", "10."}]}], "}"}]}], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.761603080056766*^9, 3.76160313332845*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.6839054330434693`"}], "0.03412168429662074`"},
     {"0.03412157058770717`", "0.5378245195820114`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.761603097347599*^9, 3.7616031344666147`*^9}, 
   3.7616478034569817`*^9, 3.761663353183495*^9, 3.761663903133607*^9, 
   3.7650180221471786`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"K", "=", 
  RowBox[{"Kmatrix", "[", 
   RowBox[{
   "Eth", ",", "Nchan", ",", "no", ",", "r", ",", "rmin", ",", "rmax", ",", 
    RowBox[{"VV", "[", "r", "]"}], ",", "Etest"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761068780234721*^9, 3.7610688000914297`*^9}, {
   3.761068861968066*^9, 3.761068883047351*^9}, {3.761068987300913*^9, 
   3.761069002067769*^9}, {3.7610711840533113`*^9, 3.761071199973184*^9}, {
   3.761072088467593*^9, 3.761072117761581*^9}, 3.761072279184969*^9, {
   3.7613043684770117`*^9, 3.761304374937899*^9}, 3.761304812612009*^9, {
   3.761317709955867*^9, 3.761317712134314*^9}, {3.7613178087227383`*^9, 
   3.761317847155615*^9}, {3.761387038165929*^9, 3.761387038817782*^9}, 
   3.7614129643309107`*^9, {3.761434291962232*^9, 3.761434292098806*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.6839760085142467`", ",", 
       RowBox[{"-", "0.03420219344619291`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.03420206537875813`"}], ",", 
       RowBox[{"-", "0.5341914720084721`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.3614958140263125`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.93104504694411`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.005421472078041939`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.04946224735733188`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.005421451777764326`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.04946206214982034`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.5545904759936063`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.8306344002838382`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.761304023467846*^9, 3.761304053262743*^9}, 
   3.761304123120265*^9, 3.761304173333458*^9, 3.761304203428253*^9, {
   3.7613043731278763`*^9, 3.761304376931047*^9}, 3.761317766182938*^9, {
   3.7613178309361877`*^9, 3.7613178479873323`*^9}, {3.761321688451393*^9, 
   3.7613217418889914`*^9}, 3.761321814765615*^9, 3.761321918938491*^9, 
   3.7613222226163673`*^9, 3.761322644665327*^9, 3.761323317264543*^9, 
   3.761340083151993*^9, 3.761340637661227*^9, 3.761340840421445*^9, 
   3.7613870398855667`*^9, 3.761387533586876*^9, 3.761399751426441*^9, 
   3.761399921339314*^9, 3.7614002246734467`*^9, 3.761408894352943*^9, {
   3.76141296125777*^9, 3.761412965001666*^9}, {3.761434288156478*^9, 
   3.7614342927777*^9}, 3.761584161693207*^9, 3.761647807270993*^9, 
   3.761663361684338*^9, 3.7616639045389977`*^9, 3.765018022722981*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"K", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.760448010770055*^9, 3.760448014602229*^9}, {
  3.76143430940128*^9, 3.761434310032324*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.6839760085142467`", 
      RowBox[{"-", "0.03420219344619291`"}]},
     {
      RowBox[{"-", "0.03420206537875813`"}], 
      RowBox[{"-", "0.5341914720084721`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.760448015148597*^9, {3.7613178434468317`*^9, 3.761317848814473*^9}, 
   3.76132175464918*^9, 3.761321816106187*^9, 3.761321930910001*^9, 
   3.761322224491954*^9, 3.761322645091497*^9, 3.761323318462903*^9, 
   3.7613400846474333`*^9, 3.76134063868183*^9, 3.76134084136998*^9, 
   3.761387055733347*^9, 3.7613875343033457`*^9, 3.7613997529227877`*^9, 
   3.761399922436719*^9, 3.76140022556004*^9, 3.7614089010894537`*^9, 
   3.761412971497279*^9, {3.761434301491137*^9, 3.7614343105634413`*^9}, 
   3.761584161892817*^9, 3.7616478085712147`*^9, 3.7616633621618767`*^9, 
   3.761663905231975*^9, 3.765018022799811*^9}]
}, Open  ]],

Cell["Yay!  This is symmetric!", "Text",
 CellChangeTimes->{{3.7614129814147243`*^9, 3.761412995906856*^9}, {
  3.761647820456257*^9, 3.761647826159782*^9}, {3.761663906292609*^9, 
  3.7616639081944027`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SS", "=", 
   RowBox[{"K", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";", 
  RowBox[{"MatrixForm", "[", "SS", "]"}]}]], "Input",
 CellChangeTimes->{{3.761663377376429*^9, 3.761663385254548*^9}, {
  3.761663415284648*^9, 3.761663416260188*^9}, {3.761663446471912*^9, 
  3.761663454738534*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.3614958140263125`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.93104504694411`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.005421472078041939`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.04946224735733188`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.005421451777764326`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.04946206214982034`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5545904759936063`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.8306344002838382`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.761663386030365*^9, {3.761663428603895*^9, 3.761663455210773*^9}, 
   3.761663910029046*^9, 3.765018022864903*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"SS", "\[Transpose]"}], "\[Conjugate]"}], ".", "SS"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.761663430458996*^9, 3.761663468745364*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.9999999907291978`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.6509807089504225`*^-7"}], "-", 
       RowBox[{"8.585221307130797`*^-8", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "1.6509807089504225`*^-7"}], "+", 
       RowBox[{"8.585221307130797`*^-8", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"1.0000000092708372`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.761663440691733*^9, 3.761663469241556*^9}, 
   3.761663914454121*^9, 3.765018022932125*^9}]
}, Open  ]],

Cell["Yay!  It looks unitary to expected accuracy.", "Text",
 CellChangeTimes->{{3.761663920904984*^9, 3.761663933212981*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Etest", ",", 
       RowBox[{"Kmatrix", "[", 
        RowBox[{
        "Eth", ",", "Nchan", ",", "no", ",", "r", ",", "rmin", ",", "rmax", 
         ",", 
         RowBox[{"VV", "[", "r", "]"}], ",", "Etest"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Etest", ",", 
       RowBox[{"Erange", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Erange", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "0.002"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.761317863727027*^9, 3.761317901493277*^9}, {
   3.761317976264312*^9, 3.761318010869542*^9}, {3.761318044109271*^9, 
   3.7613180506247597`*^9}, {3.761318113787437*^9, 3.761318114507063*^9}, {
   3.761318277458818*^9, 3.7613182812957163`*^9}, {3.7613187398222923`*^9, 
   3.7613187399466743`*^9}, 3.761341203705628*^9, {3.761387081750327*^9, 
   3.7613871110522623`*^9}, {3.76143433952464*^9, 3.761434339620058*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dat", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7614133795050497`*^9, 3.761413396536076*^9}, {
  3.7614256338432093`*^9, 3.761425656755517*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.001`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.6859833285104852`", ",", 
         RowBox[{"-", "0.01705172888589092`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.017051659486336836`"}], ",", 
         RowBox[{"-", "0.15054088312604103`"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.3598204628016514`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.9326072133456328`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.012136877579469622`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.02501438613438648`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.012136828183077174`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.02501428432727619`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.9552317560984598`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.2945492691828547`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7614133843725843`*^9, 3.7614133970422297`*^9}, {
   3.761425636373423*^9, 3.761425657181301*^9}, 3.761434635622039*^9, 
   3.761584434879691*^9, 3.761648425287531*^9, 3.761664543544354*^9, 
   3.7650186117178707`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"K11", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "2", ",", "1", ",", "1", ",", "1"}], "]"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K12", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "2", ",", "1", ",", "1", ",", "2"}], "]"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K21", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "2", ",", "1", ",", "2", ",", "1"}], "]"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K22", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "2", ",", "1", ",", "2", ",", "2"}], "]"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.761321508248451*^9, 3.761321518198279*^9}, {
   3.761321575175111*^9, 3.761321600875115*^9}, {3.76132176284932*^9, 
   3.7613217629855556`*^9}, {3.761321837107029*^9, 3.761321852495965*^9}, 
   3.761322467912694*^9, {3.7613998200122547`*^9, 3.7613998459201927`*^9}, 
   3.761413075698008*^9, {3.761413370083214*^9, 3.7614133704750977`*^9}, {
   3.761413419052525*^9, 3.761413443477528*^9}, {3.761434656041196*^9, 
   3.7614346709403143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KK", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Legended", "[", 
     RowBox[{"K22", ",", "\"\<3-channel\>\""}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.761340810115739*^9, {3.7613409203485537`*^9, 3.761340922293057*^9}, {
   3.761341172387801*^9, 3.761341188339198*^9}, {3.7614000665717907`*^9, 
   3.761400072079502*^9}, {3.7614073403024063`*^9, 3.7614073472971487`*^9}, {
   3.7614126008894987`*^9, 3.7614126012812653`*^9}, {3.76141345709378*^9, 
   3.761413458263175*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwdknks13EYx39+rifpINlv1hxNrTn2y4wmWY/cS/tJy4SOGWUmNUlpKLmG
mVphkoxOK5JrrvV8pkhaRil00EGS3Dehz+/zbN99//h+99779bwek8Az3sFS
iURizR/l2+ZYnYe2FHDleG/kX+cXVGAg/2qqAfjL84q9ze920uq6e9ZBC/Bj
WPetk4YfKfKGTM1nPeCgpEV9OvkT9SkycsJ1AZ/4PH5Mcb3Ew8xT9AHnrjZW
y2TfqbIl6nmBAWBd7bA0rucHGSYNH6wxBGz09vywJr2fUh1PDLRvBSyZl6v0
Wv2iqeXOi0PbARPl7iX1HYMk6pkDmuiNmKacHiIRJwdc201zNzSHyVoM4Gqn
ddf7wr+UP/awef8uQGbbtDrtMErwZItfkD2gl15bV9TXMYoIuT4SsxewIDfX
8wsbJw4bn+UE2JouUZFmT5Db90t6pW6Any/Hv24Nn6RyEQiokESkd+yfImVa
nwLQMawoqcxymlL0e9rmDgEOaWo/UN08QxPvDgRu9AV0e2R+L1Q6SwGZjTM7
AgCLo8sX0mZniZfjyIDN3f1vdSbnyEoUBGwwMRyompmnvJfGZREhnEfb/a6d
dJGU7dLDAJ1WneWnZUvEZXAjgLs3JDbttPtHnxfiQhsiAS0qgjwuBC+TS7Vy
g/z/2EFTjzsrVCaAAfOPhKa96l8loTcesCZxUV+WL2FCRxLgn1mHlnGFChPr
S+X+qlxXnq6VMoGbAXj/WnaJZYeUiXrXATX6jMC/UJWJuCzASWe/DNdYNZYr
BtD5i+8345PqjB+LZXk+5xvyvrnvqAYL101grYWA55azzKyDNJlyez/vc56s
sMxnMcA47OBSMaDBtono54/WsFIhBHB9cqVV8R8tJhOBgKEBZqeMXLSZMs2l
GrBTq0LdsX4d43L5SQPa5LXb1nptYL52ygsE1Lk9ajSWuJEpbWQ2An5LO+w0
cl6HWQrBgJKETUtn43RZjigI6F/XbrGnaBNTO7fkOv6Gfxejx/4DbS58SA==

          "]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1: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
x4SYGicFek7h58j8+g8jFOg5ry9cm9LkrkDPKZj0rjvRfJoCPaew91xLpbmv
Aj2n4Nv4souwVIGeU8j+snBSpw0K9JzCMPkPP+udCvSc52frjF299inQcwrD
Wzy65BivQM8pnJAVNg25qEDPKTSbX9zZ5bYCPaewZMOXX8akK9BzCtW+ubP/
eKFAz/k8nLu3zbNQgZ5TuKJsc3WmSoGe8/5v6FblW6tAzykkffLoGtikQM8p
dOvz0H95KyV6TuHC1z4311Elek6h8+1QYau1Ej2nELj467awvkr0nMLK9obv
e4Yp0XMKzCFt/8ExSvScwq/qlF/iJyvRcwpvYXP9mTlK9JzC7DizrMRAJXpO
Yfv9qXdvrVGi5xSGerilPQhVoucUysZtVT7eo0TPKWRe/KvniyNK9JzCigVu
Eblnleg5hRHdg83LrivRcwoBV9k19UMlek5hQP37jW+eKdFz3j9pDxd9ylWi
5xQS43678aNSiZ5T6Bvd5Z1ZjRI9p3A3SzubNCrRcwo33net62KqQs8pbPt4
9K5dexV6zvvX+9CV/j+r0HMKbb+XyYY7qNBzCqucLPuOHaJCzynMmpp9b9Jo
FXrO718fFDzLQ4WeUyieQDb6z1Sh5xQSRpKrK/xV6DmFrbKhXbesVKHnvJ6d
MrMiglXoOYXrnpPvHIhUoecUujw5UHHikAo9p7AvNnX8lVMq9JyCcv6mhpQk
FXpOQRuWqs+4p0LPKfzZxtpGnqFCzym81KlPVeao0HMKIdGKxW/KVOg5Bb/p
UVub9Cr0nEL5eG2Feb0KPef5dE2N6dRMjZ7zeZp3cLd9WzV6TsHH848i585q
9JzCm0HeG93t1Og5Bc/ua4OmD1Sj5xQmkuvJC0ep0XO+j+lp7w3j1eg5hYFx
CRMjvdXoOd9/ZjNOxs1To+cUFgrXva4sU6PnvB861vg82qRGzylc/Dwn83W4
Gj3n+yFmabRyvxo9pyB/nXCnPkGNnlN4nzvhV/NENXpOoX7MW8eud9XoudQP
77YPfKxGzyncir3s4v5KjZ5TmB6z03dOiRo9p5D1KKx2pVaNnlNI2WP9LqJO
jZ5TiHnrMyzhuxo9pxDZvqj1ndYa9JxCaNpIjxdWGvScwtLHsV+Vthr0nMKB
m9Xdmpw06DmFmm+rb9GRGvScgulArwf9fteg5xT6LTszzH2aBj0XoVAT3tfP
V4OeixA41v/I5qUa9FyEf5asCj68QYOei7DuUmXpjZ0a9FyEGc6v72bv06Dn
IqSctW5viNeg5yLsHZCsaXFJg56L8OmW9+gedzTouQjx9rP4ktKg5yIEBxkD
fbM16LkII8bddA0p0qDnIrT02hmXoNag5yKMNiuPePROg57zeFzNjOVfNei5
CJsuWuZ+N9Oi5yJcu9TRrXsHLXouwqvw26N+s9Gi5yLk9f/w1N9Ri56LsOfi
o5xdw7XouQi7hwavueKmRc9F2GqXcfi1pxY9F+Hv9M8uH3206LkIi+xHzu28
RIueizBm2usev67XouciHD9ydFPADi16zvM1b+Of0Xu16LkIU2ShubePadFz
EZoX+heVXtCi5yIMqei13PS2Fj0XoUTrcdgxXYuei2CcPWnSjBda9FyE047H
47YXatFzERRP4jYkqbTouQj2mqf6wlotei5Cj5Seb0y+atFzERplP4UPMNOh
5yKkBZbd8BF16LkI2ouxK/d016HnIqhPTMm430+Hnovw9MC3NP0vOvRchBzB
36WTmw49FyHgz5AJ4zx16Dnvv9mxbzf66NBzEdJFX/vExTr0XATTnv0/la7T
oecivPBIvGq5Q4eeixBq5nUK9urQcxEsg1YK647p0HMR6kLP9bl8QYeeixCR
/HB5+S0dei7CFVCdJuk69FwE98E3F457oUPP+bxMOHI/pFCHnvP3hb88lqzS
oeciiO1c27+p1aHnfF7upZvafdWh5yK06qXe4WOmR89F6DTTfc9foh49F8H8
ZEHnnO569FyEjHsBjq0d9eg5z9/CVhljh+vRcxHmDz5VGuqmR8/5+25UrHro
qUfPRXiePzuswUePnouwNHxn+yFL9Oi5CG4kga5ar0fPRdAsK959bYcePReh
T6Nudc1ePXrO6/k4/J8+8Xr0XITqLi6Riy/q0XPeP2uGXrt0W4+ei5BoG+ys
T9ej5zz+lhk/O2Tr0XMRLOimuYuK9Oi5CN1uGBSX1Hr0nMfb1e6p4Z0ePRfh
p7u/fOjzTY+e8/k92zghyNyAnvN81c5qutrBgJ6L4OKyX1lrY0DPRejsv/7z
QCcDei5C/opOw9eOMKDnfN9sco+7625Az0VgKWPJ56kGdvg/z/nfreceG+lr
QM9F+Dmoxj5kqQE9F2Fl3ws32QYDei5Cm+43XE3CDOi5CN5V0xLcYg3oOc93
YF7eruMG9Jy/L/FFYdYlA3rO5/mfn+Iskg3ouQhX9U1mE/82oOcinB/1quPe
lwb0XATb+e53XhUb0HNevyzrl5ZaA3ougn7Mo4mT6gzoOd8HptG2Md8N6DnP
x3T/IS9aG9Fz3i/VD5eadTSi5yIM72ZyfWwPI3rO+6HzM2VofyN6zj3Yut9w
f6QRPRfh/ecLZ+t+N6LnIsSdV73t7WVEz0X4ktTlgq+fET3n8xB4+8zBICN6
LsKcoox7mRuN6LkIPi5jHtSHGdFzEZxSPq3tsd+InovQ9brVrUkJRvRchAeP
ooZtuGxEz3k+TjY8OZ5sRM9FOGuVIKT/bUTPRehlY5pX/tKInosw9IZjSmOx
ET3nnhH7te20RvRcBFlw2y02dUb0XATlJL9VTt+N6Dnvt39L1UNbV6PnIkRN
tZwwzKoaPRdh6kqXdoNsq9FzEWILZkbbOVWj5yI0uaa0FkZUo+d8/6b4P/rg
Vs3+B8MNBsQ=
          "]], 
         LineBox[{{3.135227727608221, -5.}, {3.1352478031338737`, 5.}}]}, 
        Annotation[#, {{Legended}, 
          Charting`Private`Tag$2116938, {}}]& ]}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {2.96978125, 0}, 
     PlotRange -> {{3.001, 4.999}, {-5, 5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2.96978125, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{3.001, 4.999}, {-5, 5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"3-channel\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "True", "}"}], ",", 
                 RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.761413461335951*^9, 3.761434679854389*^9, 
  3.76158443508134*^9, 3.761648426202873*^9, 3.761664544105921*^9, 
  3.7650186118884153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Legended", "[", 
    RowBox[{"K11", ",", "\"\<3-channel\>\""}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7651888887356157`*^9, 3.765188892824991*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
KeiRag0ydtc8pyDEoXnc/a6a5xRQJ10+beiieU7BHri0I7yz5jkFM7dVXOfV
SfOcgqqdB1z52EHznIKIkZX9TgRrnlNwZ2Gz54lBmucUTF+z50LX9prnFPTf
1eFlpXaa50p+lyc6vQDNcwrSPocVZTKa5xSYvbPOTwzUPKeg36v8goA2mucU
/B10v6Fja81zCpbM+XDurr/mOQVTzrxYntZK85wCrw6XNkS11DynYF2JG9+4
hea5Ev/AVyP+NNM8pyDfJd3zelPNcwriFrrXXtNE85yC+u/+Gxzup3lOwb2b
f+/4NNY8V/LhVEbCT1/Ncwoqjfo97mpDzXMKoEX+2tU+mucU9B08/Vd4A81z
CnSTH6T5emueU5CZeH/aHy/NcwrOR1ArbtbTPKfg4pr/CRvqap5T8LZnXkx0
Hc1zCsbkrvJv4al5ToF7YBrj6KF5TsEbjztz8mtrnlPwsHqNX9vdNM+V/uU5
9uBkV81zClw9928NctE8p+DkzyV3KtXSPKeAeHukmeyseU4BU23W4yM1NM8p
uPztVM5CJ81zCq4kL7/Rv7rmOQXfXj2v4VVN81zJH981mT+raJ5TMOj59nF5
lTXPKejla5ywqZLmOQUbAl7tiqE1zymo6zOuVntK85yCrlvjb1UmNc+Vfnex
NLfYqnlOgdP6DQUnLZrnFNRKqNk8xax5rvSvXTvyhps0z5V+FN47vblR85yC
oqKATINB81zpR84Br1/oNM8p2BLgPTKnoua54vXAhJqLHTXPKfhi8TYPddA8
p8E9tnJzvwqa5zTkNU9bX7G85jkNqxvdalJYTvOchpitqRVz7DTPaTARY+tT
/1j0nIZSw5zcM79Z9JyGhocic8b8ZNFzGrbH7Kpd/QeLntMQ0rt6hatfWfSc
hs6Vv/SZ8plFz2m4FHaiqsdHFj1Xvu9LRNcH71n0nIbHi9NKEt+y6DkNJzun
OTR5zaLnNJy1ZC8TX7LoOQ2TjQcTV8sseq6cd+mU18Eii57T4L/d4dx3jkXP
aYjKzHLc/YJFz2lYUcv39JDnLHpOQ1p4qGh9yqLnNCy8P2Dmxccsek5D1qqX
8dPyWfSchtlrAj55P2DRcxpeR+/K5+6y6DkNE06S9dbeZtFzGspH5tzslsei
5zR8Lb/gp/0NFj2n4UnfGuuPX2XRcxq8i55sj7nMouc0jOba1qp3kUXPaajy
8H157hyLntOQYOg6aP0ZFj2nIeXliX49T7HoOQ3WHV2TdCdY9JyG2uMc6l84
yqLnyufRmS3jjrDoOQ1N+6Qfbp7Douc03OtzKf3jARY9p+G7f9CXvftZ9JyG
C12mHY3ey6LnNGSf7/HSYzeLntMwqPLzeXwmi57T8K1d8bJNO1j0nAav0XSF
IdtY9FyJLxv6svoWFj2noUK5482ebGLRcxrGkhVK1m5k0XMa6o7qWqVfKoue
03A+kd1ZeT2LntNw4vyb7flrWPSchjG/vC1rV7HoOQ3jTbFiv5Useq5834gv
taulsOg5Da0X59wqWMai5zR0HThPSkti0XMaNrk2jAxbzKLnNOyfXD/UbSGL
ntPguexupjSPRc9pyBicMCorgUXPaRjme2L12Dksek4DfYOv3zieRc9paB+c
7f1tJoue0+A7ffmak9NZ9FyJz/hHoxKmsug5DXB1QWbHySx6TsNVIe+CaRKL
ntPQYOYC7sEEFj1X8smjffu0cSx6TkPcjedtIsaw6DkNe7tyxgajWPRcqYfU
Xle/RLHoOQ0VDzxecHoEi57TYPfOrWThcBY9pyEy9vOzkGEsek5DI+uo/jXC
WPSchpGbPZyLBrPoudJvPBxDDg5k0XPlvpJXF8f1Z9FzGuYLa4o79WXRcxo6
ZUwKqdybRc9p4AtcXIUQFj2ngRxRrX92DxY9V+6zS6tvcd1YZrXNcxr8yGW/
unRh0XMaNvw6M6p6JxY9V/L7TjRTHMyi5zQcdhwRd7Q9i57TMHTVMddFbVn0
nAahtLtPf4ZFz2mYd6ba0bptWPSchgc1v6f98GfRc+W+pB789ZYsek5DQMbw
pWnNWfRcye/LFdPGNWXRc6VejFcI8GPRcxoSTxS8pRqx6LlS/+1G+Bb5sOg5
De0cYp8c92bRcxpadqj7OtmLRc+V+vg+YNjwuix6TsO6l+PbtPBk0XOl/0a2
TTC5s+g5DW3u9akvuLLoOQ3BE2MDjtVi0XMazm32fbXcmUXPlf51x+VGpBOL
niv9qF0a2aYai57TcMg792ylKix6ToOhfo/8tzSLniv3vfFZyGWSRc+Venzr
32STlUXPaehyIylumplFz5Xzjx/aINTIouc0pBe9bu+tZ9FzGlw8l110qMii
5zT0Kmy0m6vAouc0PE1b++OkPYueK/kg6LPX2bHoOQ2nQ57fiv37Aj1XPJwc
3jfk9wv0nIYXu08H+/x8gZ7TcPtLbIbhxwv0XOlfKdsjir++QM9peH/ecdWV
zy+Y/wO1lsNU
          "]]}, 
        Annotation[#, {{Legended}, 
          Charting`Private`Tag$2128129, {}}]& ]}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {2.96978125, 0}, 
     PlotRange -> {{3.001, 4.999}, {-5, 5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2.96978125, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{3.001, 4.999}, {-5, 5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"3-channel\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "True", "}"}], ",", 
                 RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.765188894371449*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"De", "=", "6"}], ";", 
  RowBox[{"a", "=", "1"}], ";", 
  RowBox[{"re", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "0"}], ";", 
  RowBox[{"rmin", "=", "0"}], ";", 
  RowBox[{"rmax", "=", "20"}], ";", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "funs"}], "}"}], "=", 
   RowBox[{"NDEigensystem", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", "r", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Vmorse", "[", 
            RowBox[{"a", ",", "re", ",", "De", ",", "r"}], "]"}], "+", "De", 
           "+", 
           FractionBox[
            RowBox[{"l", 
             RowBox[{"(", 
              RowBox[{"l", "+", "1"}], ")"}]}], 
            SuperscriptBox["r", "2"]]}], ")"}], 
         RowBox[{"u", "[", "r", "]"}]}]}], ",", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", "r", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"r", "\[Equal]", "rmin"}]}], "]"}], ",", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", "r", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"r", "\[Equal]", "rmax"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"u", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", "3", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<SpatialDiscretization\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<FiniteElement\>\"", ",", 
          RowBox[{"\"\<MeshOptions\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<MaxCellMeasure\>\"", "\[Rule]", "0.2"}], "}"}]}]}], 
         "}"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"channel3states", "=", 
  RowBox[{"vals", "-", "De", "+", 
   RowBox[{"Eth", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.76141380554947*^9, 3.76141383370265*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.2572227820519872`", ",", "4.1581812663427975`", ",", 
   "5.019883099374172`"}], "}"}]], "Output",
 CellChangeTimes->{3.7614138382220297`*^9, 3.76143620058278*^9, 
  3.7615844351899567`*^9, 3.7616484266344643`*^9, 3.7616645443420477`*^9, 
  3.765018611965927*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Legended", "[", 
    RowBox[{
     RowBox[{"Tan", "[", 
      RowBox[{"\[Delta]", "[", 
       RowBox[{"4", ",", 
        RowBox[{"\[CapitalEpsilon]", "-", 
         RowBox[{"Eth", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], ",", 
     "\"\<background\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalEpsilon]", ",", 
     RowBox[{"Erange", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"Erange", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761413990240123*^9, 3.7614140014669447`*^9}, 
   3.761647841076099*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           GrayLevel[0]], 
          LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAY2czTwwCCECUrqqSKjzDvyDhW5VN
AwhAgC5HVmyGyL/eWoTbjgQIQOLILxP57My/m9SsIdAFCEANw5tJImbQv1hO
1WcRBwhA8RXMB/kn0r8VyP2tUggIQKJnT4FZyNO/0kEm9JMJCEBvFj8RDU/V
v0w1d4AWDAhA7j9CUQ0j2L8Jr5/GVw0IQCcDdeXwdtm/xijIDJkOCECq48e2
L7/av0EcGZkbEQhAytu1Qzkz3b82A7uxIBYIQPXKgEco5OC/83zj92EXCED3
eKstanDhv7D2Cz6jGAhAZcgVs6/64b8q6lzKJRsIQMDcIkQhCuO/H9H+4iog
CEA3yjnUZhnlvwifQhQ1KghAxh6RllcU6b/FGGtadisIQIeYZ2EUkum/gpKT
oLcsCEB7Zx2Drg/qv/2F5Cw6LwhAyhcBI7UK67/ybIZFPzQIQDG1zQmAAe2/
2zrKdkk+CEBSl1NCFX7wv67WUdldUghAXrqjuxC19L9laZQlulMIQOgtrtlz
AvW/HPzWcRZVCECjQ60yglD1v4khXArPVwhAsP19kbju9b9kbGY7QF0IQCzQ
Wag4NPe/GwJ7nSJoCECjMEzWR+n5v9KUvel+aQhAoTiyXGVE+r+IJwA222oI
QJuge3KboPq/9kyFzpNtCEAgRng/clz7v9KXj/8EcwhAcxHbpL3i/L+ILaRh
530IQHwdgIwhGQDAP8DmrUN/CECS99efplEAwPZSKfqfgAhAUjVlwQmLAMBj
eK6SWIMIQN1QLsqEAAHAPsO4w8mICEDtLTiPFfcBwPVV+w8mighAg79XRVE3
AsCs6D1cgosIQA0HHNOmeALAGQ7D9DqOCEBJtMbUwv4CwPRYzSWskwhA0Sg0
x8kZBMCo3W8T0pMIQAJ+/dnaIQTAMcAyEw==
           "]], 
          LineBox[CompressedData["
1:eJwVz2s01HkYwPFBaub3nwuzTneSThaJ2km22PM8GUzY5Chy77JnChVbiSKX
zTW1zqaTYreSyD2b2KYLk3IPlZUkOUaKSaOZzJjRFNu++J7v68/yPZHeQl0a
jbblW////Eub1RIJA11t5mTcm9DDXY6+rBPDDDw8oMOvG9JDp/RF1umjDMz5
Y0q45Fc91DfOD7ukYGCLuRquXdJFEX2/vfYTA9u6/RvST+piuNJO31/JwCTf
ZG7dPl3sevw430jNwL9tPZ2MeLqYE6t+cfoLA+8E7r66pVMHzfs8XWPnESwP
b4roZOtg36NFRn10gm7M7qZlGhpmVo1I7AjBgnntjCoJDSfSYuMVTIIOkm1e
SbU0/Mfuek0ol6Bhv6aveycNXc99NdthTHDhNk2y5MQsaBJa5TUmBIvtb90Q
+M5CWfi5eq4pwRM/cijmmllgO1kGdJkR9P0SUFA6MgO98u1nXSwI3rfdPGbo
PQN7PStmeTyCVuzK/uOOXyGdEThg4EbQQGR1RS7QwsZUHbdQd4LnKKNh31Va
+EArqRV7EMzmQuMUWwteGmVWhCdBWXVU9FDvZ1g8mrWpYxtB/ShpjSDsM9xo
fHg9PeSbf7g6/OmFaehJtDo0c4Rg6g7TI2ULNJCmffra5yhBIafdgqWjgQ0x
Me6V0QTb+QLqwns1XI5oXBF0nGAj6+AFk3o1hAaH9N5JINidxZuQ71WDdmO2
w9FTBCdXdjRtFk+B2dS0/ofLBDu7BXMwQwV+dQPB1vkEebV33egxKshKEdce
uEpQrmL1jQlVoOWmCmXXCMaJw6UKvgp6bA2aJkoIjoTtrDPWUUFqmHmKopog
3dHfpzJRCWMD3rrqZoKjPKbC58wkmBTaBdi3EpQUG1g0xk/C9v0Lq2PaCNbP
nC92jpyEhunXuzWPCc5fl/YmznsS8uaHNUw/JRj1i8cy8aJJ+NkrMelLP0HW
ksunjpV/gqpH5TM6HwlGymOT2vsVMHitJChYTrBqlcVy204FsFOK7ooUBOet
tA0qFCsgwvlKdKSSYOGtKqMHhQqwacqeGJgmaD1u2imKVEBF8/HB23MofMW/
eTKbroCyNkH9wcUUGs4OOXBd5FD45E38SxcKO2lLz65okYGfdmmLsYDCt3F6
RS9uyYD63tdgz2YKM0qG4y/ly+BwQmvBe3cKc9+m0ENiZbBpdWWLdiuF5g33
fKpsZDCYGW1oEkBhoEOOc2zeB1joyijaE0GhH7t4x3T8OJy+b9MxnkOha3R5
dHqkFPAYv8byIoUJXmu61u+SgpLn99e+XApHDZUihZcUgsp/O/DmTwp7Levn
Zv4gBeu8HuarfAodRRKx09QYdMTEbmkvozAxaae8OXEMmLzmrpJ6Cp9NhB2s
zhuFM6XBz4TvvnkyXK1Wyd6CqocbfNWRiQO71yuKaofBS9J/e8HvTGRPPh8/
ZDwE31lb5m4dYaKffyCtxuUVyKMD137cwMKQilDORlkviAvyL7adYmHNu63x
nT/9C1PMA2nCIRa+LMvzcTZ7Asv83PmOa9lYyvdw8m1qhZuSG2k9GWzsN+so
Oub9EIL2q5N6BtmoHJeW0u+LYPq5tzvHloMlR5PnanZVwEzCujwqjYPJUddz
Hzhkgr9ou0fpFQ7GffTuKrV3hv8AUlU85w==
           "]], 
          LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAA0Ws3XEWiD0DY2+Z7azREv4LJgMdw
ExBAsMI+0MFyr7+/LbD1oD4QQAlrNqIVa7m/dQJpi+5mEEB2hr13nxnBv1/2
ZOSckhBAAc51EyC8xb9V6tIYf70QQIIvYqtGLcq/xE7KtH7lEECbDmnarDzO
v2jSBBTfEBFA6Tm8jwBI0b+FxsjaXDkRQLgLnS/hRNO/rrr+fA5hEUAKBTJN
aTHVvwzOd+IgjBFAZpI1D+tB17/iUXqvULQRQBc6nphrKtm/7fS/P+HfEUAQ
xdtJ9jfbv3EIjzePCBJAmxtNtMMf3b8BHNAKcTASQDr9VMX7+96/xk5UobNb
EkAipVxShH/gvwTyYZ8ThBJABCzQbn5v4b92tLJg1K8SQLbvvqF+c+K/9XZ1
/cjaEkBUEtUYCnPjv+ypwQHbAhNAcoJqsPVh5L8Y/FDJTS4TQJYty6/oZeW/
vb5p+N1WE0Cd7eBOslnmv26B9AKifhNAjSvi8/ZJ579UY8LQxqkTQKs08iZV
UOi/s7UZBgnSE0D7WpkA/Ebpvw7oYsm80hNAdnUGuU1L6b9oGqyMcNMTQCQr
X5mfT+m/HH8+E9jUE0ASxSPSQ1jpv4ZIYyCn1xNAqBYsJo5p6b9a26w6Rd0T
QBMTymkqjOm/AAFAb4HoE0AGOaHrgdHpv1oziTI16RNAnGBiyNjV6b+1ZdL1
6OkTQL/UkM8v2um/aspkfFDrE0Aus4Vd3uLpv9STiYkf7hNAsKH/eT306b+n
JtOjvfMTQHGRtcYDF+q/AlkcZ3H0E0BifqxTXRvqv1yLZSol9RNAy8VQDLcf
6r8Q8PewjPYTQCBZ8QBrKOq/erkcvlv5E0AUMML51Dnqv9TrZYEP+hNAFJJT
5i8+6r8vHq9Ew/oTQDMvMv+KQuq/5IJByyr8E0CvBCe2QUvqvz61io7e/BNA
GzFlVJ1P6r+Z59NRkv0TQP2AQB/5U+q/9BkdFUb+E0B77cwWVVjqv05MZtj5
/hNAqm8eO7Fc6r/juXcN
           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$2117037, {}}]& ], 
        Annotation[#, 
         "Charting`Private`Tag$2117037#1"]& ], {}}, {{}, {}, {}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {3.001, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.001, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.001, 4.999}, {-2.516530707405537, 2.491568625094973}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"background\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.761414002775691*^9, 3.761436205132577*^9, 
  3.761584435480403*^9, 3.761648427265007*^9, 3.761664544768255*^9, 
  3.765018612226139*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"Tan", "[", 
        RowBox[{"\[Delta]", "[", 
         RowBox[{"4", ",", 
          RowBox[{"\[CapitalEpsilon]", "-", 
           RowBox[{"Eth", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], ",", 
       "\"\<background\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalEpsilon]", ",", 
       RowBox[{"Erange", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Erange", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", "KK", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalEpsilon] \!\(\*SuperscriptBox[\(\[HBar]\), \(2\)]\)/(2\!\(\
\*SuperscriptBox[\(\[Mu]a\), \(2\)]\))\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(K\), \(22\)]\)\>\""}], "}"}]}], " ", ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"4.1581812663427975`", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4.1581812663427975`", ",", "4"}], "}"}]}], "}"}], "]"}], 
        ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.257222782", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.257222782", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        "Dashed"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2.79355", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.79355", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        "Dashed"}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761413500187972*^9, 3.761413554736267*^9}, {
   3.761413643544528*^9, 3.761413674933114*^9}, {3.761413730424914*^9, 
   3.761413763662462*^9}, {3.761413853065021*^9, 3.7614138563966084`*^9}, {
   3.7614362367640467`*^9, 3.761436257410273*^9}, 3.761647848452182*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Thickness[Large], 
            GrayLevel[0]], 
           LineBox[CompressedData["
1:eJwdUns0FGgcHWNqfuMtDAoNJY9IGwq7a355HiWvvFPnIKZkT5ZN9ijk3dZy
8qistZS2s0sz2hXrcNrvKzWY2ITETpM82hpiK69Famf3nnPP/ef+ce891zTm
eFAck8FguCn4n8YK7P3VmIBloroS68/aCW/0QPk+ZcCsbd6hifmd5FlkrrSI
BTjWaaez9LqbVA7cMO1dA6jeXuljFt9Lwv0eC7TZgG/1utlLFn1Er3NVGASA
VwX+ZyI6+0nf7i1zpRzA41y+trr/Y+LreDKLqwY4w3cLVN80RDgN1eIwdUAL
5RMv3qQOE7Flp1qFBmDdeEezHfmT7DYyrNigDSiRNrk728vITuW2X3hcwHlJ
lrflxHMye2p8MVofcDGt3jYhaZTcXFB1rTUAjOvUa2xYHiXWk1ES8w2A9KmZ
h6nKONn46MOYNQ9wl8R5IN7wBYFqN11Ha0CxyYWLYbpyct/gWGTqVsCCy4Jo
3RI5yS4prfnNBjBdYJwj0pwkq3kTNi52ijz6SpuaVKbIu8R8T74D4CdNPZws
pWkidZGk+rgCBl3a76aX8YaIBgOHDwYBHmqtbdNqmiNxR8vMW/cDvrIVDacw
54nR+8EvuSGAte7CHdkB8+SsaZTKwzDAm6unL7TMzJPDifGf4kFAm96In5wc
FskGZnqV2RGFf7vvoLd8ifSV3ZZnHAW84vRrVJzHMim0YOyUJgBW1qQnV9Ys
kwXfvD9KvwDkeaXxk6NWSN+l4o+sFMAUbem122PvSaHtteiXpwFPGWedNzVk
UD79S+ieCViy+KT6eiCDLgRZLVdnKfo4xt3hnGPQ2DRRSXgOoCxgmySXoURd
21vauwoBp22divUWleh8yIrmlm8Ac0iYZ+AuJr3x6vOo7HOKv7CN+q+nMamh
RvucSxGgzy3xwN0PTDoX3mN+oxTwkaVDR5chi9ZPaSZDuWKvq6oZslgWjckI
+v3wRcCJl3cKDjSw6MPaJ6HGFYDDwb4fxXvW0LqZ0YKiHwBZ5c/2dpetpdFn
Ng9MVgOqKe31r5laSw10BTzvK4p/vaN7/DzYNN/5dcvHWsAMq9DiUytsGp27
IE/6GdCsWb/HLodDv485YdpcB5hgYrt1cpxDB3EufKUeMIDHmH3gpUJ9V992
5IkAIzIvi0N1VOnO1Okfv2sEvD+kP7TUpUaTghNlI7cAv2Zz10e6qtP6HVO6
5s2AsW3m8TVN6pT396uchhbArypSNoUJNajKkYnoe7cBm20EM2djtKiHV2wF
hwD2qwnlvDotmrl5rNePAkrHtpHWWS0693yEP3wXUF+eJtv/rTa1I4dOmtwD
FMZ1GeXJtGlClUwUex/Qat94pPH2dXQkQmo80wFY5X5a9M/TdXS9U2SIfZei
71pWcvouHRrMHT6fJgFsPOb5fKJMh7Zp1N+TPgBk/A9d+i//SeAH
            "]], 
           LineBox[CompressedData["
1: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
XyfOlfaWuQ/YEDZr25a715j8D4B5FII=
            "]], 
           LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAA0Ws3XEWiD0DY2+Z7azREv4LJgMdw
ExBAsMI+0MFyr7+/LbD1oD4QQAlrNqIVa7m/dQJpi+5mEEB2hr13nxnBv1/2
ZOSckhBAAc51EyC8xb9V6tIYf70QQIIvYqtGLcq/xE7KtH7lEECbDmnarDzO
v2jSBBTfEBFA6Tm8jwBI0b+FxsjaXDkRQLgLnS/hRNO/rrr+fA5hEUAKBTJN
aTHVvwzOd+IgjBFAZpI1D+tB17/iUXqvULQRQBc6nphrKtm/7fS/P+HfEUAQ
xdtJ9jfbv3EIjzePCBJAmxtNtMMf3b8BHNAKcTASQDr9VMX7+96/xk5UobNb
EkAipVxShH/gvwTyYZ8ThBJABCzQbn5v4b92tLJg1K8SQLbvvqF+c+K/9XZ1
/cjaEkBUEtUYCnPjv+ypwQHbAhNAcoJqsPVh5L8Y/FDJTS4TQJYty6/oZeW/
vb5p+N1WE0Cd7eBOslnmv26B9AKifhNAjSvi8/ZJ579UY8LQxqkTQKs08iZV
UOi/s7UZBgnSE0D7WpkA/Ebpvw7oYsm80hNAdnUGuU1L6b9oGqyMcNMTQCQr
X5mfT+m/HH8+E9jUE0ASxSPSQ1jpv4ZIYyCn1xNAqBYsJo5p6b9a26w6Rd0T
QBMTymkqjOm/AAFAb4HoE0AGOaHrgdHpv1oziTI16RNAnGBiyNjV6b+1ZdL1
6OkTQL/UkM8v2um/aspkfFDrE0Aus4Vd3uLpv9STiYkf7hNAsKH/eT306b+n
JtOjvfMTQHGRtcYDF+q/AlkcZ3H0E0BifqxTXRvqv1yLZSol9RNAy8VQDLcf
6r8Q8PewjPYTQCBZ8QBrKOq/erkcvlv5E0AUMML51Dnqv9TrZYEP+hNAFJJT
5i8+6r8vHq9Ew/oTQDMvMv+KQuq/5IJByyr8E0CvBCe2QUvqvz61io7e/BNA
GzFlVJ1P6r+Z59NRkv0TQP2AQB/5U+q/9BkdFUb+E0B77cwWVVjqv05MZtj5
/hNAqm8eO7Fc6r/juXcN
            "]]}, 
          Annotation[#, {{Legended}, Charting`Private`Tag$2117100, {}}]& ], 
         Annotation[#, 
          "Charting`Private`Tag$2117100#1"]& ], {}}, {{}, {}, {}}}, {}, {}}, \
{{}, {{{}, {}, 
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwdknks13EYx39+rifpINlv1hxNrTn2y4wmWY/cS/tJy4SOGWUmNUlpKLmG
mVphkoxOK5JrrvV8pkhaRil00EGS3Dehz+/zbN99//h+99779bwek8Az3sFS
iURizR/l2+ZYnYe2FHDleG/kX+cXVGAg/2qqAfjL84q9ze920uq6e9ZBC/Bj
WPetk4YfKfKGTM1nPeCgpEV9OvkT9SkycsJ1AZ/4PH5Mcb3Ew8xT9AHnrjZW
y2TfqbIl6nmBAWBd7bA0rucHGSYNH6wxBGz09vywJr2fUh1PDLRvBSyZl6v0
Wv2iqeXOi0PbARPl7iX1HYMk6pkDmuiNmKacHiIRJwdc201zNzSHyVoM4Gqn
ddf7wr+UP/awef8uQGbbtDrtMErwZItfkD2gl15bV9TXMYoIuT4SsxewIDfX
8wsbJw4bn+UE2JouUZFmT5Db90t6pW6Any/Hv24Nn6RyEQiokESkd+yfImVa
nwLQMawoqcxymlL0e9rmDgEOaWo/UN08QxPvDgRu9AV0e2R+L1Q6SwGZjTM7
AgCLo8sX0mZniZfjyIDN3f1vdSbnyEoUBGwwMRyompmnvJfGZREhnEfb/a6d
dJGU7dLDAJ1WneWnZUvEZXAjgLs3JDbttPtHnxfiQhsiAS0qgjwuBC+TS7Vy
g/z/2EFTjzsrVCaAAfOPhKa96l8loTcesCZxUV+WL2FCRxLgn1mHlnGFChPr
S+X+qlxXnq6VMoGbAXj/WnaJZYeUiXrXATX6jMC/UJWJuCzASWe/DNdYNZYr
BtD5i+8345PqjB+LZXk+5xvyvrnvqAYL101grYWA55azzKyDNJlyez/vc56s
sMxnMcA47OBSMaDBtono54/WsFIhBHB9cqVV8R8tJhOBgKEBZqeMXLSZMs2l
GrBTq0LdsX4d43L5SQPa5LXb1nptYL52ygsE1Lk9ajSWuJEpbWQ2An5LO+w0
cl6HWQrBgJKETUtn43RZjigI6F/XbrGnaBNTO7fkOv6Gfxejx/4DbS58SA==

           "]], 
          LineBox[CompressedData["
1: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
           "]], 
          LineBox[CompressedData["
1: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
x4SYGicFek7h58j8+g8jFOg5ry9cm9LkrkDPKZj0rjvRfJoCPaew91xLpbmv
Aj2n4Nv4souwVIGeU8j+snBSpw0K9JzCMPkPP+udCvSc52frjF299inQcwrD
Wzy65BivQM8pnJAVNg25qEDPKTSbX9zZ5bYCPaewZMOXX8akK9BzCtW+ubP/
eKFAz/k8nLu3zbNQgZ5TuKJsc3WmSoGe8/5v6FblW6tAzykkffLoGtikQM8p
dOvz0H95KyV6TuHC1z4311Elek6h8+1QYau1Ej2nELj467awvkr0nMLK9obv
e4Yp0XMKzCFt/8ExSvScwq/qlF/iJyvRcwpvYXP9mTlK9JzC7DizrMRAJXpO
Yfv9qXdvrVGi5xSGerilPQhVoucUysZtVT7eo0TPKWRe/KvniyNK9JzCigVu
Eblnleg5hRHdg83LrivRcwoBV9k19UMlek5hQP37jW+eKdFz3j9pDxd9ylWi
5xQS43678aNSiZ5T6Bvd5Z1ZjRI9p3A3SzubNCrRcwo33net62KqQs8pbPt4
9K5dexV6zvvX+9CV/j+r0HMKbb+XyYY7qNBzCqucLPuOHaJCzynMmpp9b9Jo
FXrO718fFDzLQ4WeUyieQDb6z1Sh5xQSRpKrK/xV6DmFrbKhXbesVKHnvJ6d
MrMiglXoOYXrnpPvHIhUoecUujw5UHHikAo9p7AvNnX8lVMq9JyCcv6mhpQk
FXpOQRuWqs+4p0LPKfzZxtpGnqFCzym81KlPVeao0HMKIdGKxW/KVOg5Bb/p
UVub9Cr0nEL5eG2Feb0KPef5dE2N6dRMjZ7zeZp3cLd9WzV6TsHH848i585q
9JzCm0HeG93t1Og5Bc/ua4OmD1Sj5xQmkuvJC0ep0XO+j+lp7w3j1eg5hYFx
CRMjvdXoOd9/ZjNOxs1To+cUFgrXva4sU6PnvB861vg82qRGzylc/Dwn83W4
Gj3n+yFmabRyvxo9pyB/nXCnPkGNnlN4nzvhV/NENXpOoX7MW8eud9XoudQP
77YPfKxGzyncir3s4v5KjZ5TmB6z03dOiRo9p5D1KKx2pVaNnlNI2WP9LqJO
jZ5TiHnrMyzhuxo9pxDZvqj1ndYa9JxCaNpIjxdWGvScwtLHsV+Vthr0nMKB
m9Xdmpw06DmFmm+rb9GRGvScgulArwf9fteg5xT6LTszzH2aBj0XoVAT3tfP
V4OeixA41v/I5qUa9FyEf5asCj68QYOei7DuUmXpjZ0a9FyEGc6v72bv06Dn
IqSctW5viNeg5yLsHZCsaXFJg56L8OmW9+gedzTouQjx9rP4ktKg5yIEBxkD
fbM16LkII8bddA0p0qDnIrT02hmXoNag5yKMNiuPePROg57zeFzNjOVfNei5
CJsuWuZ+N9Oi5yJcu9TRrXsHLXouwqvw26N+s9Gi5yLk9f/w1N9Ri56LsOfi
o5xdw7XouQi7hwavueKmRc9F2GqXcfi1pxY9F+Hv9M8uH3206LkIi+xHzu28
RIueizBm2usev67XouciHD9ydFPADi16zvM1b+Of0Xu16LkIU2ShubePadFz
EZoX+heVXtCi5yIMqei13PS2Fj0XoUTrcdgxXYuei2CcPWnSjBda9FyE047H
47YXatFzERRP4jYkqbTouQj2mqf6wlotei5Cj5Seb0y+atFzERplP4UPMNOh
5yKkBZbd8BF16LkI2ouxK/d016HnIqhPTMm430+Hnovw9MC3NP0vOvRchBzB
36WTmw49FyHgz5AJ4zx16Dnvv9mxbzf66NBzEdJFX/vExTr0XATTnv0/la7T
oecivPBIvGq5Q4eeixBq5nUK9urQcxEsg1YK647p0HMR6kLP9bl8QYeeixCR
/HB5+S0dei7CFVCdJuk69FwE98E3F457oUPP+bxMOHI/pFCHnvP3hb88lqzS
oeciiO1c27+p1aHnfF7upZvafdWh5yK06qXe4WOmR89F6DTTfc9foh49F8H8
ZEHnnO569FyEjHsBjq0d9eg5z9/CVhljh+vRcxHmDz5VGuqmR8/5+25UrHro
qUfPRXiePzuswUePnouwNHxn+yFL9Oi5CG4kga5ar0fPRdAsK959bYcePReh
T6Nudc1ePXrO6/k4/J8+8Xr0XITqLi6Riy/q0XPeP2uGXrt0W4+ei5BoG+ys
T9ej5zz+lhk/O2Tr0XMRLOimuYuK9Oi5CN1uGBSX1Hr0nMfb1e6p4Z0ePRfh
p7u/fOjzTY+e8/k92zghyNyAnvN81c5qutrBgJ6L4OKyX1lrY0DPRejsv/7z
QCcDei5C/opOw9eOMKDnfN9sco+7625Az0VgKWPJ56kGdvg/z/nfreceG+lr
QM9F+Dmoxj5kqQE9F2Fl3ws32QYDei5Cm+43XE3CDOi5CN5V0xLcYg3oOc93
YF7eruMG9Jy/L/FFYdYlA3rO5/mfn+Iskg3ouQhX9U1mE/82oOcinB/1quPe
lwb0XATb+e53XhUb0HNevyzrl5ZaA3ougn7Mo4mT6gzoOd8HptG2Md8N6DnP
x3T/IS9aG9Fz3i/VD5eadTSi5yIM72ZyfWwPI3rO+6HzM2VofyN6zj3Yut9w
f6QRPRfh/ecLZ+t+N6LnIsSdV73t7WVEz0X4ktTlgq+fET3n8xB4+8zBICN6
LsKcoox7mRuN6LkIPi5jHtSHGdFzEZxSPq3tsd+InovQ9brVrUkJRvRchAeP
ooZtuGxEz3k+TjY8OZ5sRM9FOGuVIKT/bUTPRehlY5pX/tKInosw9IZjSmOx
ET3nnhH7te20RvRcBFlw2y02dUb0XATlJL9VTt+N6Dnvt39L1UNbV6PnIkRN
tZwwzKoaPRdh6kqXdoNsq9FzEWILZkbbOVWj5yI0uaa0FkZUo+d8/6b4P/rg
Vs3+B8MNBsQ=
           "]], 
          LineBox[{{3.135227727608221, -5.}, {3.1352478031338737`, 5.}}]}, 
         Annotation[#, {{Legended}, 
           Charting`Private`Tag$2116938, {}}]& ]}}, {}, {}, {{}, {}}}}, {
    PlotRange -> {-5, 5}, Frame -> True, LabelStyle -> Large, GridLines -> 
     Automatic, FrameLabel -> {
       FormBox[
       "\"\[CapitalEpsilon] \\!\\(\\*SuperscriptBox[\\(\[HBar]\\), \
\\(2\\)]\\)/(2\\!\\(\\*SuperscriptBox[\\(\[Mu]a\\), \\(2\\)]\\))\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(K\\), \\(22\\)]\\)\"", TraditionalForm]}, 
     Epilog -> {
       StyleBox[
        LineBox[{{4.1581812663427975`, -4}, {4.1581812663427975`, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False], 
       StyleBox[
        LineBox[{{1.257222782, -4}, {1.257222782, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False], 
       StyleBox[
        LineBox[{{2.79355, -4}, {2.79355, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False]}, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {3.00100004077551, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.00100004077551, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.00100004077551, 4.99899995922449}, {-5, 5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"background\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"3-channel\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "True", "}"}], ",", 
                    RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.76141350599406*^9, 3.7614136812790213`*^9, {3.761413736330385*^9, 
   3.7614137653956013`*^9}, 3.76141385833628*^9, 3.761436207015429*^9, {
   3.7614362483754177`*^9, 3.761436258338757*^9}, 3.761584435945342*^9, 
   3.761648427934503*^9, 3.7616645452303534`*^9, 3.76501861252035*^9}]
}, Open  ]],

Cell["\<\
Okay so it looks like there is one resonance feature here that coincides with \
the position of a bound state attached to the 3rd channel.  That position is \
indicated by the vertical dashed line.  \
\>", "Text",
 CellChangeTimes->{{3.7614139075955477`*^9, 3.7614139777478733`*^9}, {
   3.7614140258102713`*^9, 3.761414040494137*^9}, 3.761663970282405*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KK21", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Legended", "[", 
     RowBox[{"K21", ",", "\"\<3-channel\>\""}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761436407987075*^9, 3.761436410570908*^9}, {
  3.7616484588938503`*^9, 3.761648459010537*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwlVHlQlGUYX830WcchBCMCZ+mA3UZcHGCyQ47HghhEMI1tGEI0QGCwuETG
aeKS2UzlkISAMeRY5LAN15VFQ+FZUUBOcUFwJVtsAcMDBpbaKTJ69+2Zeef7
6/19v+t5X49K2nNgpUAg8GPH8n07sjVw3UrA3oSwrOeHi6jSYcsD59WAMFCm
djtYSmvHFMneawElcenFvk5nKO20/apPrQA1kts1PbZnybArvzTRBtBvZtQY
ElpFDMz1mB1gYX/uxOzRamq+ld5e6QDY85IxLqiqhkTyJ7uviACtn86Ga9QK
Or59/9TQG4CbUwr2ydpryfR85MiMGDBVvmbRsesccXqugIIhncSrv4443BZA
2d2KkBRdPXnyARxdn9spvt9AFXP1XUHvACb31Q9/N9lIoNwYHrMN8Or7srLu
hfOUGl/07GtfwNgfk1fTi0piYnNKPgRsHvw8JVr0EwU8/GpDUwCgi8vD5RLv
JlJzQOaH4jeNZ8wFsqAZdgHGvCzszQtU0TE7/aD5E0DHnB1WxVMqmtcFR1mH
ATZmBm9TfHORIgo7/ngrAnDTCz6XPKRqYuSYZMA9k2K4rleTOycI2HrW6eRI
3iU6c/M1VWo880PWoPjno2aysDv5BWC2eeToMGiIhcESAcx/PPjLsk5D439l
JlxLA6ytkvRvrWsh/xaLg4BqwV4rn9zLpOKCAX8QpMTPJlwhHm8OYM3wnayt
kT8Tj0PO/idcWC+KbCVu33HAU0ubOnsOXiUuNx/QlH4hP+vba8TpFQFWixwF
Sk0bcbgSwImn0cLfF9upnA/gmNv4EYGzllhZpOoKQGWhPiL7npYSbXK1vdWA
NvPmhI3l18ninvEcYHvbxyckcR3ExD5aagRsKNGpxH43qIkHwvIvWyy9736T
7Dkg00+nuoM8OsmC5t8C6PaluU4f0EUsXFZpwPLTGRnBh7sp7D1LAwETo1Y0
LbTdIksahR3M/83rpjQuvSTlAQPuNHgpgy/2USknyPqzwnsyKXaALG3WD7L7
csW7r+68TRZ28zpAfcsDU7pmiPh6jAFG+2cXG6bvEK/zOODk3zGub24fJl4/
A+COZ9HZ9gMjxOtiBMwLlM2Ffj9KPN5HgF2HKm1DlfeIx/EEsCLzcu0HzuPE
7ZsD9JDK9xscfyUu18T6emNvgcQwQZyeGVDsleQTIjYSh1sCPLRv9/SQ3TQJ
+AjRs88h45U1j4mVhW2wEE/EOkd+VjxHd9m2uYMQe9J8Chb+NZEvfxCEqHb9
M1bqtETneaGFOOp+wFoxs0q7nBheUGMrxP9xN2j/A33aBEE=
          "]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[{{3.135026204705611, -5.}, {3.135448750536468, 5.}}]}, 
        Annotation[#, {{Legended}, 
          Charting`Private`Tag$2117193, {}}]& ]}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {2.96978125, 0}, 
     PlotRange -> {{3.001, 4.999}, {-5, 5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2.96978125, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{3.001, 4.999}, {-5, 5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"3-channel\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "True", "}"}], ",", 
                 RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.761436418939295*^9, 3.761584436124099*^9, 
  3.76164846041756*^9, 3.761664545525158*^9, 3.7650186127908583`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm21", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"KK21", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalEpsilon] \!\(\*SuperscriptBox[\(\[HBar]\), \
\(2\)]\)/(2\!\(\*SuperscriptBox[\(\[Mu]a\), \(2\)]\))\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(K\), \(21\)]\)\>\""}], "}"}]}], " ", ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"4.1581812663427975`", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4.1581812663427975`", ",", "4"}], "}"}]}], "}"}], "]"}],
          ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1.257222782", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.257222782", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
         "Dashed"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2.79355", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.79355", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
         "Dashed"}], "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7614363844721937`*^9, {3.761648484814394*^9, 3.761648492139452*^9}, {
   3.76164873278158*^9, 3.761648742147642*^9}, {3.7650221369961567`*^9, 
   3.765022142723928*^9}, {3.765022427164423*^9, 3.765022431546464*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwlVHlQlGUYX830WcchBCMCZ+mA3UZcHGCyQ47HghhEMI1tGEI0QGCwuETG
aeKS2UzlkISAMeRY5LAN15VFQ+FZUUBOcUFwJVtsAcMDBpbaKTJ69+2Zeef7
6/19v+t5X49K2nNgpUAg8GPH8n07sjVw3UrA3oSwrOeHi6jSYcsD59WAMFCm
djtYSmvHFMneawElcenFvk5nKO20/apPrQA1kts1PbZnybArvzTRBtBvZtQY
ElpFDMz1mB1gYX/uxOzRamq+ld5e6QDY85IxLqiqhkTyJ7uviACtn86Ga9QK
Or59/9TQG4CbUwr2ydpryfR85MiMGDBVvmbRsesccXqugIIhncSrv4443BZA
2d2KkBRdPXnyARxdn9spvt9AFXP1XUHvACb31Q9/N9lIoNwYHrMN8Or7srLu
hfOUGl/07GtfwNgfk1fTi0piYnNKPgRsHvw8JVr0EwU8/GpDUwCgi8vD5RLv
JlJzQOaH4jeNZ8wFsqAZdgHGvCzszQtU0TE7/aD5E0DHnB1WxVMqmtcFR1mH
ATZmBm9TfHORIgo7/ngrAnDTCz6XPKRqYuSYZMA9k2K4rleTOycI2HrW6eRI
3iU6c/M1VWo880PWoPjno2aysDv5BWC2eeToMGiIhcESAcx/PPjLsk5D439l
JlxLA6ytkvRvrWsh/xaLg4BqwV4rn9zLpOKCAX8QpMTPJlwhHm8OYM3wnayt
kT8Tj0PO/idcWC+KbCVu33HAU0ubOnsOXiUuNx/QlH4hP+vba8TpFQFWixwF
Sk0bcbgSwImn0cLfF9upnA/gmNv4EYGzllhZpOoKQGWhPiL7npYSbXK1vdWA
NvPmhI3l18ninvEcYHvbxyckcR3ExD5aagRsKNGpxH43qIkHwvIvWyy9736T
7Dkg00+nuoM8OsmC5t8C6PaluU4f0EUsXFZpwPLTGRnBh7sp7D1LAwETo1Y0
LbTdIksahR3M/83rpjQuvSTlAQPuNHgpgy/2USknyPqzwnsyKXaALG3WD7L7
csW7r+68TRZ28zpAfcsDU7pmiPh6jAFG+2cXG6bvEK/zOODk3zGub24fJl4/
A+COZ9HZ9gMjxOtiBMwLlM2Ffj9KPN5HgF2HKm1DlfeIx/EEsCLzcu0HzuPE
7ZsD9JDK9xscfyUu18T6emNvgcQwQZyeGVDsleQTIjYSh1sCPLRv9/SQ3TQJ
+AjRs88h45U1j4mVhW2wEE/EOkd+VjxHd9m2uYMQe9J8Chb+NZEvfxCEqHb9
M1bqtETneaGFOOp+wFoxs0q7nBheUGMrxP9xN2j/A33aBEE=
          "]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[{{3.135026204705611, -5.}, {3.135448750536468, 5.}}]}, 
        Annotation[#, {{Legended}, 
          Charting`Private`Tag$2117193, {}}]& ]}}, {}, {}, {{}, {}}}, {
    PlotRange -> {-1, 1}, Frame -> True, LabelStyle -> Large, GridLines -> 
     Automatic, FrameLabel -> {
       FormBox[
       "\"\[CapitalEpsilon] \\!\\(\\*SuperscriptBox[\\(\[HBar]\\), \
\\(2\\)]\\)/(2\\!\\(\\*SuperscriptBox[\\(\[Mu]a\\), \\(2\\)]\\))\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(K\\), \\(21\\)]\\)\"", TraditionalForm]}, 
     Epilog -> {
       StyleBox[
        LineBox[{{4.1581812663427975`, -4}, {4.1581812663427975`, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False], 
       StyleBox[
        LineBox[{{1.257222782, -4}, {1.257222782, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False], 
       StyleBox[
        LineBox[{{2.79355, -4}, {2.79355, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False]}, DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {2.96978125, 0}, 
     PlotRange -> {{3.001, 4.999}, {-5, 5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2.96978125, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{3.001, 4.999}, {-5, 5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"3-channel\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "True", "}"}], ",", 
                 RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7614364210755863`*^9, 3.7615844364460917`*^9, {3.7616484856047573`*^9, 
   3.761648492673209*^9}, {3.761648733516556*^9, 3.761648742640871*^9}, 
   3.7616645458258057`*^9, 3.765018612884667*^9, 3.765022143528778*^9, 
   3.765022432642035*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datf", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/mehtan/GitHub/R-matrix-prop/3-channel-morse-fullK.dat\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{"pf21", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"datf", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"datf", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "datf", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalEpsilon] \!\(\*SuperscriptBox[\(\[HBar]\), \
\(2\)]\)/(2\!\(\*SuperscriptBox[\(\[Mu]a\), \(2\)]\))\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(K\), \(21\)]\)\>\""}], "}"}]}], " ", ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.825315", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.825315", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
         "Dashed"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1.257222782", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.257222782", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
         "Dashed"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2.79355", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.79355", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
         "Dashed"}], "]"}]}], "}"}]}]}], "]"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.765022047641614*^9, 3.7650220511937304`*^9}, {
  3.76502211926341*^9, 3.76502214738862*^9}, {3.7650222252798243`*^9, 
  3.7650222380269327`*^9}, {3.765022414188179*^9, 3.7650224180757113`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
2pdIoND/1xj9F0M/zUw=
      "]], LineBox[CompressedData["
1:eJwcnHc8le0bwBOVsx9ZpbKiokiFZHRfIVJSVFJGhSLZLV6RjEJFRYSSc+wt
obKpRFRGIamE0NCSSMbv8nv/eT/fzxnP872vcV/3OUcytm5mh2fPmjXLeN6s
WTP/vy/91uCuDA1m/f+/HyTi2konA1ka5Jw7et/k1xC5J7vm/nY5Gph8ML+6
XuITeVegPnfPMhrULi1Pe8f7SObqae+2WkGD6YiBF36CvUSpdRPPTpEG/Sb2
Svl8H8huO8MfTqtooDtPmMZ99I6cGTbe6KlMg6TZ8yV9F3eRpECzS94qNJA8
xBdz5ONr0iBs0em/lgYjwyo3zOd0kF9J1itCVGkgsO1izZ2jbURC1e5UhDoN
mj4UmDcJvCKbHjk+itagwZUV2m2eja3Ecbfr/ARNGnSPUt+r77eQK33HD6Zo
06DdN+VW0sNmcu+Ed272RhrQ/5tQMhhsIu8Fzk7cBRp8T5Le8ly2icy9HrS1
VJcG41nDpRrdz4myfNiNGn0amLcfX6gf/4zsKYrorzegQeMV5zXBno3kzObr
qs1baFDh4xhxyraBJL+KC+jYSgOrXzcbZR2fkobDiU3vjWmwM+x0n+C5ejI8
kiI5YEIDCRvvnLlZdUTifJbzt500sGWXDhn2PSG6YndKRsxoYLc//ZvGyifk
aGqx4ORuGhTlGVb6+NWSK+pl5gJ7afAoSTnsfddjcr+2OpmxD+PT8TNs3+bH
5L35k1/zLWkg18K/bbr4EZk30AgS1jQw1k7v4VvziCifbgmXOUCDhY/46ZkF
D4n5vI6uFYdo4JX2unm31kPiG/NWUcWOBrOn9Pvcn9aQ5OW9XusPY7zeHFY9
c6CGNN4brN3oQIOPeYtps8erybDhNxGDozSYMh4wi42tJos6hm23H6OBuB8b
enWqia7j3/zdLjQI2fNQIKy/ijiNTU1ZutGg2OTBcxJZRa6GCGy386BB1oFd
b8v1qsj9BfR4p+M0iJ5/1OPC90rSnc755HES1yN79lwlm0oyb4Poeu/TeL/9
HZWzWivI6nqJYH9vGkzOu/Xu9vYKYr5PuvWCDw2c7GTz856VE99P8jIRvjRw
5RnVdJmVkxTvlW7RZ2mQ0bhMqbOrjDTS1pTfOofxfyH16+CxMvI7Vp2REoi+
JRtdVk+VkkWK2vuyg2mwYJZVm+D1UqJXsint7gUabBtY1FS4upQ4bTUcKQml
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
      "]], 
     LineBox[{{3.135816853933783, -1.}, {3.1358297486446673`, 
      1.}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.9790625, 0},
  DisplayFunction->Identity,
  Epilog->{
    StyleBox[
     LineBox[{{0.825315, -4}, {0.825315, 4}}], 
     Dashing[{Small, Small}], StripOnInput -> False], 
    StyleBox[
     LineBox[{{1.257222782, -4}, {1.257222782, 4}}], 
     Dashing[{Small, Small}], StripOnInput -> False], 
    StyleBox[
     LineBox[{{2.79355, -4}, {2.79355, 4}}], 
     Dashing[{Small, Small}], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(K\\), \\(21\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"\[CapitalEpsilon] \\!\\(\\*SuperscriptBox[\\(\[HBar]\\), \
\\(2\\)]\\)/(2\\!\\(\\*SuperscriptBox[\\(\[Mu]a\\), \\(2\\)]\\))\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{3.01, 4.99}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.765022123168878*^9, 3.765022148315444*^9}, {
   3.765022225818646*^9, 3.7650222383993483`*^9}, 3.765022436026719*^9, 
   3.7650226939224997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"pm21", ",", "pf21"}], "]"}]], "Input",
 CellChangeTimes->{{3.765022151452508*^9, 3.765022155794704*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, 
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwlVHlQlGUYX830WcchBCMCZ+mA3UZcHGCyQ47HghhEMI1tGEI0QGCwuETG
aeKS2UzlkISAMeRY5LAN15VFQ+FZUUBOcUFwJVtsAcMDBpbaKTJ69+2Zeef7
6/19v+t5X49K2nNgpUAg8GPH8n07sjVw3UrA3oSwrOeHi6jSYcsD59WAMFCm
djtYSmvHFMneawElcenFvk5nKO20/apPrQA1kts1PbZnybArvzTRBtBvZtQY
ElpFDMz1mB1gYX/uxOzRamq+ld5e6QDY85IxLqiqhkTyJ7uviACtn86Ga9QK
Or59/9TQG4CbUwr2ydpryfR85MiMGDBVvmbRsesccXqugIIhncSrv4443BZA
2d2KkBRdPXnyARxdn9spvt9AFXP1XUHvACb31Q9/N9lIoNwYHrMN8Or7srLu
hfOUGl/07GtfwNgfk1fTi0piYnNKPgRsHvw8JVr0EwU8/GpDUwCgi8vD5RLv
JlJzQOaH4jeNZ8wFsqAZdgHGvCzszQtU0TE7/aD5E0DHnB1WxVMqmtcFR1mH
ATZmBm9TfHORIgo7/ngrAnDTCz6XPKRqYuSYZMA9k2K4rleTOycI2HrW6eRI
3iU6c/M1VWo880PWoPjno2aysDv5BWC2eeToMGiIhcESAcx/PPjLsk5D439l
JlxLA6ytkvRvrWsh/xaLg4BqwV4rn9zLpOKCAX8QpMTPJlwhHm8OYM3wnayt
kT8Tj0PO/idcWC+KbCVu33HAU0ubOnsOXiUuNx/QlH4hP+vba8TpFQFWixwF
Sk0bcbgSwImn0cLfF9upnA/gmNv4EYGzllhZpOoKQGWhPiL7npYSbXK1vdWA
NvPmhI3l18ninvEcYHvbxyckcR3ExD5aagRsKNGpxH43qIkHwvIvWyy9736T
7Dkg00+nuoM8OsmC5t8C6PaluU4f0EUsXFZpwPLTGRnBh7sp7D1LAwETo1Y0
LbTdIksahR3M/83rpjQuvSTlAQPuNHgpgy/2USknyPqzwnsyKXaALG3WD7L7
csW7r+68TRZ28zpAfcsDU7pmiPh6jAFG+2cXG6bvEK/zOODk3zGub24fJl4/
A+COZ9HZ9gMjxOtiBMwLlM2Ffj9KPN5HgF2HKm1DlfeIx/EEsCLzcu0HzuPE
7ZsD9JDK9xscfyUu18T6emNvgcQwQZyeGVDsleQTIjYSh1sCPLRv9/SQ3TQJ
+AjRs88h45U1j4mVhW2wEE/EOkd+VjxHd9m2uYMQe9J8Chb+NZEvfxCEqHb9
M1bqtETneaGFOOp+wFoxs0q7nBheUGMrxP9xN2j/A33aBEE=
           "]], 
          LineBox[CompressedData["
1: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
           "]], 
          LineBox[{{3.135026204705611, -5.}, {3.135448750536468, 5.}}]}, 
         Annotation[#, {{Legended}, 
           Charting`Private`Tag$2117193, {}}]& ]}}, {}, {}, {{}, {}}}, {{}, \
{{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwdVXk81dsWJ2RJ8ipU9DydHknKpa7qkrPklVTIUV3d0IAiUhkKDYSbMQ4l
Qg4nnUJkTpFlumRMJPOVoeiWKRK38H7v7c9nf/Zn//Pd6zustdecPMexWyAk
JHSV2f87ZTIMe71kAHu/LK47u9OHdPSMNXzlAPMTFi411r5ONg2cq0ErAc/9
Zvq+UNmXgq0tarnygGUFDlEZS/0oe8RqVcxqwDsrtB2G//aj9ms2p3mKgPHX
pnL/1edPwtIOeQIlQPaKzfebq34nVZ6zSAYLMLYr6o3f4xtkquFmlvdvwOJ4
1YA4bgBdIk9ekQrg8xPw1NMtkBJMvYfLVQFjXET8XS2CqLLHX6dWDdD5orH0
W91gGj4XHNSkDpisWD45uCaEZIW4re2bADMkmzz+Eg8lXW6Ucu9PgIpXll6V
Hw0lG6U41yEtQOGY4j1ZrTcpJDOxdHQL4Or9g5vel4ZRNgqkv2kzeNuTVv2V
Hk4djWlWc9sAWfMT89PGXBI+kZUmpgMIxr88kKvkkup4/sziHYAdR9yj7NgR
dOB6kaEMG3DOW2jyx7MIurS0LEpBH/CL8zHuxM+RxEuq6mcZAPrbsUWP50RS
pWa9ptouwL95QQ0WWrdopLTJW9MQ8G27rNNk9i2S5bTVbzNi8EZcnI1+vk26
fd0KuA9w7+d1Ec7PbpOtS7+DoTHgKp+Sei92FIUs+PjUxBTwmNcn59+roign
ckTssBnj17YhlsDsDnWwJs2tzAE9jDykvnbfoQU5M0m2hwBNTvm3BztF03qD
+VHHXwHLlXg1PrPRdKBZVM/1CKDMcEjDGDeGPGwWhXodBYx0GAn7qnKXeBPS
HdetANcUGvil0l2q8pNVDToG6Ga+W0T9aCyNLFe4yD0BaNHUeSR6JpbkkpUq
om0Ak5Y8blsUF0c7tqgs49kBhnX5fH7Ajifbig3HBacBd2iGaQUNxlPoQc2M
dAfAaynlYW8j71HOgPaPXEfAfh8jgyz9BOp0091bdBaQhvdL6E0m0AKxnTHl
5xh9mvU33E/l0fooww81Fxg+OicO+Gslkpmy8ZYmV8Ar1qvl6iISySOP49vu
DnhwhP1CbyKREndZNL67xOSl1YI1cTiJqlqsFIc8AQsCNvwi/CKJRu1snEYv
A54UWq3sq8wnuSn751NXGb9+LPwPl8unHTecYc6bqac708Rwjk92cm6HxXwB
dwZ8caxwvk+hAs/kxf6AqhWN+1T67lOutveX5TcAB3yeGNy0SKbOSn9UCGTq
dW91UmhKJpFfg8NYwYAlG0P+mDR5QGqD4V3rQwELF44eZL96QGaXotQ0wwBD
2qU5a80F5Cke57GNC7gny9KktkNAidGJlexIwDrjLza2px7Sy3UCGcPbDH8+
y15x6iGNPk07aXIH0Kv4CUs9+BGt2JOVeSgGcJqHweWsFNJry5+zjGXw3j1c
qFiSQnb2Rftt4wGjih8+8ziZSjenS2MdEwCj9acaZBalUW5g1ZBLIuCPzdZv
tj5No66V9dpefEC1A9Py6mcek0hKk//1ZOZ97TiW/tp0Utve1hQoAHySXP2P
ur504lR3K3EfAdrDnS2qKRnkeaTfOToVsEFC7e7Ti08o6eNQUcJjwN2z59+M
K2fSS8+RRYIMwKI/48bDbmfSmMSkRXomo+9DiYPnxbNoReyMIDcbUEOqRKrt
Whbpqc1PFuYCpu3nR0p9z6JTz0UNyvMBszu191hfyaabexdF1BQwelW+XKco
kkN5HdI9r58Dyodmuj8Kz6GuM7Ib24sAeeelI46zckn0u/zld8WAfs29PdmF
ubQhRKl6sITRj7+wS9YyjzgKKitGywBfzT7fLSmaT15pG+ymKgC3uK8OWpOb
T0k6mjmzlcz85Nw2+ur0lKprtYXFqpn+ck1nb9YooLGjuqaLawHrLd6axX4v
oJWf9e8trwdMaFkiOdf0jNhXDD/JvwK0GbjnaZT/nE4tNt7Oes3wvdwS4iso
pLB4TsD6ZsYPVo9oQ3IR5albtPzUAjj1W9t6t+wX1F1ktXZbKyAnINb0Q2Mx
iRrbXGC3M3m48P1Fn1AJqXfb0+5Oxv8r1hvd75eQ+VlnKZNuwDE/c6etZqXk
Net69FAP4KaG3g+WkmXEv+mZYtkLKPuGlbi7uYyq/+n9zaYfsNPHYSYktZzG
0/13Ob4H1LG3jRK7VUEr9YJvuQwy+QgYnuwI+4PYDeG9nh8BP4+p8G8lVtJp
6yiN65+Y+XB2THJjbRWFjcReDRwG1HQ9w9deVk351xJrw0cBU/LL7KY8a6h7
iWBV9DiTH/GtYnfF60iMl3Y6YQIwddpL2qW0ntQ1svIefGX+mxlOC+fJKzKn
fJH0b4Bddfxpn+FGumxaZJY7A6g7rGV5QbWJ+D2lvMLvgEJ+KvtcuM1Uc65q
uGyW6X+Nl5FjGi00Pl+nUzMP2P1+qv+NTCut4jYFvRaWwMPjHtbynHZCpbbW
NhHmrlVQc2RBF53O7FZ+JyaBJQJtD9jfQ+HY7zooLoErO/bmueX2Un7jUOmI
hAROBV4+MXFkgP48PiI9JSmB+cuuujj2DZLY+ITVrJQEDri3VQy8/UwyiguS
2pdIoND/1xj9F0M/zUw=
          "]], 
         LineBox[CompressedData["
1:eJwcnHc8le0bwBOVsx9ZpbKiokiFZHRfIVJSVFJGhSLZLV6RjEJFRYSSc+wt
obKpRFRGIamE0NCSSMbv8nv/eT/fzxnP872vcV/3OUcytm5mh2fPmjXLeN6s
WTP/vy/91uCuDA1m/f+/HyTi2konA1ka5Jw7et/k1xC5J7vm/nY5Gph8ML+6
XuITeVegPnfPMhrULi1Pe8f7SObqae+2WkGD6YiBF36CvUSpdRPPTpEG/Sb2
Svl8H8huO8MfTqtooDtPmMZ99I6cGTbe6KlMg6TZ8yV9F3eRpECzS94qNJA8
xBdz5ONr0iBs0em/lgYjwyo3zOd0kF9J1itCVGkgsO1izZ2jbURC1e5UhDoN
mj4UmDcJvCKbHjk+itagwZUV2m2eja3Ecbfr/ARNGnSPUt+r77eQK33HD6Zo
06DdN+VW0sNmcu+Ed272RhrQ/5tQMhhsIu8Fzk7cBRp8T5Le8ly2icy9HrS1
VJcG41nDpRrdz4myfNiNGn0amLcfX6gf/4zsKYrorzegQeMV5zXBno3kzObr
qs1baFDh4xhxyraBJL+KC+jYSgOrXzcbZR2fkobDiU3vjWmwM+x0n+C5ejI8
kiI5YEIDCRvvnLlZdUTifJbzt500sGWXDhn2PSG6YndKRsxoYLc//ZvGyifk
aGqx4ORuGhTlGVb6+NWSK+pl5gJ7afAoSTnsfddjcr+2OpmxD+PT8TNs3+bH
5L35k1/zLWkg18K/bbr4EZk30AgS1jQw1k7v4VvziCifbgmXOUCDhY/46ZkF
D4n5vI6uFYdo4JX2unm31kPiG/NWUcWOBrOn9Pvcn9aQ5OW9XusPY7zeHFY9
c6CGNN4brN3oQIOPeYtps8erybDhNxGDozSYMh4wi42tJos6hm23H6OBuB8b
enWqia7j3/zdLjQI2fNQIKy/ijiNTU1ZutGg2OTBcxJZRa6GCGy386BB1oFd
b8v1qsj9BfR4p+M0iJ5/1OPC90rSnc755HES1yN79lwlm0oyb4Poeu/TeL/9
HZWzWivI6nqJYH9vGkzOu/Xu9vYKYr5PuvWCDw2c7GTz856VE99P8jIRvjRw
5RnVdJmVkxTvlW7RZ2mQ0bhMqbOrjDTS1pTfOofxfyH16+CxMvI7Vp2REoi+
JRtdVk+VkkWK2vuyg2mwYJZVm+D1UqJXsint7gUabBtY1FS4upQ4bTUcKQml
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
          "]], 
         LineBox[{{3.135816853933783, -1.}, {3.1358297486446673`, 
          1.}}]}}}, {}, {}, {{}, {}}}}, {
    PlotRange -> {-1, 1}, Frame -> True, LabelStyle -> Large, GridLines -> 
     Automatic, FrameLabel -> {
       FormBox[
       "\"\[CapitalEpsilon] \\!\\(\\*SuperscriptBox[\\(\[HBar]\\), \
\\(2\\)]\\)/(2\\!\\(\\*SuperscriptBox[\\(\[Mu]a\\), \\(2\\)]\\))\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(K\\), \\(21\\)]\\)\"", TraditionalForm]}, 
     Epilog -> {
       StyleBox[
        LineBox[{{4.1581812663427975`, -4}, {4.1581812663427975`, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False], 
       StyleBox[
        LineBox[{{1.257222782, -4}, {1.257222782, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False], 
       StyleBox[
        LineBox[{{2.79355, -4}, {2.79355, 4}}], 
        Dashing[{Small, Small}], StripOnInput -> False]}, DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {2.96978125, 0}, 
     PlotRange -> {{3.001, 4.999}, {-5, 5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2.96978125, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{3.001, 4.999}, {-5, 5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"3-channel\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "True", "}"}], ",", 
                 RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.765022156215176*^9, {3.765022227072315*^9, 3.765022239276102*^9}, 
   3.765022437499382*^9, 3.765022695377784*^9}]
}, Open  ]],

Cell[TextData[{
 "The scattering amplitude for this inelastic process is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"l", "=", "0"}]], "=", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"4", "\[Pi]"}], 
       RowBox[{
        SubscriptBox["k", "i"], 
        SubscriptBox["k", "j"]}]]], 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"i", ",", "j"}]], "-", 
        SubscriptBox["\[Delta]", 
         RowBox[{"i", ",", "j"}]]}], ")"}], 
      RowBox[{"2", "\[ImaginaryI]"}]]}]}], TraditionalForm]],
  CellChangeTimes->{
   3.761385004782744*^9, {3.761386848272088*^9, 3.761386848949889*^9}, {
    3.761387531111761*^9, 3.761387531998962*^9}, {3.761645507628545*^9, 
    3.761645508690538*^9}}]
}], "Text",
 CellChangeTimes->{{3.761671057574173*^9, 3.761671102234696*^9}}],

Cell["Define the scaled scattering amplitude", "Text",
 CellChangeTimes->{{3.761671620759235*^9, 3.7616716260566797`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["f", "scaled"], "=", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"i", ",", "j"}]], "-", 
      SubscriptBox["\[Delta]", 
       RowBox[{"i", ",", "j"}]]}], ")"}], 
    RowBox[{"2", "\[ImaginaryI]"}]]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7616716291154413`*^9, 3.761671641611841*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7616711984544373`*^9, 3.761671209500361*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.3598204628016514`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.9326072133456328`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.012136877579469622`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.02501438613438648`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.012136828183077174`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.02501428432727619`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.9552317560984598`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2945492691828547`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.761671199858924*^9, 3.7616712100412617`*^9}, 
   3.765018612969007*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fmatScaled", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "2", ",", "2", ",", "i", ",", "j"}], "]"}], "]"}], 
       "-", 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"i", ",", "j"}], "]"}]}], 
      RowBox[{"2", "\[ImaginaryI]", " "}]], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "dat", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "no"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "no"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.761671109189479*^9, 3.761671123060123*^9}, {
  3.761671174312756*^9, 3.761671218886883*^9}, {3.761671295607561*^9, 
  3.761671470124633*^9}, {3.761671606501133*^9, 3.761671615725417*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dat", "[", 
       RowBox[{"[", 
        RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"fmatScaled", "[", 
       RowBox[{"[", 
        RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", 
      RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.761671557174755*^9, 3.7616715691356087`*^9}, {
  3.761671650824963*^9, 3.761671652444639*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.001`", ",", 
   RowBox[{
    RowBox[{"-", "0.012507142163638095`"}], "-", 
    RowBox[{"0.006068414091538587`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.761671559703382*^9, 3.761671569523224*^9}, 
   3.761671658092527*^9, 3.7650186130687017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"fmatScaled", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], "2"]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "dat", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalEpsilon]/(\!\(\*SuperscriptBox[\(\[HBar]\), \(2\)]\)/2\!\(\
\*SubsuperscriptBox[\(\[Mu]r\), \(e\), \(2\)]\))\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(2 \[Rule] 1\)]\) \
\!\(\*FractionBox[\(\*SubscriptBox[\(k\), \(1\)] \*SubscriptBox[\(k\), \(2\)]\
\), \(4  \[Pi]\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"4.1581812663427975`", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4.1581812663427975`", ",", "4"}], "}"}]}], "}"}], "]"}], 
        ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.257222782", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.257222782", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        "Dashed"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2.79355", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.79355", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        "Dashed"}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7616714718851147`*^9, 3.761671546155285*^9}, {
   3.761671576992839*^9, 3.761671585254941*^9}, {3.761671654846423*^9, 
   3.761671695304433*^9}, 3.761671734281047*^9, {3.761671791961568*^9, 
   3.761671887541038*^9}, {3.761671926896667*^9, 3.761671931018703*^9}, {
   3.7617342580443153`*^9, 3.761734258245431*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0], PointSize[0.004583333333333334], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJw123dcTf8bAHAzd98zCGVkZK/slfOglEJJ6p5zzyXZI3tnZq8iZCQh2eqb
RJKdvZKRkpJdIisj6/vpnufTP7/X8/p9nfEZz/t5+pzqBU7yGVmhXLlybyuW
K1f2vx2GpPTVVVBBrT8eY1b5NhWi7Vo/bWijgqRyX7xnX+0gaDJjJjtrVHD3
XYM3Xu+6CdM31qjkZ1CBYBxwqvpoEPK81m2ZyKlgx8EcS8LsXgK5WPMVtip4
/y3FztvdRTh+bebZaDsVdLicwKa+dhXqLHs3MLmOCp4JCzNWDXETVvUMeJVe
XwUX1zdSFZ1wF778eTC7oJEKzh3vnWgo6StYH6+5CtoUPq2cXstTsF6utQo6
urx63Nqpn9DO+qOCLqkJL9e27y9EFe+/4tlJBa8PHvW532SAoDpSSxrRTQX7
G31M32r0EqaO2fB+nqCCMVPCstsUegnkZRdv7k3u923Npqeyt+CWP7dqnJsK
UicFN95yzls4Zr2gCtYFR96Prz1QKLtanpcKUoTFiUtnDRRW2Gbd+T5IBcdS
+H2jbw8UPmX0D2RMKvA7neW4u66PIIddLGkiq6Bz6s20KRN9BPJw5JVV8NC9
nwef4iM4WR9QBT49Wzw8VWGQEJnm8N/UMSpY0n3M2E3ug4Syp1szQQV19OXP
3V4zSCCTQWZEBUcfC1fW3hokPPm5YFzqdBWsKerNlWh8BdcTZSOogp7dC70b
u/kK/1lfmMyHLm1dz8W+gnV6F6ug790WS4ee8hWs07FMBVcPOz3aXuwrWIdv
lQrcsvf30zYcLFhfd50KpLnGclf9BgvWx9uggm0/8s49XzFYsF5uswqS7491
nXJysLDN+qOCkw5ZZ5a+GiyQxdLyWBRZTxN6lLTk/ISJ3JLzN3aT50svPTzP
2U8oG70XsSqorK13dOFoP4G87JtfB1WwwW36c5f1fkKcdUJUENFr0Kisk35C
DesFVXDlSMbGvrl+QtnVXE+oIOOYre3uiv4CmVyypFVgaWb7ubCxv2DqUrYC
VfA2JirCydNfKJuNsIsqaJrf9s2CIH+hpXWCyf3+m9ErJ9Rf2GJ9QBU0ytCt
9on3F8pWc9YdFdzRp7ctvOMvlD3dpwwVHMoe3fvwe3/Buj0yVTDs7sahUVqT
YF3OT1RQ/cLG21ebmATr8stTwUfbWfOcXE2Cdbm8UIH3n6/q/ACTYJ3eN2R9
V/5+OSfYJFin450KSluXHG0WYRKsw1dM7tfMdU16vEmwvu4XFbx5OPb1/Wsm
wfp431Xw5/aNoi75JsF6uV8qGNWnwbEqP01COeuPGhaPbbevJyMKZLGQHayG
Lh7Vm7xvJAoPyW5zUqmh3/vSvgZnURCsCUENn2Ym+R70EYVD1gWthuavA/tc
HC0KVa0ToobyEb8bWOaJwkLrBdXgqb25f8F6USi72pFaalg3b9rwJntFwfdF
LFnSapjp0/z+kJOicNaaYMj9ezt5Od4QhabWDaKGSz+O2S7MEQVremmphorn
dp6a+EEU/palAyc1PAxNzfn+TxSs27eDGuK3HA+pzUrC/bLt1kUNkzKv2T+v
JwnW7eGsBiZo93D3tpJwwLrh1FCFuZ/n00sSrMvPlfx7dRubSj6SMN/6wmr4
WOLQZcgwSbBOb381vIrRVxo5WRJ8yqZjIHl+Y5N2NRZKgnX4/NQwsl543eB1
ktDYuoHVMMb1xoOwSEmwPt4QNdx86uFvOigJv8suF6gG39weex+dkIRR1h81
DE3sukKXJgn36pftYDW8bZ6b8StdErpZE6oaWjp3Xr7vqSTssyYENZzo2r1Y
XygJjHVBq+Fno7ZL232ThGDrhKghJjgjrEYFs1C2+n4uUMO/fQ39z+vNgndZ
el6ihit8hYbNa5oFazpdoYbWz4oXSw3NgqM1waihsbZzhldrs2BNV2FqmLy5
RZCuq1koLUsvG9WQ6Zh1aIOLWbCmgy1qOKK6d+fZALNwt2z7Rqph+axHVX+Z
zIJ1u0WrYZRLu/j8QLOw15qw1BDXiL+6eYJZsC7n/WqYWBw0pcZMszDHumDU
UNTl/PNxC82Cdbn8p4Zex3fVCF1pFgaUTe9xNTRbyNsv2WAWrNORrIZct2q/
PLabhQbWBEjGKzM47PUes2B93fNqSC2umO132Cz8KHu8NDX0mLTm+o5Es2C9
3DU1uB0BOHXaLNy+VfajhkolRQ5HL5mFTlaQ1DB9z5+Nc26ahT3WhKqG+s4j
r9e5bxasvGWR8VZNyInKNguzrAtaDRGutdy+55sFKx/5aph26+jIFgVmoZ/1
gmrINsTtd/5oFqzpuUANd75fSmv+3SxY0+l7NXQ/82rS9z9mwZr+Pqmh62Rf
/92VZOFbWboqIfe76tG4mVYWrOnlpxrO/by+KJyVBWs6+KOGEct7VHlSXVa2
bwUNfG5Q6FepjizssiZ8DQzbPkVtbCij5xoo3/xg0q+mMnquARe7NW9vtJbR
cw38Y8I7zu8gCx7WF9YAPP3ZgO8mo+cauJ4+yHkdyOi5BiJ+7a9c5Cqj5xpo
VXjpZ2tPWfhq9VwDtZa/+yR6y+i5Bi7bVUwdO1hGzzUQOjbFMUCS0XNyfaPX
XuehsrDTCpIGzNd8D1UYIaPnGhAGJO2PHyOj5xrw2/VU7Roko+cauBBwvtul
KbLgbp0QDdx+lRXbbKaMnmvAruu6uOC5MnquAX/bCiknFsjouQYmi61a5oTI
6LkGFiZ1HVa0XEbPNbDlYezJN6tl9FwDtgemrLkTKqPnGlh3oG/H3eEyeq6B
p+/jmIAIGT3XwA/nwIna7TJ6roH9lRJjY6Jk9FwD07cZ1E13y+i5BlR/E99E
7pXRc3K/NhvW/94vo+caWD3ioo/nYRk9J/fLEuesjJPRcw0kJyYNOJ4go+ca
eP0i2f7ucRk910DJ/CeNs07K6LkGrpW3P5WRIqPnGtguOlZNPSOj5xpw6mue
t/m8jJ5roPuUlHZDL8nouQbWn9QE17wio+caMLy5syHtmoyea+DEgDEnAm7K
6LkGmjX54Pjhtoyea+CvFFg3KF1GzzUw9Gnk46cZMnpOrnd1xTp4KKPnGliu
eT1zc6aMnmvgfftRt3KyZPRcAzvExDTbHBk918Bmw9zNvXNl9FwDc5wnThv+
TEbPNVD7lXf4zOcyek7WX/sox/kvZfRcA2+397DMei2j5xpImDdgwsi3Mnqu
gQ6WxyFuhTJ6rgH9Mfc7tYtk9FwDS+NtF759L6PnZL3s7npxf7GMnmvgTNaG
NPMnGT0n72NwPVbpi4yea2F0vegTe77K6LkW7PI7/u7wTUbPtbA9+ueRs99l
9FwLdZdU/tz9p4yea2HWpttf/iuV0XMtbD5ZNdvut4yea2FQ39Kbc//I6LkW
TPczitP/yui5FrpmzB9fu5wFPddCT9+ZowPKW9BzLQwfurbC9goW9FwLq+Ic
ht+oaEHPtbDYfvmRT5Us6LkWGjSdU56xsaDnJO7nucyxigU918KyvlX92qos
6LkWmgwN3NpRbUHPtfA5aOn4thoLeq6Fts/iPjpqLei5Fl6dyXRhdRb0XAvf
5j9a/pXEiudaYI1HMu/qLeg5eT/nkkExBgt6roWckHl2k4wW9FwLmgBbl3aM
BT3Xwp5K4qdiEiuea2HsuDfdY1kLeq4F1eI+vQZxFvRcC/X7RtQqJbHiuRb0
k+e93sZb0HMt9JvUPqVtVQt6Tt6nU0hCGokVz7XwZe3tV17VLOi5Fp6r+ckP
SKx4TubDO2OMj60FPdeCd7n9b66TWPFcC08bJ6q7Vbeg51pIfRidG0tixXMt
8FfqLtbUsKDnWujtM89mLIkVz7VwKvf40gskVjzXwn53p6pVa1rQcy1Ed914
NYDEiudaWLtDf2I/iRXPtdDQfszXtyRWPNdCfEzfzQ3tLOi5Fvw2xsZJJFY8
10LW7zOD1pBY8VwLeQv4rSdIrHiuhU2mB6E5JFY810Kbv8+X/iWx4rkWil4N
qGNnb0HPtRBQmLS9DYkVz7WwNMuuRU8SWzl6qoUqf6IW9Cex4rkWEh1fNRlM
YsVzLUw92rmiicSK51rg2jvV8SOx4rkW+vT2We1FYsVzMv4tD/i7kFjxXAuf
Vrd/0Z7EiudauHapT6wDiRXPtVCwepKrisSK5zoIWZ858h15H8VzHYQdcKxy
g8SK5zroN3TP2L0kVjzXwV6XPzvmkljxXAfVL87a0Y/Eiuc6cJ61YL0diRXP
dRAQOM7jJZkPxXMdDBz9sN0hEiue62D5FIfWE0iseK6DQVNC+zYjseI5eZ76
Dde/JOtB8VwHt+OOGyNJrHiug0Xv+j/qT2LFcx2kzuhc/JusN8VzHQSGOYcf
ILHiuQ7q38yd4E1ixXMdzK7tYPeVrF/Fcx3Mud/90SYSK57r4Oiv7W3akljx
XAdV7crXu0X2g+K5DjpX8T8WSOLPVs91sIrRFZeQ/aR4roMjUpf8ZSRWPNdB
3O4XGzkSK57roMWya8wOsj93WMHUQfftj4bVJ7HiuQ6MXiEbYsl+VjzXQYN1
DQ84kljxXAeXz2XF7yH5oI91wejg8ZsPCbVIrHiug0ut3n/eSPKH4rkOglu1
qqAiseK5DkYfL248h+Sfj1bPddA4ySboDclPiuc6yPfvmOlDYsVzHcCihEmn
ST5TPNdBUsouqEfi7VbPdfD73k7vpST/KZ7roPerHftfknypeE7mK6njgF4k
VjzXQbUzbzyjSH5VPNfBq6yi0hKSfxXPdTCg098iTxIrnpP1kVurRjTJ14rn
Ooh6PDWhmORzxXMy/5tKbjiTWPFcB2d/7hy7iuR/xXMd9JcbhGVUtqDnOpjw
Jq1XTRIrnuvAb17UOgvxQ/GcrI/XR6ZHE18Uz3Xg8SLuVy7xR/FcB3UyXVrW
IrHiuQ4iX+/U+xOvFM91cGfC5z1hxDPFcx0Mie775fI/6jkZv59bK5X+pZ7r
QLrc5knzv9RzHcyKeTHf/Id6TtZ/ycVPK39Tz3Xg+MCx+/Ff1HMd3NwO6Xml
1HM97J69q49NKfVcD8beXdo3/0k914Mn+0g34Af1XA/JIbMeTvxOPdfD2B9f
w9d9o57roTTDxuNQCfVcD96LzP/SvlLP9bAvfMvJp1+o53q4X2cK++uzjJ7r
ITSyx1MjiRXP9dC1rV1qfVKPKJ7rIb7Gurh2H2X0XA+NjNeSe5H6RfFcDxn3
9j7z+iCj53oYMOe/JmZS7yie68FmXEDECFIPKZ7rgVvdsuWEdzJ6rofy5tfv
p5D6SfFcD/bJm5/PKJDRcz1U7nlZO5vUW4rnemBMrYJmv5HRcz30Pj1RU1af
KZ7r4WpIwttpr2T0XA/SGmfVJFLPKZ6T61+fOGHMCxk918OMI3/sA0j9p3iu
h0pekTX88mX0nIzvhJqjPUi9qHiuh+9VblV2zpPRczI+jdN+tyT1peK5Hv6z
mdW/9lMZPddDu9fPSzWkHlU810OUDai+Z8vouR58xcDZ+aR+VTzXQ3gXzvvG
Yxk910O3J8PXJpB6V/FcD9WfVeq45ZGMnutheME232BSHyue6+FJaKuXlgcy
ek7eL98nrMd9GT3Xg1uPY2wdUl8rnuuh/bOZf3+R+tu6/I7oYVq/kpGP78ro
uR6arP3VI/GOjJ6T9SiO2beW1O+K5+T+z4asH3FLFqzDl6qHs/dGNe9G6n3F
cz2oNwxxYG7I6LkeVn5ZEPWC9AeK52R9DOgVm3RVFqyc39JD9j5V1+Wkn1A8
18PzNOfRgy/L6LkeMtP2126QJqPnerjw9N7o4osyeq6H4zP/uqVckNFzPfi5
+V1cQvoXxXM9XLn3OcPznIyek+c58WAxd1ZGz/XQ4IIqIzNVRs/1EL280oXI
07Q/18PHuqzvkBTan+uhpzBpZd1TtD/XQ8feHsPzTtL+3ACGOV1fRZ2g/bkB
Nhz/aDQn0f7cAJU/V31le5z25wZYGr7C69Ex2p8bYPDdjAVhCbQ/J/++oGSI
23+0PzeAz4vdRX/iaH9ugAujGrVKPEr7cwPERHxtMPoI7c8NoDkbeqfmYdqf
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
1qjK81rPF9FzHlaaP78MChbRcx6Wbu/ucWSOiJ7zkM0WxhXOEtFzHmrH967Y
dKaInvMwYWenYaOni+g5D3OubDsVO1VEz3lw+tPQ8HKyiJ7zcC+tu6X+JBE9
5+HYVtO+gCARPeehQX6dZzvHi+g5D7NOVLd/OlZEz8n8aGy87MeI6Dm5nvej
ueIoET3nwX122I4tI0T0nIz/uWtJDwNF9JyHjB6jtvPDRPScrK/jlXcOHCqi
5+R5IpOiwywies7D7RebVt02i+g5D3WmX9yslUT0nIfl4aPG9jWJ6Dl5Pv+X
zVf4ieg5DxuzSvLSfEX0nIdG5/mQCoNE9JyHtfVH62GgiJ6T8XtZGDrfS0TP
eYAnx3+l9BfRcx5GCpcG/fAU0XMejk9YFdHBQ0TPedg+fvilqe4ies6DruuD
R/F9RPSch2dFT+8VuYjoOQ/X20UnNu0touc87PzUffaonvj3a0t5eNv5u0OM
IKLnPAwIijuY54x/z7aSrIctW6rX6i6i5zwEM18Hm7qK6DkPfvNH79rUWUTP
eXDd77gxvSP+vdt6HqKf3LToOojoOQ9Ccz+1ezv8+7dNPDTrsDpmiRP9fTvZ
DxeOas61pr9v56GF7eK+pS1F9JyHK29vVO7QQkTPecj/qn0wqZmInvNw7WFh
+qEm+Pdyu8j991ravWokouc8/Gl10FzXEf9+bi8Pf68ku4kNqOc8VHo172t4
Peo5D++vPhxyqy71nNyPj1tSuY4obLJ6zsP0FVGWHrWo5zxYIv3ez7SjnvOw
req+FvE1qOdkPR+9aHhjSz0n669V/T11qlHPeYi16fx4ME8952H+gcP71rLU
cx7i9v5mLhmp5zwwR2z5n3rqOZlP9ndMKx31nOTPBVfODNdQz8l4GlTSVhX1
nIdJp+5PvWVDPeehaX5MuXKVqec8TJs643fbitRzkl+rvg0YWZ56zsOTBbzD
ln8m9JyHXjc+tLv2x4Se86D6Mzv8xy8Tes6DYbm6TZNSE3pO9uMsp4r+P0zo
OQ+H+6xrvuybCT0n73+4gsuxryb0nIfz0zzH5X42oec8JH7rFqb+ZELPeegc
OSSmXbEJPedhRsCBjfJ7E3pO8nGRb/+l70zoOQ931rZNPVRgQs95eMg2un73
jQk95+Hf/W3yl1cm9JwH7phervbShJ7z8NnDsKvDcxN6zkPQyrBavs9M6DkP
eW2mx07ONaHnxM/V55k1OSb0nId3dzd0iMk2oec8hF5a/zL5sQk95+FD+cEF
Nx+Z0HMePqY21uQ8MKHnZD1ktrYpyDAJ/wNmtbpo
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.96978125, 0},
  DisplayFunction->Identity,
  Epilog->{
    StyleBox[
     LineBox[{{4.1581812663427975`, -4}, {4.1581812663427975`, 4}}], 
     Dashing[{Small, Small}], StripOnInput -> False], 
    StyleBox[
     LineBox[{{1.257222782, -4}, {1.257222782, 4}}], 
     Dashing[{Small, Small}], StripOnInput -> False], 
    StyleBox[
     LineBox[{{2.79355, -4}, {2.79355, 4}}], 
     Dashing[{Small, Small}], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(2 \[Rule] 1\\)]\\) \
\\!\\(\\*FractionBox[\\(\\*SubscriptBox[\\(k\\), \\(1\\)] \
\\*SubscriptBox[\\(k\\), \\(2\\)]\\), \\(4  \[Pi]\\)]\\)\"", TraditionalForm],
      None}, {
     FormBox[
     "\"\[CapitalEpsilon]/(\\!\\(\\*SuperscriptBox[\\(\[HBar]\\), \
\\(2\\)]\\)/2\\!\\(\\*SubsuperscriptBox[\\(\[Mu]r\\), \\(e\\), \
\\(2\\)]\\))\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{3.001, 4.999}, {0, 0.0018677031423655534`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.761671476049032*^9, 3.7616714908126287`*^9}, 
   3.76167154652925*^9, 3.761671586266542*^9, {3.7616716589245863`*^9, 
   3.76167169574786*^9}, 3.7616717960670233`*^9, 3.761671888766436*^9, 
   3.761671932514286*^9, 3.7617342590443897`*^9, 
   3.765018613169176*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMfQVYVU3X9qG7U1AwULETC8VC7Fbs7k7EFhW7u1ss7O5OFMVAUAnp7s77
n5m9Z5+D+viI7/t93891ceDMnliz1ppVs2Z21xGzx4+ZMmL2hFEjyrefOWL6
+AmjZpV3mTaTFKkoyWRKj2UyWWF5Gf0f5F/xg/08oR/il3/6fyD7XwWFudlI
SUlFQRFkYxWe92f/a5CPAlw8sgkN6tZA+fIVULOuA2au3I6wlGzZaIX6zdn/
qrh7dA069OiO3t1c8eRTjCUr1oT/o9PQUaNAmsLNYxdu376NlYtmoGUrF9x7
EzhK6ClbBCo3KwnnvM/g6bsAmZ5YhuJsnNm3HQ9fhcusxLKs9Hh4n/HGiw/f
ZGYiAJ8fHIeagA4s2H7ZUqx6auVAVjRwxmbaGSv7/OAMFi1aicwCSGVhHx9h
++6jyCmEbLAiVKrIS/+O+mWUYdjAFSn50BGLc1NjMKafCyo17gHfgCQrsTgr
IQDVjGUo02IEMotgyorVyCwS0aV+BQZLy6GLUERKLTiMHn1Y+YTV+2VaYjdJ
Ye/QpVVdOPSaiJC47EECSDlii8Vju5Bv+rjxKVamLbbIjAtA75bVUdZxIL6l
5FmLxSBDzR7chsBghoffkjm69i8ZwcY0Lt8SEZlFAijquLNvISs2tK6KkeMn
YvWmnXjhF6jB55wejV7ODVChVhd8DEsdWBKq9zd2scbTNpyV5pFPWri2toeW
RT28j8gsJ1Z9dXY9qzp/9zWJgqE+l6FHypS1THD5daSFyELJoW9RVV+T/GuI
LV43sHPtItSuVhFdhk2HX3CUutg6O/4LmpXXQ6W6XRGUlDdAETQCeFIw6hpr
oHLrUcgqhIaEnEJsmtKTgeKx574u58PMFETHxLNvBhy90f6w11ND7c5TkFcs
0lUDxRkx6FDTkvSgjAU7rrI1kZOdiYzMbNY/7S4tOQFhYeHIzC0U2Zpipxin
NowHXcadx6xi7WICn6BNLVMYV6iFlwHRMj61p8c2QIXU6zRhGfL5EpVFiU+/
Pj+HEYP6olEjBzRzdFSGo6MjGbRxYwc0bNiQ/pJv9FMbDRo0QEOHRrQaHFu0
xtkHXyD8FGPOQMIjSiZ4EZzMsRNCejbUkMG0QltEZhSqcKTlJWLOyA5knObY
5fVQVeTwrIRv6OFUAza2FdGx32h8Ck0lHMrxnI9J3ZtAScMa7yIy1UTEhLy+
iRaNGjGItdinNUbO3kxEDyS4PEd1ZuRpMXAy1iwYi5rV7VGxUmU49hiGRx9C
WK0Tm+aiWpVKsLCwQPX6TXHXNwj5SWGYMaAvmjo4oGkzR9o7+W2Gxk2aYMCQ
0bj3KlgkkBaK89IwoX8HMo4mtlx6LRDD9zKs1WVoM2EdW6xq4lSKsxLQtY4t
AV8Xxx9//oEYuYT0YSFfsGfFGKhTnqDSWRNl67aB+7wFWLBgPubPn0/+LsA8
Nzf07NYN9apXFqqpY+icTdLMX3itZfNesv065wMUF2D2QCdBnrlt5ohHcT4m
dG/GihsNmkNZRBRr6gh9dwWCklCHU8dWZPYD8e57hr5IgPv7l7DHaw7el3Gi
5GYkwX0IQzpBDf20JmuvHB59S5KAe3pipdCtqhr7q2loiR49OqOefXloGdli
w779aGimyp5V7zAEO7evRj3H7ghKyER40Bcc2boE2ioyETRVuC0/hOCwSOTk
F4pwaCI/JxVLR7vCyMwG2849RHL0VziUUYdth+mUQThSDi8YxLpp0HM6coF+
Aj1iOG4K4tHJXpfVUNbQxeU3EeKy0kZhdjquHN0ISyMtmDUaTGU7+8mK/YQq
ujLU6z4VucXghM8i8rWWkQZZJOrYcOYNL769w431rmPdFCFpBSqiXEgP90V1
PSWCUG0cvBeCpxd3wNl1JBJyCkQZoIrU769hqylDs4HziBwSB6IwZ2D68K6s
16o1mqJj+3akcuvWrcln27Zt0aKZAzRVlTHG84Aya2KGhC+PYKMp4FNV2wqn
H31mU8nPSMbe5aNgqKsBfW0l9nzE0l3s2aHNHjjnGyaus2R0bWLNnlvX7IpU
RgGBhaiMfHbtNPoPGYYxw4agTQsXHLnvx4WE3+2DTO9qmVXGq4jMH/GfE4ee
dfVYx2q6hngRmih2rIn7Xiuhr2WKZyHJIlvlYUqPBmRB2uF9ZBZH8Oe7h6BK
m+uVw9OgJF4cG/AApqoyKKlq4didQI53FKSjX6uqwkwX7mQi5PIWTwREpkp4
R1EWRrarARXDWghMyOWcVJiXhJG9WsLOaRgic0VyEO1alIc753ajZoPO+J6c
K6ArhwiBxrZslBoukyk/CgDo4ezWiRJrV+s4ncyJ9FCQi+xcUarlJqFbMzv2
vFKnGWy16vCll5NNwAWfisAkX1+huo4KYTsdbPf2/Qm/sehRh+PXgCAoXsQv
gacoA/1bNcDC/Q9kymLZvT1zWd3VXi8kiXbMfQwr0zdpju+phRIb5iShRwNh
jh3GeDIhyFXA1umurNzGcTjSCmEo9n510xRSrIStF95K8BekRaNvy2qo4DIc
3zMK1EXin9uyHi+/xImEl4t5x2FLKApUOBDIRP+WNdgjI6saCErNl0nPchPR
rWklAZPtplFMS7YEsmLQvoHA0KOW7/sDrGmJgEUFfcW34Fgu6ZD+/RVbWo6D
F1Eyq4oDrJ/QX7Cf6vRGfG4x56HNUwVTTtWwLO75RXN8fbi9C8p0MB1rPAtK
MRSLEwIfwoJYx+3Grabo5SjLjPZDG1t91O0xEUm5RdyUenpiOevbzK4tYrKL
OCSHFw5jxUqaJkQhhf4RdnKIVGxSkT3rMWvTH2CHK4eiPCLAiaBW1IjUQh/S
vjpk+nXocpKTrhiThndg3Zg2GYbUAoiiVw3vr22HqpKwSBx7zUEO8UKUxe5y
EoLQ0FyXWVRLdlzjuCKMhF4tKkLdvAlC0wo1xeLo1/dRXk8LHUe7I7sQvDie
CMSyRHsr65ji+odYjit/4iRoMJ2jjDkbzv47rug0stC7Q0P2rP7AJVRQy1z/
HGHpYa8xbMJiZBXz2avg7MZprO7mi29litiaPEzElsNQqowkbGXFfEQtY1VR
W2pjjfdTEVu0XRFmDXBmzxxcZzNxwpfjkeV0Yatg763Pkj3+6rYXdIlNN3zO
RjoVyRAmcrqrgzWrvnTvdW5a5MR9RqOyzApA455z2eSVS4m0Kj3d6cL5PdIM
8ToyXcbJRJFxbOVwNO49mXbLF1d84AMYkOpdJqykMkJZAXWThrX/BerUqaTG
sM71BUHdyhmt23bDi5BUzmv3989hj/SI8v6eVsARF/HuOnRIsevsLaJ7pYLL
O6YRI1wF7puvibJNGHn5qE6sizZjliqISGqV5WJU5yaC5LJugpD0wl+jzmX6
z6jr6CCgrsecn1GnVwJ1KhraWL5tP86d9caZM2fIrzdOHj+ICf26QEddCQ59
ZzKekGzI/Az0JUtfkyyj8LQCRRzOHdVNwGHTYUgp4BpIB8cXT2Ll5tW74NDu
lWjTZTiSyIqlP7EB92GkTH02Q9z8GC3jq7U4Owkd61hD37YN4rIlEUZ16az+
7ciIJth+4w3nvseiZDOp3BbRcsnmvWqUKNmM4f34uxx7SeguatCKrcaXxF5h
Gnq0rc2eOY9dQdmkJPa0SmBPpqQMszLWsLW1hY2NDftraqgr2u0qaNJ/FkSr
UFq9RxeOZm2P3gqU9OGeSUMEt7lsO+IpFXHMhb25BD2CHSV1fVx7E4JNE13R
nvgxqRR7xSnoVteYWeZrTjyXGYnd7545gJSp4eyjUMm1Tw19RVxgNeha2+GJ
fzSnZVygKOS0TXHNTxJyX194Q5uJCiXCrWflaItDh3oWgqo3rQyfoHTJLMjN
zZEMD0ngZseho4Og/13nbimhJEryoKqOAa77fkNycjKSkpLY36iwUNw+74U2
ZS3RsNc0xoMa4mhR764yAAfM2iRh8Onx1cwX1tAvizcRacJc9JGflYqwCNFM
KEwgrrYJm9eMDd7keybG9XOGXase2Ht4HxrbC5Obs+YSR2bQszNM3o9etFdE
psDqayd0FERC9+nIKlJw7ogY7NTQStA9e0QxaEh8ya9oXl4Qg037zEN+QT5i
Y6LwwnsPzNSpG0RoTOhs7zQc/sGhOLFjMWrVrIk+ExYgs6CIYzQj8h3qWWow
j2f5gUv/onafhyZJWiTk0Wm49JuOHAXDsDg3AZ1rGUG/ijNZYoVcpGVEvUNV
Q8LAShpEwfhxRL65vAPm5lbo0GsgvC/dw/jerdhItTpOFUzUvHSsmT4KZpqC
njEsZ4+H7yONxF4LMyLQqrIezOp0J/K1mDPm+zu7oET0uJKGCS49D1NTQPG6
qYKJ2HzAfKY2JAOdsMKMoS7sma65AwLCIrBm1jCUNzYQl50GKrUZjClDekHH
wEgyEzSMLPE5IVdizw/3jwlugQFxTb+klMKGyU38jg2bjyK7GJKtvGNWP0Z0
75ehkiFCJfi0no1ZHwO4u62JtMQoXDl9EP27ucDKxBAqqiqsipZ+DfhFZfIl
FfPtMx48eAD/oAipx7sHN6JevXpo1KgRjcWooH79+qRq/QYN0KyVC16FpUhr
ZN34LkTVapJ1HSOJgaSgl6igKnhxk5fv42IgKyUGL589wp3H7yimBThNkBYX
iVdPH+H8hQuIzSBqpDAXn96/xtY1S9C4VhVUdSYOc14GFo8bCB0NgeoNnEcj
LZ94TNuWoa4EKINRgtSpfXd8jM2SNMqhBUKEtbbTGGrl/AEhuJoNfnqMuY6j
lh6R5EDg3ZNMxxvaOCE0JZ+7C9HfA3Bky1IYK1OhrQSbytUxxX05Hr96RwUX
t1cykyMwQgyF6OuZw9TEmCDf2NiY9G+sL0AxftUpEcsa8L+9m0XWpq73ZhIm
7tsLrNx2kilyudXxGNYi1tuPW2YmCsC8tAS8f/eVi018fu+LR4+fICaVxY0J
+oPQ17kuk1aGBiVBMdLTYd3N3XVdEj2F6ZFwrkZEj6o29l326//vaOSsgtwY
zBs5nTin+RLQRVlRaGWnC5N6rkjOg5ylC7BkVBfWzfwt1zVE7JLu4dq0Cmio
qoxNFbR1qAMDgq5qtRyx5+x9AbvaxLWOwgBi1XWfuAHh0dHEEQhjcc2w0GA8
vuyF9i0H4XuK6E9rID8lGI3LacHacQRlDKQEP0e1suXx8GuKBOfrq9uZABEs
qGU24ki5xAfo2rIOBs3ZjciYaDIKGSmcjBQchDtn9qFju1GIzS7gGu/evuVM
eTgOXkgjNj/iLjcevUrEIJIk3Pld2Q1z3Xr4mpgnlXlMpHaQHq59jJXYMjfx
GzpWs4CmWR2injI4/+xyE3jfrvUoZOTn4+Prx1gwZRS2Hr0tiZvsuE/o0qwm
5uy5JkWEP75+iojkLElcCkQogtvQtmQ0U9z/lsJM1xFta6JZ70k0ZC1F+4j1
M7h1TdEZkKGf+3qZrdhtCvFV2zSsDs+Tj6Sh3r18gtj0PPaNs0FmTCAcyunD
onpTfI7KGFASX0Xp39HMTlswvVQ0seX0U5kk2QkDvbp3Do2Je6qh54CQpHwJ
bx9v7mFtpq7zliz5mA/P0LyMCezbDkBcZgEne+hzsvKVqeVQBo+DU7TEHuL9
H8POphI8Tj6Q6Ypo8Tm/ifU6b6cQXH93YS+NrKLHiGnwD48TpqSOqJBPmNzL
hakEhhoVHRy++6G82HO4zzWULVsZm674SAoUmYkY1boBTCvVw/2P4eJmRpTY
IoFInLMnj6JPJyeZimgOqmkZoUatWqhZsyb5Rj/VUKNaFSZCmI4inBSclCeN
kJcUgnqGqijXdBAyCoo5UtLD/DG8WzM06TIU32LT+BYUjeO+eHAFHrNGSAbo
iiOPRfki11XvHp6GNTFWT95/K0aOdJAV/Rn2Osqo2nYsmGlelIv5o3oIgtDS
Bs4d2qN1mxYoZ2EozaZpv/nU+GE9cDw9vbwXZWwr4eqrL5JkykgIx/j2LdGg
1TB8CksaVBJPYR+fY/WqlVi3bj35tnXrVvK5edNGrF+3jpSto6qMfKph/fr1
2Lx5C7Zs2Yxd+08jLa9ITgnC+mvcR6B2nVbwj8ngKwcF2di5eCFuvQmRAtoU
SZe9tqO/ax+0a9saNapUwgzPfTyCdn3PLFiYW+PRh2hRbVKsFcBj2gDUadQB
3xLZjhDRhWnY7DYBRjrqqiI6ZMr66DJ5CSJT8mWVxO5OrRnFBOKbb8nSggp/
/xCLPTcxF0ncKSwWHxXk5SI9LR35hcXivpEKUhPjERefIgo2Pt9cjHSqDYsa
XajA5C5mPrHCafMC0pybS8EB77BvyxoM6ueK7t27Y+L0Jbjz9D1zbOx4d/lp
6FWvEio0HojYrIKRAlBsnlwy+N86zAJQE1YdlzUXy16e2SpooZ2XZT+3IXQP
f4sqZJGaVOyG+Bw4isUJ/g9hRara1h2C9EKMUGhZRuz54em1OPvgPSejYKVE
+KEasZPVjcvhQ0ymAyfYEU9cffmtRNWkz49hQ7o0sKmO4NSCX43w/toutOg4
mAWVeLNnx9dBk+gSbZPaCEzM5SM88VqFNr3HMXOPV72xcyGzPExtHRGeWfTz
CNpsw7Zn/XJwGTAWb7+GIy05Dte8dqO6obCbULPzRLq/6yBWz08l6ruqGXqM
nokPwVFITYrBuX0bUVFHU3AbiBmcV1wCW3zH+KvPLdiZ6kJNzwjWVuZ86ZtV
rIV774NZpUZiVb8H51BWTwuaBiawLmPKq1rXaIIXX4QVqTiCtbhoksK+YO2i
iXBxbgtnl/YYO30hPoXGNRUfxwZ9wPI5o9GOPG5HHk9x98S3qORRCj39SWrB
/0f/b2V/iK0eHYxjB/Zg3drVWLVqFdas3YBdB4/B93MItfEEiarGTOPLe7di
0qSp2H/mBgqKIS53dSRGBePQnm1wd5uNmTNmYtmajXj5IaiSOAIVtE9uXcLW
zRvYCKtWr8Hmrdtx6e4TJGXkCppND+FvHsN91gy4L1mN8IRMCD/5eHL3Kjas
8cSsmTMwddo0zJozDxu37IKvf4ishkh0FOTgwfXz8PLywsPXH6XtiqwUHFq7
HJMmz8CF++J+lDrCvrzHzi3r4DZrJul1NlZv3oVPITHVxVbhAW9YR6fPXUJi
pmhf6+Hj3UuYOXUqlq7ficQMMeRB/Oubl89gjacHZsyYzuCbM3chtu85hM+h
MbLKIgpCA95i97ZNmOs+G9OmTcX0GbOwYvV6XLv/HNkF4LGf11dOYdqUKVi9
/RDScsQgjwZy0+Jx/uRhLJw3BzOnz8DCpStx47Gvggku28L+qBAbOBCda9gw
phdYXw1mNnZwat0WTs0c0My5L648/CSF50KfnYIRtwfUTfEoMFY0gajELcT1
Y6tQ0coY6nrGGD7BjdBvKdo51oUW+T7CbR0S0gu4XqQa6sTyyVBT4kOrkxG0
0LBJc7Rp0xp1atWBm+d+pGQVcZeFBqxHNK8gGWpjl+xmWD27aw40lEUtrIZa
DZqiQ7vWqFLZDl36TsS774myauIEitJC0dxGaN5s0Fwm9Lkl9uyYB8QcIBiU
rYOgpFz55IoysG/NNJjqa8PQqiKmzl6E5Uvnw6FGJeia2WDe+uOUMvYiZY4t
7CVAqWlGXOlkNZEyBckhcK6kJ03A89B1NoEtCwbKVEXoHRxbwYXYFRUrVMLg
sYvxLT5LVlHEWdjH27C30i1BLgtCro4dO6JBXWJF1WsPr3tvJXJlRb6Hg7m6
NN7OC89Ega2FT49PoEntSqRbdXTpNw5r1q1G/+7O0NPTR4fBU/AlIkXEjMgt
uogjw9PsBRa6tK4Fj/1nEJeczqaQEh+JrStnwVDTACv2nKGI5XgNuLtX3CKQ
MX/ohl+4ZDff8fKAPtFhehbVcNf3qxRZK8qB5yTB2HIZspRpGlsRChbu6CcE
EaiF0X74TLwg0oeIGCJ1svDmyRXUsi2Hph1cEZaUwXFPTEf0bGgi4aL/jLUM
8KnDO0lJBdaVauDghTvIzhd80OB3T9GthhX0LBvgyuNAe4mJQtCuigbrpvWI
RQpMpIPbu6ZJQ6gb2OJTbLYomgpxwHMwMxkq1GmHj2EJUvC6MDMeIzsJju24
ZcdZf1VFBJ306CtEBI1t8VjOSbnx/mhUTlkaau5W6m4Xo0vr2tJsqjRwwvn7
PlLux9u7l9HY2gg2NdrjVUBMBRGfjy/vlLrR0DHAtBXbEZOcxpqkJ0djxche
UFfVw/w1JxX31NNDX6CqsUxquubYbYmqX156o7IFgUPdALu8H3Ib4dyO+Wz+
9g79EZ6ep6rIXcTBzs/CrSve8L5wDaFRqdxk3TJnACGzGnaeeyXjG8hFhJZr
5w6Gk1NLTF24Hln5gtEd8+khyhoL5oHbtivcO8iOeY/qFlqM+Xaff1deLA75
/AbHvU7iqY8/lY2Sg+V/HxaaxL7oMo54oOJ8tfDqxh6yLlvDpWsfvPrMLAME
fXiB5YvmYce+EwiL5QYt8W1jvqBlBWMiGerh5feUqv/KN9rISQ7GjJHd4NSy
NVbsOEmzCNnPuxsHoaUqY8kxB2594iOE+16ECQ1U61njzrvo33ILkV7FRbh2
dDnatGyJngNH4WuUsGh9H1/H4gXzcMDrAuLTMnnnCZ8eoYqhGmyqd0NwWi7H
V3ZqHLavWQrPNZvx4l2gfGspH6tYdosGVp58Kh+zAGd2uqN1Syf0HzkF4YnC
Rn9uciha12YqBx3HrJR6KUhBb3ELYuLSEyJv7BWfZka9RQV9VRjZtUIYj4do
oiBfntdEF9jqicKelSqxV99HZ0sOPsH0gmFt2KNqrYchnZi49iJ7rZ7UHdTg
W3n8gbQfgaJC3qfkYDw+5cmUQ5tRHsgrQhUJ7Bh0qCqQtO2YZTwRo4CTj/4Q
rTWsnT2rYlajK+Jz5ZGH/FT0bl5ZxMUqFtXlPZ9f0V+cS3n4hOfykEBRQcEP
sKng2Boh3WDk8kOioiMecdQb2BOe16/YCIFxORxjhQWKGAOu7ZnNliTdPvJ6
+IU7qGc2TGU9GpVrhIC4HJWS1AAyMLpFGVZj1clnWuJschI+o56lENNv0G04
C63zDr3XzBQkhZoeLvuGcz35zGspw2rV1kORUQhjvn5iP6OmlhqRThZ4/T3Z
RpxnStQ3eB09imPHjpGO6acGjuzegOrmQqy1SvPuOHrsGH2Cuy/ey/jWdczH
m7BUF8RUb7d13NxbLqRkQcvCjvpPPJEShXl4cOMC619dHGV8t0ZC8EbHhMjB
XWwEr9MXiD2TL+MB/SjfWzCnOLNrgLC0AnsJWUWY0a4JE+4rjlznyEJhKgY5
CVk1FvYOZJ0VScj6cOMwdJlYVcGKY7d+wn4WJra2EmYzbis3Bt+e2wQNMe7X
f9wWPskPV3dLyTPjPL05VD6nlrPAjrphfQQk5HHEIysKne1poEoN6y77csS/
vbyNy3mZjughNew7W9rg4oNdWDlWrKeMpdukLLsrGwVukilpYsu5NxKic+Lh
XNuyRK8yJX3cD2BpcdK+RGbYK9QzoQanJbzfRFQTm2+fKOzRNx+/Vsaxmuh/
D5UMBLVYp9komr4mmXfJX56gqomQXefYbzEzh5UVUauG/IQvcLDSZ1U6DXJn
Apoz0cFlk8S5KWHM2qs8kyDq7Q0YaQmx7NauE9nmMpfGe92HikGscnj1PYUj
uTD9O5xshXXivvaKDafUTUEPV65REx3at1ehmWlkYm2dndGmRTPoKwuDaJjY
orWzC9q2aYPJqw8pWPWCoJvdz0WEUxdbLn2Qx4UvbBVWOvkdvWRHOd4kNx6d
HKyhpqUN5/bt4UwGFYbWhEt7F1S1NBMtLQ3UbOQEl3bE4e0xAL5h6Zzxk4Oe
ooqekEix84wvl0Cew8T9MMeJlA4cjy8v7mHRRvqoyeDVHPTChG9oZCeYZ7a1
nRCTU1ySOkQorZwMFZHDe4/cwhnfY3wXccJEmp95xTuMfHtdIoyVQ3ck5BaL
slUNqd990MBUsMM19cgKiMuVceqEvDoNPTVlxsNzNknUyU0NQ7d61mjcaSTN
cieCuKiIoKiouJhZ9W0qCjrAcehCZoiSpyguLpbSGgoz0M9Z2ESXaZniwusI
iWg+F7ZIhGnY141xUFnejiju81unQ1NLD1d9QimBZcLQrGccmy/oexUjG9wL
SGT16VM+mUdn14h962Dn+beSAZsThVa1y7KmNVtPYsuE0+fCjrmSTTdw8UEO
ZUHiVzhUFuijYV4NL4PTOH128/WMPNzwWgczfWUp2jrv0EOghJQQuHTRyHbi
KKrYdvmd9Cw5zAdmhoIFp2HnjO9ELFYWW8eGvkUvhTi9jWN/pOQVG0ndZmNS
7yYit6pj6xU/KYz/3fcmzLXUMWPLBclIK04PhYuoutuMXCxtZhN17dpSUNdK
uua4+T5Ggi7g+RmoKgujl209nghiyMpx0Ul8+wk9m8CyVhdEZ0kbKaeWyi2y
J19TTDgFsmLRtamQL6asXYboxGgZl83X9i9ioXz6rN2EDZzPvTfNkKY+ZuUx
DlNxXhxaNBB6kulUpLlZnDDbRcQV52fi2vnTOHTcC9s3r0W39s2hqSrRyKJa
KxozZZUlhi3KxMR2thKNtl56K2EhNdIX5kaC/NKq5EKUXZGsgvjs2/uXOEiU
44F9ezF7ymiUNdeXxqErarXXQwXZrs4SR/cscJX8Q3U9O/hFpPEgwYXVM6Ck
aYhrPt+lNKBfWdFc/hfSZ/baEvFu+MmJ9+X1eYl4Nq0mEm6BjK/utO/vUN1M
Dz0mrqFGGHdYfjCnjUWgizLjsHiEk7Rqy9i1RFRWITfz31zdATsjnlymhvVe
96VksV0zOkhEHL3iqLQkChLg5CBYvzLtSoTp4koSUYWFxU7vWYVm9exkPMBu
Vs4OV55/ZDWkyBuZwPwhLSXKbVdYXWmRb+WUq6hIORWEvH+MsQM7Qk9VJu1n
UIqNcFtJdwClLWbqNU3q4UJ3aCTK9p62hUhCYZXb8vVAKDuhaz2Y1O2MqEwp
Lep31KMueu/mQhKXkp45br2PlUD/6nNRTr2WAvX46n5BPFgdJW1svvJa9g+k
49BT7Hx88wADnBqW4MtZGy+wGpXFemnx4di5bA4sNeWyzKpWe4QnFShgmyzv
tRMleo5ddUxOz0RCz8q/oudOkYkKc1Jxbs96VLM1EU2SyXgXHKuYU7NYEpIq
WHbyuYSL2E93YaIr5EhoVu1AfOlicX9FHUFvH2JER0f2zNjWHltP36EcrSs+
zkhPRWxMJD68folje7djaPs2MDXU5gQvV4N4CzHMORQZQxvpYb7EwtZGj2nb
wf2iX1BRIqKi/NQ0wZmX3yXA393YLS2acs6TFYgo2MkbJvWCnkU9vI3M5KGE
H+ioI0mpYqSlJiMmKhy+Tx9h/7b1hHUaQV9bXeLe+m16ITaTgSzuxqkjPzcL
8fGxCA70x9UzJzBv/HBUsTLnTVS0DXDw+ktWmS/Zswpyt8/8vXwuRakhaFJd
yI+SEal142N8SYWoiuivr9G4mhVadB6HuPQsfsxtjdsguQxYe5l3GO5zGYbi
iYPqzgOoPyTfjyrKwYYFo6BlUAln7rzkJ/k2uA1DGUsLMmstmZo4hWoN2sEn
MJLVqCRO5NXFbVAnC2Tf9Vf/RD75IizOw9BuzSQbcvOl9xL9Xp5ZL9Gvw/hl
rF15cQyaytC5ehk06jWBbq6znx+IJ+MYoNkR0we2h6WlOXTU1TjozTsMxNcS
3KeC9/eOwraMBUyMDKQp6hlXwu4zt0T+FLq8eWy1hNTGg1dyiPPjAtCwoiEr
NqxYF/5xeZxKe8SW/vcOMrOykcswpGYX8Q5v714kbX33n7ydm9F+lzdDSzRC
u49YIsUB8pPRp3l5qGrr49y9AH7s7f31vbwTUYyoCsk21Rtg/ootiE3Lrywx
WxGWT+oBbZP68KdBw6ywn2jEYdsxrQ+4n+Wx6xaH7dK60VKx+4aTFUVJFfzq
Cky1VWme7a+owmG9uns+x6AEq5KyGuwbtMCanUeRkVPMN3Fz4r9yrEqrTcfc
Bq7DJuKlf6SYaaCG4CfeMFcTkFXHaaxCREANSQH3UNlQcNXsG/WiG5+cMnx3
oiAvB5nZ2ZJEZM5TajBqW+ozmbjhrA8Xlwlf7sNURxCJjr2FDFbe5NTGOWJc
XwWeZ15zp5aKECoOiyF3YHctEjBY03kMZWJJ2hCZ1qdVeead9uw3mO0APXrp
i/jULNFq0yT8H4H2NSzQvM8cZKZHo31VdUXacdJ9vLNXWkJDFm7jAy8ZKWQK
KxOJefZ1VCVx4LMbJ0NNzxKPA5NxftWAEotJV6yTmxqEJlX0oKlbBgOHj8Hm
PYfx0vcjUjLzRIdHHUfWjGRtm7bqhDkLl+LSrYcIjozX57Is4zuaibLMukZz
hGcVS9jzu3MMuiLDuy46pFKSRMkhz+DaZzjR8PLwRVFaMOpYGggCc/R2uWGd
jqEtBZ2oZdMcwckFMnmErgDuA5uyZzplHPAtIUcmp1MBEXTDseOMj0SnPSKd
NPUd8CUhn7PwIy9PKCtpEVkcJ6spoifk1WWYEtN/wYbd6FzH5BfrSQ25KSFw
rCBAbNN0GONFeXZQAro1EeKV5Ru6IjWfy1UNdq5sTJeasGs1GNvmDypBHi6j
j3qOJGK7PD4mFMp46CItwheVjTSIxXBCJndfirF+ksAFStrWuPI6SsKo1ypx
YWtY4Mqr7yVoIFhaY4hz6TJ1A/XkuOfx8PQmaKsJDnCfqbu57H1+eivUlYXz
i9uvv5Ni5NGfUMtUEDcjl+zjBvjrsxthXL4+nockShjJSw1Hu4YCRmjS+9ek
fJEZCe0zY9DKxhgO/WYjM6+QWOSFol2sjjOrp0JVXR1aGmqKVOCAeYkBFjVt
S9zyj+OARb6+CnNVAd5VXve5M5ga6oPaZQyhq6uriHZ+IC0jzA9V9bXQx307
8gsFOOzEOW0c3R3aZtXwLiJNxh6QsmKedKig+KPf3YWNnrpo2x2XGKIgFa6N
BVu9aa+pyJSyIKRN8pBXZ2CuoQ7nUbPx8dt3FBQUICMlFt4HVqOMiZ6UinTu
1Q+DCpGCGb2EaGPNloOQnC3PsTiyeLxgOlVth+9J+eXF0WgUeXKH6tCq3AhH
L98lgjofBfm5+Ox7D306NuejVWk/nNoUrJEk8ze6M8TaVKhIxq5YsSIpG7Vg
H8TotWh/qDPndmLXhpKGLUE6omXTItC1Xjn2qPPwpSw1XX4OIh+L+gmGbKN2
E9n64XGY5xd2Qk+ULXzd8IO026f2Z0c9KxCgVEXQKla0w+KdTItJe6J0s6K8
tgZMLctJU3BoM5gexWA1uOA9uHg4G8ekYkN8CM/iOH3lvZ2BoGNUEff5sSbZ
NhHAKwfXw4TypJYubGzLo6y1hdy8dJ2C1DyGKdGw0UZa1Fd0aSbEeRxdxsMv
IBgJkaHYu3gyC85aVaqORx+CKopoTYkIRLt6VVh1C6tyqFDelthyKpxiqmYV
4f0ykFXm4iQvKQgNxC1gbg/JdKrifRRLgRAdGDWkhL5GnbKC4eM0bAETd7oi
lN8/PIVDJWtmJ/Qb7YFv4dGI/uaPpWOFXetazZwRGJXM/VkqgNdOFi0Og7J4
FCinUnzAE1hryUqAY2LXDtFCGpxkxtE+Fgxqy2qoi/XWn3j2A/trEzs3BdMG
Cyd1bat2xr1Xb5GcGIdre9ehnLEatI3McfDyQ3Fjeru4AgJe3MagHu0kp0hJ
mfjGVtUxbfFqmr6lL1YryEjAni2eaNu8IerXb4DmTZugTs0GmOi+DF+jk+14
tfQ4bFo+B3UrlxEZXgmqaoZw6tgHN3w+c1fyxP71cO3bF66uruSb8DlgwAA0
r2uLGeu9pCjwiwvrYV++LFxnbaBU0BNHyYoLxcrFM+HYqDYcGjVB04YUqGZY
sHYncRayeRQ1j6imQUS4V6jeGC9DUvUV8Ll51Xz07duXVOKD90d9extsPP1I
Srf75ncf/VwVgVRFv/4D0L29I5p1GYLU3GIdLkYKcnDp5F50bd8SdWrXhlPz
5qhlXxuuIybh2cdgMXNkh8QUxYgOD4b/p0/4+MkfUbGpUtSR7qAkxMUiNi4e
6Vm5POqYlRqPwIDP+PDxIwK/fkc+EZz8UpHspBDce/CE7YBVFctSEuORliGk
9PI7IwrzshAXS7tOQFZeYU2+KrIykJiYyPL8zMWyxO9+ePziLftWTUJbLp7c
voL4DPmZcTqTpIR4xMbGITktU/DsZV0U5pkQG4lPHz8gIPAb0rLyZDy5Njsl
Ae/e+iEmKU2yTHIyUxH8LRAf3n9EREyCjkJx0NeAn4oz5MWRsYm8ODsjBd9o
8QdWzJZIHQGuziK13j25BtcurWBubo3GzVqgfr1asKlck5g5BxGfWcj9n9zk
YLg2tIeOji4q12sD/8g0UZ1oIic1CpuXzUZFGyvYVamDli2bw9amLJx7Dsf9
t194Knt2SgQ2Lp2JCuXKwK5qXVbNhlRr13sEHr77xqtlJYVj/eLpKF+2DCrb
k2pOjrApVxbt+4zCo/dBvFpmUhjWLpoKW2tLqVq5ctbo4DoGTz6w3DzUEqba
SZQJd08shrmOEnRNyrPsjKTkVMTHRWCX53QWJ63fYhBCErK5YxH88JC4eyb8
Hrj1RkrjyUoMwKB2gsDtOXImAr7HIi0tBe+e3oBjDSvivpXBhsP3+B52Zvwn
9G8jqPo+Y90QGBbHqvs+voYm1SyIqWKNLcceSNXjPqBvKyEU6zreHV/E6m8e
XoVDVXOo6ZTDdq/HvHp6rB96tSjPqg+YNB9fI+KQmpoCnweX0cDOFOq6Nth5
SpCRAqPLOooM8vnJeVgb0rsQ9HHg2lvFI6+LRgjbLh3GrmIrTNBoOsiM9Ufb
usJmjql1TbwJShBkb146JvdrwcobdhpLMzAlgyP8zQWYaSpD2cAOD/zj5Id7
0zC+j2CtN+46kZ3E5U2+vzoLYw3iyBhWwZPABN6kODcVY8STP816TGGeIG8S
/Pw0DImXqGJsj+dfE6U4b3YKRnZtwJo07z2DbVLwJt+eeNFAJdRMa+BlMEsF
hpDcJ+vAgSQeef/mAqmrtRisYNOTEZ95w0RDCUoqFrj6OoKnmiQR7X375m0E
hEZJqSzPiAEsbFfp4MDNT3KHJQ9TugqnYF0GLlOweGiqwFrx3iRdHL4bIG+S
iwkdBdug09CVbJ+HN3ngtVJMedfDsYdf5U1yMMZFOKvfdeQahcPC9Hqo5YIj
qWSAk0+C5VeXZGNkGyH81mPMeoVj5Srw9/fHwYMHcejQIdIN/VTBgQMHpDKd
X5Rp/2HZ79ru37//t2U6f1jv38rIfz/1x8tUxbLDhw/j6NGj4ref6/1pf7+q
97/RltPtypUrEH9Eu07kfFV8eXgM+mLUZfyGc1wuFqWHwqGCIAC6TFjOOENT
gWvGtReyEQzsnRCSym+N0capDbOE0IRReTwPihfGJC7nqLaCL29UozXC0gt5
9eNrhAQ4VZOK8AkVL7ghTs3wVkLipkltZ3o9Fq9+eIXg9ama2cE3XLy2pDAN
g5vbsnKzuu0RnV3MPeEDywQXSN28KvwipSSxXbt24dKlS/j06RPBEP1UwaJF
i3D58mX2TUcsc3d3l8q0xbI5c+bg6tWrJcrc3Nxw/fr1Em1nz56NW7dulag3
adIk3L17t0TZmDFjcO/evRJtR48ezY4uKtajZQ8fPixRNmoUUZaPHpUoGz9+
PJ4+fVqiv5EjR+LZs2fsm6pYdurUKaKbW+Lx48fkm1A2YsQIvHjxokR/tOzV
q1cl+hs+fDh8fHxK1Bs7dizevHlToozW8/X1LdF22LBhePv2bYl6tOzdu3c/
lb1//75EW4qrDx8+lKDbtGnT6Nb5rzh7u1tPUa1r4cwjf/nh2GyMdRREvVFl
RxZZ4pyd/PU+bA2FuEaLrmOZoOa89/bcDmiLe0qzdwipuEmBd1BOX3D6W/Vk
+Ry8+uszW6TQ79w9t1n1eP+bsNIV4hlt+06VJ0hq4+WJDVJCzoL991j12A/X
YKEtbA269J9B1yDn7GdH10p5EUsOP+ScTeXp169f2Td+EJbKvm/fvomKXSh7
/vw5s4AhubwqjEPoyXHFMspJKSkpJdo+efKE2ClpJeqtXbuWWMSxJcoo92dm
ZpZoS8uysrJ+qpctxm152c2bN5GTk1OibOXKldK4vL8bN24gLy9PRIpQdv/+
fXrME9HR0TIVhXr5+fkl+qNlhYWFJfqjq5iX8Xqenp4/taX1ONcpthV/StT7
XRlvu3z5cqmM023ZsmU/cnZ79kdIB+tXWxB5Ms2qePI5SXIpNs0QuV7JCBdf
BfOtxydH5AzTfewuobYWEj7fR1kDgcVa953NIHh0cKV0k2OviXtlvG7cxzso
oyf4zM4D3Fnd+3uXS/serlMPSnVj3t+Eha4Qr28/eAGre2fnEumk3oAZR6R9
oqi312AqXo7VafhiFnzgxKQM/f379xKI2b17Nz5/ZhdsyVopECkiIoJ9aymW
eXh4SExuLJZR8Wtubk7riuc7VLB48WKJAXl/9II4mpWjOC4d4x8Ikp8QiOri
1qymbVN8jM2VCLLNfYDkXSw7cocTZP9K+V7w6HUX+IUpyV+fwsZYkCgVGncE
3ZHc5zmOB3nGbZQrcumETMAjYt4LUqVSs67IJmDv8hjNm0zaev2nJvH+92Gp
L+ZBtuiBXNJk28LhvMm0Hbd/aKJGhNEdmIsUtW/VG2n5/JkG9u7dixUrVjBR
Q0UL/aGig4gEWWsRe+fPn2eXUyhS6OzZs8jIyPhXCtGLVfgy5xSiSphSg4gK
QiEyMsXOuHH/RKGM0DewsxByPcrUdUZkhnwfZ4/nGIkUfRYc4RTa4tZPKl56
9AGnUEaEL8pbCgfIlcs1QVByPra6uUphWi/5iVGO7rQwH5QzEzIpVG0dEZqa
j40zevEma04//6GJFlJCXsDKREhtUq/gxAKUa6d0FwFSxvqzr6QFlBT0FJZG
As9oVGqF4JQCyXmh1iBFFbXmY2JinEXssfCHkN0rUSMhIUESfr+jBq3H10Yb
EQR6QJwOQX+piUSoIIZMJArEf7pNdKvAppZ12iIiXU6B49vlaWQ93Y/I7/cp
worRraVHHkfuSzcLFaR8g5245JTKNMHX+GysGt2S49Tz+KOfyJCXFIgK1kYC
5ayJ5k/MxvLhUsh79alnPzTRYlnKNpZCjqdqOSeEJmVjyeCmEhnWeb+UXxMV
9xHW5sIGg5ptKwQlFZSQY1wxtxPLCDkkxcJpQJSWRBdOA6ogdXR0EB4eLtGA
1uM04P39RmHEvLuCcnqq/4r7XnMUcF8IjyFNfon7fIp7GwXcx2Vi2ZBG/457
QxH3zRGckInFAxr8Oe5bIjQxE/Nd6/4V7gMCAv4K97QdNe+JYfRb3C9duvSf
cJ+uIHksCO7DFXB/aN10CcE93A5zybN5tlzyLDl6n6M9J/YTKlkLG48yy8b4
kpiPbbMlybPc62e0Z0d/IMJKwKGSVTMmrDZNlyTPqtM/oz0z8h0RVoJ8Uynb
At9TCrBuslzyrD0rRzu9ZdPKRJibqk1LfP0P0d5KoawUKM4mINtZixdyWTng
bVS2hOLtc/vL9eyG8xzF2xYMkYoHLj/DUZzyjapfQUjp2rdGFFGm2+cP4vga
uur8TyhOCnwIazGBT79GO8TmFGHTnP68ych1l35qkvD5HizFxHPD2h2QQPTv
upl9eJMxG6/+0ESNnaYz1xOMJOO6nRCZWfx/geni7Gi0qCIcJ5DpVMGjQH5J
khBPXDmmrYTWvVdfKeQJL5QSGbpN3MHNxCjfKygjJmLUb9uX7SSe2zpPOljZ
a+puyaSM8LkAcy0BaQ7t+7PjBKc3uUl1+87cLwmosJdnYaopYKtJJ3ZLAE6s
m8ER3N/t0E8IDqGHVcVjH45dh7GckP8DBFOV5zmipYhEHZx5EihT9FxHOwkZ
jzKDangRlCp5rlGvz8NMxE6LbsLJAu5b+l7cxq7To896z2AJ8oh46Q0TTaF+
614lXFGfs5ugJVbv53aAVf/+9CSMNASEOvedKXdFtfHi9Hpo8pU09wirHvKI
BpXEO3sGuCl6rk+9VkuOyNCFxxU9V27ol1ZI05gAjT8Q8/K3QvoXBjyPFdw9
tU7yeaZtu8oxXpDyFTXKCYqubvvRLNzNMV6UG4fWtYVNP9OabRGWXiRh/OBq
fvxDDyeeMrWPouwYOIlpM+Z1XMgKlsJaez3HidUNcPqFsK1RmBUFx6qmgsqu
3wnRWcW8+k4PMcFDyRDnfBjOkJ8RgcZ2xqzcyqEr4nKkKNjWRcJV8zIVY1z0
DecYp0Y7xQjx+0uNcfoaAQMDg380SdqKQ1Mfm1qgomGup4h0NeQmfkFTGwHm
hh2FgwXcbv186wAMVIWk5FUnnvB9+VPca1IyxtnnofI4diZGtRRWRsWmfZGU
XSyFvo8vE5GrbEIc4jCpSVEGhjkK+ymVmw9ASq48Wn5k8SgRY2a48iZSakLc
7sFico99q8FIy5M3ObBgmNBE1YLmkcvTP1IwwEGQl9XbDkd6vjzAThFDgwHU
SyotAX5ll/+KANQnDgwMZKFMOQH4xtCVXfPZWlQ2LIs7/tGKG0MeA4XDkdUc
hyEpp1hKjMhJCEYre4EtO01awckV8fIKzLXVGAfvvfpWunQk7iuaVxEs7m5T
1/DaYc8uEvFMVaYhDtx4z2tnxgSgaSXBvuk5cwOvHfroHJE9VEkY4cidT7x2
RrQ/GlUQlH4fty28dtCD0zBQp4LNBMfvf+anNP8TA/zfkP0bA1zAtA5ZnymY
3Fs4glbTYQSCI4UztRTVt09sgL6M3q9cAQ/9wqXsKL+bR2CkQ3FqjE0HH/MU
mdSoL3BtUY11NWL2aoXLMlThe/UgDBkZTLH18FPeJCUyAL0dhYD9aPd1bGeI
N/G5tA/6mhS75thx7AVvkhzuj+6NhZj9uPmbWPyfN3lxfhf0NAiKlS2w++Qr
3iQp/CO6OAiLcOLirQqpkv+ZDf6n6P+FVhU2hbWIdIzDqmkjYaCjhfJV62Du
4qUY27MzmYUa6ju1x73X/mKSihZeXj2J5g2rQVVVB32HjsaSebPhUNYCeqZW
mO25iYZXJJvk+WUvNGtgz+q6DhuDJXNnoaG1OfTNrOG+cgtyiuV1n1w4iib1
qrC6/YePw2L3mahfxhT65uUwb/V2Jv143UfnD6NR3cpQU9PFgJHjsXjODNSz
NIGBhQ1L+VC8zfM/Qe2fupa/QK2Q8qCOqNAvOHN0D1auWIHV67fi1mMfZBcU
8yM7eTnpePXoJjauWYmVq9Zg71FvBEXEa/HH2Wl4+fCG9HjfsbNkbSTwx7lZ
qXjx4Lr4eC32Hz+PkKhExcfP71/DhtXCY3oyPTQ6kWdc/CeYoUJz3rx5NPpd
Wswc/MXwPIZIq9LhaR5hqz8EqZSWZCVxOWamp+B70Bd8eP8e7959RFRcsmzO
b0CjO2J169algbz/KdAqiOzt8+QWZo4fivLlrGCorwdtbW1oaevAmLD3sJnL
8S0mQzZbAdQfI8D79u1jUmbYsGH/FVB/YRjaio8KMxOwbMowaKsqyTRE96Fm
y1FIFE4tyGaK9ag1ReX/06dPJTDpzjEFc8iQIX8MJuc/uvdF9/cSExN/q+Cp
AUHRQe1fuYIXsqHpJZlRGN9bCFcpaeqiUcv2GD1uPJnwOhw4fASb1q/G8IG9
YELf70Pg3nPtjWyWOBo1T6h8iI+Pl2Z04sQJ1lf//v1LPaM/tRmjoqLYflVJ
k0U4OEnlYx48J9C7XpTQuf8kPPYLRG5BEbepgv3uwLGyCQZ6ekkT+dWmmLe3
t2A49OlT6on8B+YAP/758dEh6KrrY+buy/J7sFTgtXkmmo/dXIKxfrVUL1y4
wKDv3r37/xj0v1i+ZcVHNJ1wVve66Dths7SrdXTdNIxe5fWvoNNYNAW9c+fO
/xeg5yd8RhPHVngekiol5hVlxaBjtWrYd823BM+UBF2VbUpS0F1cXGj3LUsJ
PW3+l7qWQ58R4gOXrl0Qmi4/U0iTrWeN7gqrWt0Qm1H0uwnQPAM6gTZt2lAF
VNoJ0DVE0yT+QiXyCWRH+KF2bXtcehUiXT4Z5PcUI3sR01jFCIfvfPhnua/K
kh1YgKNFCwrdn06glKJfAFYfOdEfUc1SA+Uqt8Duc9cREZuA1NRUpCQnI+L7
N1w+54WJQ7qLcRFNzPA8R21ePgGqESgqnjx5Ik2Abo6xmFSTJnRD6z+ZABeX
165dw549e35QAMIcNNkcatnoSzE5fUMjmJiYkF9j6Ovp8oCYMXE9tp6+zxq5
iYNR+X/nzh263SPBT7M+lJWV2YvNcnJy/hvw07YhISGYO3fuT/CrloBfXU1N
yKZXZbrK2MIaI6YuwMeQOHcFnvny5UsJnqGJJaqqqqhTpw5NPSgt0/v5+bFc
lH/Sw78R9sIctErMwWPnEdy+dBa7dm7HbsIgV28/YobZPIUZ/LhsP336BA0N
DVQjMiojI6O0M/g3vfuvy7YkFbZeerT4N8BSIUGlXMWKFeliKS2w/7GILwns
5vP3fwcs3bXU19eHtbU13eEpLbBUnlJgicXyvwAshcrIyAimpqZ0TZYW2C1b
tkBdXR2nT5/+XwCWJhKZmZkx7MbGxpYW2BkzhFPUixcv/mtgo/xgZ6rKDMUt
F0rw7I9qhWYkWVpaskVGRiktsHR/kAJLREBpw88cWHpRtcc8N+w7cglxqdkc
WKpCaBYLTdLjwObm5rJXpaioqNCJ/C2wBHO/tcKpnUYTbWjOnVws84MiMWFB
ePnaj+0ySNfgE8vc/4M/zSWRCRffarC7RG5ePIFpE8dhyODBGDJ0OBas2EQv
v1W4PCQHJ9d5oFev3liwZhfSc/nOlgbCv7zDmmULMGzIEAwdPASjJ07D6WuP
2eaMplgnLPAtVi+dT+oMJnUGYwyp433jCYuR8Dqhn99gpcc8DCN9UDjGTJqO
szefKeT3aSIh/BPWrfDA2JHD0LdvH/Tu0xfDRo7FivXb8Skomhu6VC3SFDO6
2cBpQnNTqlSpAiUlJRo4KC1NZs2a9Uc0iYuLYyKLxiXkNOGXqeSkRmLx1MGo
Vr02PLcdUIgnqTLa7J8zEg2cnJFYKN58rI2UyHcY1FFwD5u69MXuA0ewZdNK
NKpRAXplKmHVnivyrRs1RPlehLkyPyuhgtNPAhTucy3A+T3zYU48SV2zspi1
aD2OHTuEcYN7QEdLHS17jkVAmPyOQYJ6753uMNPTYAEwtyUbWPUxA7tBW1Md
rXpPwJfwFHn1PJzaPhsmuurQt7CFu8dGUv0gRvXvAi1SvU3fSfgWKd3kXpAV
hY6N2I1F0m2xJla2GDR8FFy7d4C5YVkMmb0OkakF3PX6lelA6UQjInS+b9++
LS1Zp08XNvfJCi6t6cAvUSzIiMfwTrVhWdMFPkGx8iWThQ0TB7Ed1cqOLkgm
S66M+Cw7OQL9WgunKwdPW8uWCp9QdkIw2taiwXttrDnxmNM12u8KLDU5XVVx
7mmg1OTa4UXQVZXB0KoWnnwK58H3M5sFlrV3HIK4rEIeGb5yYB50CIcYla2D
ZwGR0vUq64Us7+pOI5CQLdW+uHcOS5E1samHl1+kl/UdWzNZiJO3Hk3fc8Xf
MJCTGIhyFkK8X11DGwOnLkRofBoH9PXl46hsoomajfsjKCr9V9FRXpUmOTVr
Jlxa8fTp09LSdfLkyX9E118oJ35Q+vYBD9ADHyeffBHloDqKs5Mxa1RfNHNy
gqm+OqoKhLXkNCcrceMM4Z0+RuWbsDdmSO/fOObJtmBNyjdHUHwOf18IvZzj
7N4l6NfXFYvX7kJWgXBuOc7/EcoZCVkbMzZelC7VzI6Gcw1hQ3PuxqucHNEf
78PaQMhEm71Vuia1OCsSrezNWfGCrTd47Ui/O7DU12Bqd+7OG7x2UUYYWogX
gi3ZeVv+PpQivLxzCbt278UL3wC+Yxl48xhLta7beRq9fvNXmwi8B4pgZ2dh
Y4VYuqWl5YQJEwSYliwpLS1t+RyI07e0f23IDKvjVZT09pXM+CAM7eaIjiNm
If77J1SzUIdd03ZsrVqKTdNCn6GSqYDazhM28ulnR7xFZQshA8dt+2XpsDcZ
aON04fo6JcNq9ICntOG8fa7wIhTz6jS5S7w/nL5oa7Jwg5SycQ28Dkvn1TfP
FhjJspYLvW5JrF6EVROEo9cqprXptTocoPXTewsby3U7ISarQP4ahQK4D27G
aL3h7PNfkYlL5G7dhLsKLl68KNHjT2lEN4//YxoVYG7HmoRtjHDs7meu8r/5
3EWbemXhOn4ePZiP/OgPqExsRpFOnEyXdswRk1eUsO3KCykdozAZPasL28FV
WnRHSp48OSA/9Rua2ArpbjXb9kZ6kTwd48HBVWLOtDJ2X/NlqM9LDkTDsoJp
Xad9PwoNr35nr6eYNq2Mfbf8WPXcxM+oX0ZId6vfeRC98ZrT6uZODxFYVRy6
+5EfEr2/ewXLlHHoPkL+UuVf04oeS6YdnzhxotS0oubiXxrugmw0xNbpwrvh
bKu2xt1X/sgrKERhQT7iIoOxz3MWzAzNMc7tgHRRNY0pKRDNQloteZhB34rK
sgWscdeX35AhyNKlQ4VTjDIdOzz5kijF0z5f38fuGGcb3ANW8B258Jfnpeyj
HpPZ1Q34dGUXdMXbUrsNWSPt3oU+OwNTMVmmzzR2hRfeX9gunR7pOXyDZJkF
Pz4BY3Whbr9Zezi5/K9tZcdSVe1aIyi1QJFcoaGhJchFTwbR1sQwlUhDLUWe
ysvL6PkMTgbjH9oqLi3xHEcJcv3CdeE3OYW9uYmyhkLysbKqLhyatkRLx0bQ
I0afloEV1p1+KJPe4hT1AVXMKKmcFUlVlBmOxpUExaNkXp8IqkyF9L2BUvBq
x+UXnEqnt8iTVl0XnpCn7z2Tsudrt+3DeOTURjce5hrocUaamjx977GUPV/P
pT+7tOz4WilVbKjnuR+aqCHh8wMpe75hR7b6pPyIR8fXsEQiJTV7vA5OkzJ8
iCdHzfzVq1dTGcjyr+Pj4yUC0AMgxKlvQReaSAMa9qFhkJYKZR8/fkRkZCSh
Hy1TY93w5Up9ZrpXU+2H+vQcTBtWps6GpLtSFAz6S093/ehJaODFTS80qVQO
6kK8DSpqGnDpMRhP336TTI7Ez3dgSvjZtlGJVZcZ5gu7MoLqMqvZGt9Ti+Wk
nC+/yWzkytNSmr27nMLzD9yRSBlESCleMaNj1wIRGYXYKk+rXHz4wc+k/EpI
KVJfv2orRGcWYqM8rXLZ8R8z8wkpAx7C0kCgvkG1tvQltDJFfbtojHARuLJR
XfhFZkoynHqB9Dgeza/hufRUPtIopujK0e8tqGtIhqaPaNWsrCxCT3lZeHg4
PXpC6EnL1Fg3Q4cK9wDPnz+f1iH0LFk/NzeX0JOWqbMyutZp3/SXtpHTs6I4
EXrzgK/PCzx++hxfQ8MVcjnUEB/0AgM7OqFLnzG4cPsZSw3hxEwLfolK5sKx
hR+zxo9udZOo1sNdylzeOKOXVLz0iJS5nJf0BXblhDwgmVVjarxi84ye0pmJ
XySM0+zvCmKys1LZZghOzsP6KV2lMxM/JYzTJPBPsLEU04BtmiMwIV8iZsiL
MzDTFdasWd0OxIzhl1aV9P24VKXvkmGG8Ny5pVaCNF5M2y5cuLC0jh+vHhPi
D593AYxU3LOLeOUNK/GO4h/JcWybu4T3H5L45/etJT0qkcSf/BV2YvYdTeL/
EpuOhX1r/C6JPzcxoEQSf1B8Oub2tP/nJH7Ce/H+Ckn8Lej9W6KqVUfI68to
UlG+OdFtxAp5uOHXtsm2bcLd4sQHKzVZhgwZ8kdk+U12blrwK2lF/HiK6NhW
hTMsbtIpoo0ze0vFy45Jp4joK22lIxSWxJ1LICtippSYv/LEz6eI8hIUjq9Y
OdI33WH91G68ydozP54iEt4fLmG/rIB9bqanxobhwMYlsDPQki4tVdItizsf
pBc3/iMZaBkT4yNHlpoMgwYJamDBggWlJQN/DUNu4ldMHjUGz/2jpcuv00N9
YGchkEankiM+x8vfxrlrkTzZv89iL/kxi75S8YTNlzlp0kJewNZM8MqUbRyp
/YUts3tzHE3Zfu0n0tBjA2VNBM2jUsEJoWkF2DC9B28yY/etH5roEmX1CGVE
u0OtUit6dIJVKCrIZre5+Po8w9EdWzF2aH/YmRjyS3zdNx6SuvodhU6ePCnY
lP36lZpC3KL4DyiUHfEG5QwscereF4lC9DLGmuXFC+KNa+NFiPwinE0KemOl
131OoUNrpyusqcOcQgn+D4jNKQhzu2adqQGGg6uncHT3nXfsJwopHl6t4tSd
+kDY6zmBNxmw6OQPTbQQ4yc/w1qtdS/6rjv2k58ShGZ2FtBQV5NusVLTsoLH
5qMlAuK/Igu9ToD216VLl1KThZCSGwZ/TZZIGlmoAO8H3+S3xtOrl8U7QGRK
5rj2OlzBUSrAnG41xGem5Nl3yVHyu7yTvVydPmvXbyF3fr7cOwAj0Sly7sf2
NfH2wlYWFqRlHQd6SI5SwK09MBAPvbcfuJDVfe29EdpiWdehnmJdTXy6Lr/9
rfNQD+m9v9SXWzuzD98ZpraqgWV5DBg9DU/efvlVKiD3Rng6ROvWramz5FRK
cvTt2/e/SQ6eGnRswxSR5ZWw7twziRL5cWhpL1zCb1GnAz09IAUbchM+oaqV
YPdUbdkLyQXyYMPFvUulgzceXk8ZwrJj38NOPMFavU1fpBVKwYZzuxZJoY7l
p1+w6pnR71BBPL1aq90AZBRJwYbT2+aL52+UseqsD39JaGzgbZgSS6VKnTbY
vHMX7j9/g9ikNH7a/WcvVhUvX75kmQUODg40s6C0xOjdW9Cy8+bNK+0e3O+I
Ef3hNsoK912j4+j1fNrxH27ASk+Q3UPnH5A7DAVYPES4UElJryqef0uR8QuV
KJt6DBNCDlqW9REQnSWybz7mDxDKlQyqwYcIRXmbQiwcLMSpdawc8CUuR2yT
B/e+wraNsmFN+IZlSBqfwjCvv3AjpB49nZyQK+GYxev6NYZ17Y7I4HfLCbuM
M2fOpMl+UlXqONLt0OrVq9Ocg9KSo2fPnr8lB9/RoreQUEu7pB/6zxQRwjpL
hghnE4yrELcgLV/ySU+vmsq4UduiJl6HpXCXPPTlVSLHBSLO2nWFYyo3NgD1
ygirZtTSAyxdnUeVg59ehJl4JYH7vut8gBx67akYmB3neYQj6+vjczBmhrkS
Fhy6LV2SGvke1U2FMPvE1dJJp+CHZ4mAU8Lc3VcFD15Gj2OnSrdoKh4Pefz4
Mc2ikMhCE2X09PTYBnBycnJpydKjRw/JqfkdWahHS8tLupO/Igt/JUJKmA/q
WQnOxISFxzi8qZF+aCzeK+mx/ZqONMEi7J43WHDGKjjiU1i2NMV984WzN5WI
kAtPzpefSSnEdjfhKKdFpRb4HJEjNdntPoyVV67XBVGpBfImxG6bIQhpy8qt
8SVKvhS2zxJGr9qwG2LSpPgafef3RJcG5F910gHBNCnTM7DC/hufStDmZ49R
lR2Lp6lVhoaG1CcvLW14hPyfaFNKdWLLyrTx4fFlNCxPX5ukhRFTPPA+4Ase
nDmKZuxV9+qY5rGRbhHyyz7pNWruI/swHWBVvjnO3biHwA++8BzjymLWVeo1
weugCK4uCrOS4DasJ1t11hWdcP7mAwS+f4OlpAsas7av3wxvg6N49YLMRMwc
LMyznF0rXLz1EAF+PlgyvCcbsXrDFvALjeEG1Ntr+/jpTsnQathlKrPdAG6o
/Vq50ws9aFqPmpoajYyUlhrEPhMWv7v7f4MaQrBUA2mxwdi61gPdO7QiZkcb
tHBsiUGjp+DGU1/x0krhddkPb1/A5NED4NTcEW1JvbbO3bBq20FEp+ZoKFR7
cPMcJo3qz6rRpM627bpjzY5DiE2TVyvOx70b3pgwsh9a0mqkN2eXHli78wji
0nP59ndxXio2rfVkJr8K85BVyeciLF4wG00d6uDW+4h/9jZUGUrt7e1ZAoS/
v39psd2pU6e/xXZl9kcLyVHB8PscxBgjR4559j0+NACfAiKknH4UFyIvNxd5
+QUyU7EsPy+PpXEUFsvvO87Py2VlRf9QxsGP/+5PT6X8K0/SiHzTpoLefvbs
WWmx1KGDsJc3Z86cv8XSxX0e0DOywK6LT1GYFIiqZexw9WUkAp5eRc2yRug0
Zads+i9mwGfFCXX16lXZn4LPX/xFQaKp0+IU/nIGBTlp2DhtCJRVDDBs0gRU
NLfAkLHjYGGggcb9pyIkJbvEDLidyWfAow/0TX2lnQEFk+81u7m5ldLOrML+
0HVJc3HGint6Qsyg08i5SMwpks0Qm1OTjMbz6eU2HHKedrB169ZSQ045r23b
tr+DnOt+Gjj42SRTvN35xIKp0FVVQp/Ji9kRWJ7uTw0W8XIwCWh6t5JMiIf/
FdBUqtH2s2fP/h3QNN2Q7nfQa5t+Nlgo0K8e3ERaLkok+NMzXoq8sXnzZjbY
1KlTSw0s/U4dyd8AW8ojYxwqegclczSGDv0rqFq1EjySWbNm/Reh4kdQiNlS
aqhoHXr34N9BxS8JL8yMhZf3JZbDx918mvHic/cK0ogHPPUfoVdltyvS0Z2c
nCh0Lf5iArQp7YJ4Tn85gfsnVmP+Pra9KJ9AUSImjBuN6JzfT4BmtVPTplat
WvSSvdJOgGqw5s2b/+UEBGtGjaYhoEfT8mjSrhc8lqzAihWeRL4R0UdGWL16
BcYSU8/BuRPNOPzdXKiIpk5N2bJl6UL+m7k4OgrvsCIy828zsg4v45FG6fWi
VYQMLFZjisIESuoUVXYrIU12pnnvBOrSToBm9PJ0tH+ZwD/uwxNuOrUfSzw8
mKTVYp+qWOa5AlNH9kLjNi6KRPhZuwgsrZDC+jdz4KbN9OnT/03B0LscSyqY
WtICSMICos+jsuULgCoWejtlRkaGBC/tlXPwo0ePSgsvvVySHsL5A3jpkR+6
b15St0jwFhfA9+b9nyQO1y3cau7VSwhwe3t7y/4G2MaNheuwp02b9l+Q4hyq
iROF6zS2bdtWaqioh9WoUaP/AahodZm4UVdaqGguP40hinr8vwgVvTWY9jp2
7Ni/gqpBgwb/A1DRKxTZ7kjPnqWGit7OWr++cC35lClT/gOouETkAVKaGkF7
pSuUQNL8LwCrV6/enwBGE2f+ATAq5mgO9o0bNyTA6P2EmpqaTNQRsV1awOhl
lTwj/B8A42KDHpWmd2LSS5DlYoO/KCI7IxlvfZ7h8sULuHr9NgKCIyUbIPrL
B5z1PgffzyEi3HQPpBjfgwJw99Z1XDx/EU9evkVqVr6W4uNvn3Hn/xV3HWBV
HF37SpOOil1sYImx914TW+wNe4/RxJbEFpNYorGikog1McYSjb33ltg19q6g
KBZUbKggoOL7zzu7s3fBC3rJ930/z3P1uXtnd2fOOXPm9LNts/z5wFHx84uX
ylUTE/0IYWFXceNGBG7dvu0gY4iccOtmBK5dvYrQ8JtIeP3GxXhYIq6HXsCO
bZuwbu06HDx2Gs/iXqnpkRuzSrRAkgFWs+1L8Mq0gJX5eRbNs58aWHnW0jwp
eIMJrKrOh8xC+H0aSn2QF14ZcqJB4+aoXbMyMvpmQ4ueg3Au4om1dt2tU6jq
p7nTfbIXxqEr93VN3Q33r/2DXu0awd3dFUVLVUerVs3gnzs7AopXwuyVO0xt
tN1wN+woegQ2hLubK4qVriHGNkW+3NlQoERlzF212zTWCaHH9qB/724o5J8H
zi4uDrSxi8ueGbOieWBHjJzyKx7F6sXR3XD78kF0aVkXbuLJJcrWFGdIE+TJ
mQWFSlfDb+v2Sou12dmY9MzRJKMCBQrIM13wDXux8uzZM5QoUSI1rKTCHozK
NwIA88d3kD178xWtgQPnwqTvLjExAXtWzUEmVwty5K+Kw6EPDLfjtb0LkjXl
OKGb5j1wL3QPqhWhSdkJwybPQ3Sc1qXqwa0r6NyQzMwVfUctMAU5CaHs8k5U
LsxYImd8O20+nur3RN28jA71Skrj6IAxi00AdcGT++FoUjGXPgfBaP7Yw981
TLrj9oXNKOfvKV83OmQxnmu9nXDv+gW0rkWPqQcGT1xhyxes0EMgKuVs586d
aUEPxX/e3rdv3zShxwn7VobA04VN5HJi47EIJV6FDNMCxMs2GcAG5gqQCU9v
oVvj4sjg44NiFeoj7J4s3ovXzyLRtJrmQ67XdZQEvuEDuLYf+TO5Cphmxoq9
V5V1/lX0HTSqrBUYatBzTJJbHoftRR7GlKbPgjUHwxUbCxqgN7xzzIODVx6p
TRX/KAJ1y2mVvJp9PlktIerCDs3j75aDbTtsRaera506ad4ANkuwFw1kSMWK
FUsjGlQptMSY26hbTAuBLftJX9lDWS2EcQjZZeiaFxbuvKhO/lcvniL0Siie
PI8z/FabfhmuuW8dfLHqULjVKZiI7zpq+mr5hv0Rm2h1da2fpZdQdMyMtf9Y
y6PhNYa11ZSSSk2+kjGuKmN/gmo86Jgfhy8/VHhYEax7rp2zY8vpSLNH8svm
Wje4Gq2+MTXbtI0MOp04lumUaUFG0aJavIKQbdOEDCec3DgTbnq4wpBftyiu
9ObFbdQIyC4v1+zwpSnB0Fm2+Wunl4bLXuZj3DHCC92xNkRvlermi+1nbsoN
IzvAltfc+TnLN8Bda7m+lcF6KJ9HFuw6f9sW0A9dfmhMKj4KTUpoaTh5qzbD
w5dWBrNkgpZ2lc47J/aH3k8N6LNmzTKEW3uBTgWJuelpA7q18OUbTPpMVQ/1
xvqDoaYwlAQM1DvbuPuVx4V78Qbk757agBweWixQneYDZQCrgvz5LfOMWP7e
E1dJwEceX4OselOFuq0HmUtTntkwB5463vsGrXsH5CMOLUOm9Fp4UKOO38rD
Qz3p+Epr84evQ7akDHknw5BGj5MATdU0AJ+eF+l4/fzztAL/1UM0KaIlDVq8
iuJgaLQxwelDAnWkuGP5vouKGe/8dZxRzb95/3lKGnp0ZR/yZNRCI6o26yNB
vn3OD8bQ1l8tMCQwxtHn1JsP1GjZV24o9VabQBfc6qdvjXCWjt/8qZ5098x2
ZPHQ/PV12w8yFbjTgE6/uRnorGPBBGpqP/Hx8QroNCEnT5sgIhQkzWxGAd1E
8Ryq/6Wmn0iLjQNfVFCfftzd8yicW3OTexbQApfVVEOGWesXD5+7RYF/tqoB
Slr9eaOS3R+H7jcSIHKWqYcnL99g9qgeRmH/GVuNGSr+/PDS30YCRO5yDXEv
9s27sBA0RIXsp8PQX/coLNw7u8NoEZC/SjM8MjK5nQ1ljBas1atXy6oikkzF
uwg39o5hd1ba0djcQVyrLH/WwMp4FBawqGm6xrKvTJDIaHoMRWCWntAN5sRo
kWS3sFpDHf0W2nXYK4mz4iepspZFx+GjqLuIjtEaRCiHKROdmLwh9qPe91Ro
FDdS7jHw26S+Br5aDDfi5VPoMRB79wz89YguS66KbJqLEGuPgfFv9RhwxvM7
J5E3m5YS5pC7Mi7cj38XGsd/0UR/uewnoND45MZR5NBbDzjnr4mwx9Z2AtxM
bAdEh4tQALWGuJrCnj9/fhnBJRhcVb1PrlAzpfGK32rq15imQGshv2XUb6f6
SEVF8unevYuahqpiebJiEWEspF6+nB8WIzI1GsiogPf0MS6ePooZUyeifZtm
CMidFcGrdin9lfIBw5qYW6Ewp9XH10KE7KqPX9H46a3eBPbUx3dOVh+/Ci7e
SxF95q5yQ1oWN1BoTz18pSqqV5BFKffV9u3b7T2FiI0kCLQOfY9TyEufysv4
Z7h6+Sz+XBCCnl3aomyRADg7pFMtdCf9aY2iVnoVrUQ0yJiR+eD8TuTVM9Le
RuZw28hM2mjih9SQKRtN1Eo5d8U5WaOJ90TmK3zboaJ1P76FTK8UkalECgUU
lVQmhDqLvZhki5aAgIA0YlJVeQs/fxqRUbEmoIi1JL7Ezeth2LxmKfr17oka
lYvBLb2Dhl1neXOWbDlQpfYnGDF2Es5dv2NYxGxh+dn1Y0a8f5bitXHjqfXY
+m2CtbdOs6ELrfH+gcbl7343Ms1i75yGvx4IaGEijJChpw9uoxA8atGetxDM
HjB59e1lEQg+nzKCFbMd93ljA7njlx8ymG34EeTIpDFbx7y1UuygoHCr8pIG
DRpkN25pN1OHoxD004RbN0zu1Qortl/VQfIGD+5G4MDOTRgx4At88lENeHu6
WbRsBRc4Cmna1Tc/vh45Hus278Lte48ocKtAYFt4jb93DgX1kEFLtrI4fivW
JAtZT8sBMzYqvM4a1dO4HDjyz6SykCbYsI/gg4Q3Ymh3Ixl0zMq38KrJQto5
kKW0FmX9DrxOHmJt79R90vqkspAmkeao0JT12FPFq8rXaNWqVZrwmi9fvjTi
VZsCeJp8Vrs8GnQehKDxo9GycX2W2zBQ6eGdCYU+LI4Bw8diVshoZMuRDp+O
X+STCiqREIWGRTUl1+KaH3vOR5lUujcY07WKDjpHLNpxysgs2DZvjNFUrHHP
aUYK9tGVyKa3LKhUv5O0Im6Za+0p1rz3zwbLvHHoT2TW06qrNuomjQ7vQOTq
n4YZqkXggDnqSWF/L0QGXYes1bK3zPBIGZFOsu+VqUReFTtxSVEob9688nVC
xrQXl44aKuMiUaVkHh13XnB0cUeu/IXQuns/zJm3EKcuXkPcy0RZ0L5bU81r
myXgQ3TvNxj7Tl2WtjgV8GZGbEF9ktMGKl6WHov3nLPi9Dk6VND4i2P2Mjh1
O9ZQ0x/SGuetbcZKjXrI6kRKTT+4ItjoINF59DK5gqizW8T+0XTDak1lJ0aF
qH1Lg4wOEt1/XPkONZ1FizLqVFOnTX+TfcAJu37/0SC0PkEbzGq60hjV0ynK
soqeXn0tLWhl0PZ7oNWGxqgdhLh/didysFVrOiex/XKhXtM2mDR1JvYcOCH0
E2s8NHsHj+vcFD4ZssDL3UVjeE5wcPPGx616YPXfJ0jFqqCVLQQf3TjHSMLp
MW6FgmX8vTMomENLJ6zWatBbFrCWlbWurZ4B1RD68KWB4Fkju2r04pgVW07J
Ln148+oxmpbXCN27YE02LVNoma4SxZ2yY/vZyHcgODH+AeqX1EynGT+sK8S9
RAPBQYNaa7e4+uHvy1EKwVRG2Th0y5YtBoLpLClcuLB0lpw5c8ZeBFOTzJ1b
s6AI+Ss1F9aSJUtsKJvanBFx7iBGjvwRa7f/hciH0RaVjBYRFo7oBC3weWnQ
Z/AvVAJnwu/j7LH9GPJpJ+Ty9TSyOC0unmjSfQBuPHxuU4RSZofXMXfQqJhG
lB/W6MTEHkPRO7bqJ61ehaMH5m0/q3Ipdhj81h2/7bhgbXPxGK3LaM6SMo37
0GVgGJi3zPxej+L2wMI9l41bEh6iRQnNmlq+WT+8eK3s/6SoN3j46IEK9Mbk
/k3MmFeMfN00PQc9nTeWHbRau+Pu4ZMimsBeNXCQLEhn3to0/jDpXmGem01l
RixbtiwtmGfo0ntgnmoyDXa64qpjXqVDU6OcMKAfDkfEYvfyYPjmK4Sdp6+r
1ME7104jeMxX+CBfVgPTrQfNgf5nUyUqpPbz2hB4EVJuGfDn3svWDIk49K2n
BUvUaDFc4sBdEUdsFNpV05h5lTYD5V5XDOb8pvnwck4HB6dc2HDkhuHSibmH
1pW0LV293dfyqFS3nFn/KzzEMergnBubj990MmF63ZwgBLbrgNEjBqGkv+/b
mHbGy2e30aSM1kalTpfhSZxFx1bMgKugVCchYew6E2n28ygtVxltWDiPj2C5
E3vRzDILTCjg/T179rTzYHbTnxLUqz6qVa0NH28/TN1wTFFydNQNTBjYXcof
1dtPtLVpNVRSco5H0OCecmjmnLXx11EtyP3V8yeYNbqP3GoFy1TDpTtPLCqr
49bpPSiUi5B1xudD5yMmXqsQFXpkOyoU8JXC/ZhZfyp2fePEThSQyTwu6Dd8
AWLjtczXy4e2opx/RimvjZur90xLT1cuLh7dhf7tmsEnvbO+JfMSfzpRuuPq
kS3Il9VbUvvXo5bgRYLmgb2wfwNK5PYR3MIFQb+vs+UuVchTcbDt27dPE/Jy
5sz5r5DniKm9NFHpqwl/GLPaNXcc3D39sHTfRZu8NrM+g8QXT3FSMJ7DR/7B
vegYTWx2k8Uv1/4ShKKF8iKnXx60DGyPuuXLIFPGzGjb6yuE3ooyGpPcPH8U
PTo0hm8GH1SuUQftWjVHAV9fFCpVGfNWbTX1W3FFxNkj6NbuE21szY/E2GYI
EGMLl66K39dsV+w87NhBDOzUHBl9CmHfxQeu+t3hpw6gU+t6yCQEnqq166Ft
i6bwz5QJRcrXwOINu801E5NiyUkGgJvE38p2IooW+Bw5tMO8R48eaUTUhC6l
Uaa15udUW+yV4GdTv+2EMlUaYv2hC7akH195TYiMlw6heU0t/IjiwKzNB/UJ
OiMhVuDxyD5sWLcOG7fuRGjEXT1BwxmRN0KxffMGrN+wCfuOyqAZg53euXEF
2zZpv+0/egbP419bVALmpXNnEfU0TpGEHH87/JIYv16OP3DsLGITEi22kpkV
3FV1YMqoAohpgTtL4KYN7oogyM1Hdm2IRfsuGcdR/OPrWLpoHu48SbDY0vu1
GXB0PFb/Hoz8WTxQplITlM2tzWa2AH7PVBZOf40KYhO6l70L5zjWcJbKRPfu
/2LhR3btx62nrwyvgXmRGfQpxzwIx9D2H8HF1Qv9Rs1EdFwsepYrohZqa50K
6QIrchhDNdOySDpW0rbIfDYWpPjX0fVLUSYgF/wKl8eyfWeh/cWgW6lCNrF3
7dq1JKtiVWpdJ7J7VbxGdYz3C1naTp3KW//p4I412Hc2PMmsIi8extETZwzk
Jl+9tnGFwPPiCaZ/3w1erm5o2fMbXI+MMcReKsMmKCggmFUPJRSwyr4UVqtW
5eMr2QkHNkxh8F0qcDCrHoRFUtVD8aHEZ3fwWa8OCIsxdatfNBmTFqxPERSe
OigiTu5D40pF4J7dH1MW75KHkVUftQkK0gPdfuKYMEDBtZCFkZWJQ9teUFBL
Zwwi39S1a9fUQMHwZTqTmKGUHBRO2LtsgqCtTOjQbSATptIzp0dcZvXsQYP6
oWShXAhascPJBkAUwyc/W/HLJOT19kT5hl1xLvyOoZZyh3TXATJny6GUt73G
3lQ88549e+wFCAuGMbciFYCksvONpMcnt/FRMckkLZ666hG8xmoWV2Z/MxxU
aGr03TB83b4efDL7YMiU3xGtKXXOuj8v8XU02uugmLXpkP44evXYLAuqzIel
sw0YKRpVmXETJkyw2Asg1oJ3c9PcCF26dEkjgGLuXsevP/9EdiYWzn+dxL/T
MSMkGA0rFkTQsu22aEU7IylBv8LB9UtQqYimRnpmyox6DT/BR3VqCxDVrl1b
wJHpwnVqV4OXpzbZgiXLo0GD+g6oW7eueOzHH9fD+qOX3gkrJUWz8ZG9sGKU
N1sIpA1WOfWfjq6YjRnz1+nfUgKKI17cOYOAzJqmm0knuunrrY7vTimu0kl2
7eBM6e0Qm7yinQvlKcWeIf9uoY+vheHipRvvXGjcg6vo37Mj2rZrJxZA9cYZ
Hdq1RPYMWqWJwhVqo0OHDmJb8DdHtGndDtuPh74D1RqHK1iwoBTHT5w4YS8Q
WN+AMTLSKtu5839AaFC6EM0O3Utr7SjnbjtqSz5QkiIPKg4LDg622LsAFtB8
zwWkFKWT4gKeo+OHmq1z5sb95rN9wIAB8mxXC1Ct6tq0aWP3AtgDjsjj/Z06
dUrtNPvjjz9sHOypryEWY3s2R5myNbB6/yUzEk6ePCnrS6pitIyaYTEY2jej
o6Mr2LkMnvHvuQwGi9BIlvRQtrWM72wQvpovTbkqcP2vv/6yd75MbqDax9s7
duz4HyB8W5NVR4dq/sBSOfbOlMr2/2qmTkbrNubNibHl7ZysyrnlR7Cz//Jk
6RPNli2bPAUuXLhg72TZNOm/P1kleKuiBEFBQRZ7Z8oGkGqm4nz4r87UyXBT
M1ZIzKScnZNV5e/SNllVq4NS4e2Ia3jw5JlNm5sqmPFKaNexcQnym3IAXDq8
Cz+MHIF1u49ZupgWevXq1SQLpUGEKjOTxS5evGjvQlV/SX7atWtn59mjItke
37uDowd2Yfyob9GowUfIlcUbU1fstLXmjPq1c7tXok3nPjh+45Hha7+04w/k
89RiTCrV+zKJe5ewjBUc90Wc1Tzz9OkzoxqVMqe/TBCc+XlMkntfxmvXqOup
WvmvxDimcz0Xz3z9Bmqo+WhUmrcqdCwAYLEXvqq1airwNR+NrLRrS+d1RuzT
KJw+fgi/TB+HNs0boki+XBZVa3PSstQDzjLo19b+PgV+2Qti8d9njYS9e1cO
o2KAlzHJwMHzCCdNNnNF9P0bCB43HLWqVUMtIdmzmkCjNl2x4e+T1iwj+jYf
Y2yPtuI0K4mW3b/E3acvLVYn2Wsc2LYSbVt8giqVq+Hjj+qgao3a+H7yXDHu
hblO0L4tKxDYnMOqa8Nq1pa5ZveexSkn2KUjO9Hvi95o1rQpOx85IDAwUFxu
0awpuvb4FEPGzsSDmNfWbj9vcPHIJnQMbI7qVSqiVMmSKFa0GMpXqII2nT7F
mu2HEf8KZoMlKxYQaN7JWAEBGh8fX9ZOAmDLQwXbtm3bpkYAjDalLDxq1CgT
ASid9fKJI7h5N0YfqyHvVXwMLp0/hWUL5qBL+zYoW8IfDuksRqiaY3rkzV8A
9Zu2RdDPs3Hl9n2bfEjFxlzevQxeLunQdtgci+psdffmNayZ/zPK+OsFUdN5
oH7Xb3D7UZwuwLsj/MQaoRLmkm6bnoPGYN/BI9i9cwO6NK0BB1dPdP1yKj2t
apvfOLgUGSzWrLmFu89Y2zMJNTtocEvpuy1QuhoWrdqOf/45jNlBI4SekR75
itfGziPXlAeI/twJXzWTTqZCQkD8Y/UOMfwQZk76Dlm9nZG/xEfYfey6sq2/
ePYY508fw5yffkRmd4sKOKjaui/+2n8Y128J/CW+URBPiL6G0v6aHUF1Zypd
9WNMmT4bP373FfJmyoqyjbrhWNgjW54GRUA03qjsxt27d9tLQKrYSyoE9B7B
cBN6NMOybaEak0h8iYhrF7F1zVIM7NoJNSqVRXpnR51shNrs6AAnR6Hd5/gA
o6fMxK69R/DwSYytQBtvY6WJGNlBK1OgKt7fiQjDqoWz0LrJx7LqkQygyOqH
tt0HYOPOE+TQSgN8cP0UKn/gJec7/KcVhj0uIRqd69Dmkg59J+vRHR54GLoX
BTNr0qTFMQO2n7ihc79EzP6hmySGvCU+xrWoWIt61KFV02Rmp2+BOrgS9cJc
rS9kRCd5S75S9RH+0Frgb//yINkhIXPhurj6ME7Z8X/4tKb2Zocs2H7+vuKj
CdHXUbKwn1DHnZEzdwDGzlxMmjeaIl44gnofZINvzgrYd+qWLf+h2oV0uuuq
oMVeYlFRl5KTBwamPcKuZ62yqNW6D0Z88zXq1qqKLBlcjAg732y5UKZiFXw/
YTrmzx0nI+x6TbAZYeeto4yKaOfSmvWsyscN0KF1Y2TRacItQ1bUaNkJvyxe
jdA7Dw1LLacxtJ0G7FzF6iEyVkUmClVNr+nrlvFDnAiPNhpJCXZ//K+VGPvD
WCzfuBuv9fWEHViFjC6O0iH846K9RiMpwWwCK2uhAz2G/q4Qf3nvcng7O8jR
E5YeMEYLXtNSDwTq9e0iRQ8T+2kRGekc/XFYJXs64lboeezddwC370cb5tSo
s3uQw8uCHOVaIjIm0Vamp48+lPn/7DZPI3F4eHgZO+lA0VAa6UCPzou9g8rF
cxvReW6emVC4eBn0GPgtlq5YiyvXIzXxK/4BWn+kZcX7+PmjdZfPsGXfcZkb
mjLTcJVE0b3MB8ZE3Xwyo3qTjpizeAUu34xSoLh3dgty6GVRA4fPU8B8GXUR
RfX42x4/zLfWtn2NEV20eE2XnGVw9u4LI7zrtzFa0x/PPGVxOSpGJ45XGK7H
s6dnyl5UnHrD3JGaJ8srXwWEPnyRQniXYvOyi1V/7adhszbYQq6Sw1RFZoEl
i72YHTx4sAEw8Rx7MasF6N09tQ3ZGCvq7Ib8BQqjdccemD1vsezkEPcq0WCB
eBODb1t+jKw58iJLRk91XlocXVGpfhss2LgPLxJtBuh5G+iw4rjRZ9/j0g3l
hnbCkomf6UtxwvwdJ4zozDdP0aGUZrTyK1NP5nmp4L0Xd0+hmF4RulyDDngB
U3TmH1ONcMuJy7QK0rGRx1Eki5bpVLFxF8SZojMXaA1w+NOUlYdTwK4iwgO/
TdIqf9Zti+evbbZ+yKAPZWtgmpFohXrw4EFpOxHcp0+ff4NgLTrv1qV/MGXK
dOw8+A8eP48zovNCz11itpsc88vojihUvCJC70bj6sWTGPv1Fyjol9kanZfO
BbVbd8eVu09sSo1Wwrei+Lt5O5Tg+OLZE5w9fQKb16/CzJDpCJ4+Q0znJF4a
CdpEdSx6VdHScSxO+fHXmftJAq8n9tEKKFtc2O4h0vCln1wVYjSpatxlqlHh
4pSVUzTsPk6u8vjyYCPDtXkPa+D17eMbkM1dM/Y17jXRFJSSIg1c3DpdBqel
y1OduRdmGggLC0tCA+aSgEFBQYoGqKwrfCsaIF2oXE5FA8rOkowGOFThW9GA
jd4s1ji9RIzv1wcHrkZj/W9jkalAcRy4HKlM/I8iQ/Fb8CiULZrXwHnTfjOg
/9nUJFWIjxnn/X9ej8d3aQD4C3N/mojWzT5BqQ8LGNopozxHz99tTEoG7T0N
R+n82eT9jjnL4+TtF9b2S6Y+S9NW7Vc4XzxlkHG545gV1uQJayetIjWagaGn
iyYPVAvqOn6NsSBr8oS1k1ax2i1lSax3oH7HfK23XTrHgjh6NVrRKK0F/fv3
l0hggSMmi3onS9nk0xhRzRNdILCknuWpJ4rKbypZVE8Uld8ymJJF69evbyyd
6dfi2oemW+hM5rdy8l8feQsDyRjLTfMik96ePHkis4E5K76aTIp2Uq6ADbbY
Dn3+/PmMrxszxuKojBBmslKe3im96qJ0qQrw8sqLubvOKcjFPb2PkG/7SjDV
6hyUMsdIeihk9CuEgBxZdAp0hpO7N/wLlkL3zwdjcJ9uyOxqMaizcr2hhp9V
oeA5c1n1EyFbiTq4+dSKTCOcmwb9H5Zac1mtmcojF+xWlBR9/YjRTiV9/qps
sYXpQ9oaXbkW//0WJT2+ehB+vroYG1BDxpKnQEnWtb9CvzZalQmHLOVwzpBP
tKRV+lJoCBDwyiDdy87STaByHtllm4NL6q5nHgv8nd9q6tcYm8CTht/UM8h1
FEPih+k7RU3jyYH4rTj/Ta/vcl4kAdHmyGRaVsFnqSiG+LBCbkBAgKEUMFiZ
E+Hc+UlqxDAiEz/VdMTvp682YpLW//Q9fHwLYu3RsFTOmaQ8x8M7IwqXLo/e
Q0Zg0bLVOH0lHPGv3ujqrjP2Lp2MAF9vqVC27TXbxN2dZbqVv97MNLX2VC2G
LbCmXb5BUL/Gxk8ptaeSLcMexGNqv0ap5dCa21Ol80s1BVqRzbG1wfB01o4r
vwqN8SAuaVswJYQo2Yp+AfoUaRq+du1aSX3ou4SQDPrrzHXgrORiHa8kEa26
oLv0h/HZnAb9J5wS6xCyQw8rqLKMmaenp7NOLPRZM3qG1TjI0NjVISIiQp1M
qURMju9SGpU7DU2SJ/XqeSTGftkCFQUv330m/H3F0S+C/pRJNuqcu3nlLHbs
2ov7T+MMAeX2P6uRS5cS7Ghl9l1gyXfSimxldv85RgQWf19aeUeKrkpPPiik
o4BMTlbWN3AmN0Bq5EJoCz1RDu/SpYu95GJO7JPgaNnSJrkU0smFuQUMaKED
l10mp02bxppEkhYYkMs0BUG9Grm4y3qlPEKJUXbsYHTTnDlzpEuJfIkOdEGB
SuV6V+Bntyb481CYgfeEJ7ewfs0KPBJ6hq3AT1ty7tBZm1QwrZbfqxdTKJ20
mMKin6zNB1sMWWArv9fUai3hIZsP6pwkO5sPJsnvfbvVmqAOoQTnz6lzkpyV
ZcGZFKjDaIb8OgGX/9mH7/p3QUYH42x1y1YEJyKiDSJOTim++u2seUGjBLfw
xo0bS9hJKRRvWD7jXZSSR6cUHimUmpkhQS+yEKalbEJi5XlGDiKmI+U/wSQy
ZcokQ0mqV68u3TYkhcWLF0txh1SiCWjvRSanDx7D3efWJOd7Ny7hz4W/40To
TWPchUM7cOTcdeOulEnnGdoWyStXPGT2ZkU6zyOssotrvko4Z8LezO+sUnD7
scsM2WWoNbO4Z9BaQ3YRgkjezJoU7OxfHdefsQmpUYejd/CGt0jnceg++OlZ
x+kLaAndKZCOesvr+Gjs3rkVq5b/gVFfDcDH1SuxLZaqe+CY3hMhy7fpg98m
IRXRQXmTT2dlGiGPqgq170tClDRUMIHcWC1a2CShbDoJUewVh4uMtRIUKw3q
dPE1a9ZM1oUlZ3FmjWqN2dCRyvwZBmY0atRIDuUt5FOHDh2SkT/ieFTR0ymW
iXCWRb4Xh4xAwcKF8YUQVEJv3zeYztmNS1AgkysmLttusRVxZ6WcBGxYughL
lq/BjbtPFOUkPr+B0v6a/mTxKYqDV611kKb0twoqwSv3Kcr5Y5qpEepX8xRO
2W8ul94j+MMaTXmwClXrayNxa8jvb1HO3dNbkV0vn1O8dgsIWkudchzx6ul1
VNbajFtUh5RsecpiwRopVFts2cMVuVAWUUXMu3fvbi+5cPtLkdHDI1Vy8dHJ
hfdTS2JYGYs5834imc1S2VSBZVkEm3HRyYUBwPTuMCaarXHIdWbOnCkFMMry
ejdrv3eRiyPWzRgGN2cvTN903DB07F02CzldNItG8OrdtijFSGIX1Da4aSkd
xxmx/ki4xWpLScDA+oUNW8ouw5bijCs7f0cGZ40uPmo1RDrOlUntwjZr37uG
3cZLMri0zdp3vH7gcKtk4Yyzm2Zo2XvUUz+dlJpNRXl9543rpVrnyE/m7H4o
VqEmvp8YgvDIR7YySbLoT+R+Jr/nbUIaKGYnXShDqipY3bx5c5t04arDQom3
1Li3bdsmkcyYKBbMZkVxlhUSvEOxEcahMUGIJRfZEIXizdSpU2VNKZIVdapn
z54VSJkulOk8/nEYyuX0QpnAYQbSls0eiwqVa6Nr+4aKNmyyEZUnvXrOcAPM
o//4SyGMlQIrFNCymPJVaokHCdY86ZdPr6FUfq02TN5KjXE/3koXy2eodnpO
mLbhhKSLhCehKJ5H64PsX60ZHiYYptYlPw3VEeyM6VtOp2BqVQVNn946ijw+
jihRpQU2iV0Uev0OXr0xanGYzW1Z9SfNnz9fPokR5Hv27DHby1IjBR/9jaon
Bk8Vml/5vzgdtMd4yVIz5j/aU3gK8CBi/AzPM5bZokrMkgislavYg7e3twzu
JZWxLyaLRrIw8fbt22WkgT4dNWMb1jxFBneOrZONzGsN/s1izWiMQcjI3ihc
pjJO3ojCqqkD3oMcxNl/7RAKZdDsFrXaj5IbVbm5bh1djSxuGssZMHmVucl4
cL9mGh5d82D3uSiLtf/fKwxtpaU2ZQyogYhHL3VQJSKoj34aueXD3ksPjUOE
LOnrZpqa5FuoDm49eWUkOgcNbP42Yegelj4NkNG/MiITkrQFpBFu8+bN+pnv
JCu4WXTD27lz5z60kyBIXzwvmIrJx/NRgiAK6+TP4TSwUShl5zuKB9R2O3To
ILVdpucLUlRCKcP2eYmNbT777DNMmjQJK1askLfylGHjvNL6xHnavB0EpIIF
bx1Zg2yCV+ct0xiRz6GSk5/eD0PfxtVQvNwnOHdL9nfConG9Uzs1FCUQRTMG
aaKmR+7iOHs/xqCEX4Z21dATUBOhD14oBSLq0kEU1Bve95ywSI1+Fn4MBTO5
S57wzcwNyoV07/w++PtqYmbvoKVGK4qwI/DP4CpZwvdzN5vTrDcunYc5S9Yi
LPQCejUpY6YEJXffO7ULmZ3Soev3M8X9x48fF9eOnziH2JdvjHUpXkF+zRQO
1SyeETaq7SPLq4WGhlqK2EkfqvQrsbR8+XJFH/l0+qD9i7dR42DOFHVVHjfq
qCCTcHFxUUcF/bwkVGYHMr+fpwrrnAqClr1fqSXHxMRU0kHHyVAtoikwOYl4
IDbyNErlIBrSoVaTz7D/5CXBwB7iauhFLPxpAgr5+6H8R1/g1oM4I7TIRCs2
2UYhHXTxj8JQr7jmL2/ebTLiTNUTrp/ahoI+zkjn7IZfVh9VFLtuumYkcc9Y
BDv/iVT2OXHyYHSPRvKnyg264fELq29/1TTN0O/hWxR7jt8zbkmMxYguWmex
qo0+RXScFc93Lp7Gj4M/RYXCua0twjWSUZwSmob2Gt+3rZNEDKU9atKSQ2/R
jRI3suu/8BRQVbB5qAtF2Gjc9C668dZnQWOFUp7ZSFbRDpsT5dCJh8/h80g8
PF0YdskmKFRXmGBF3cTBwcFZZy58HOVPNmYhfTEifeHChVLjpaFfiLKWOvqU
UhQy3CUfWPBjX6ss5uCBgAL+8EhPCDmg8+DJeBQPpeQunagVLpu2apdNitE4
pRvuXDmGVtW1PVy7cUes2bQFv44bgXy+bjIWKHjBKl3+dZcC7Jyxg5HZxw2u
nvkwcfpcbF67HN3raL07PmreHtcfPTNCvxLjMWv01/D1doWblz8mh/yCTWuW
oUstzbhet2VH3Hz8XIkzty6dxbgv+yB3JoYZZcN+cRYp6TL0wEqk18RcgywK
Ve+EZ1o5AWOFZrLIoT+X8r3qEcV6dIKp66t/N1l46VyPFlNV76x3797ypSpw
VJCGrw5MKrIUGyk+Mj3qm2++YXqUjHOns1mILfr0PWSeJc8cUmzPnj1lYBCp
jWcOfT18Fv/Y1rV+yuThpbbPqxgsmjISpT8ohOzZsiFHrtyoUrs+/tx00Ni3
7OA4tK2WARiy4YAtsvhAf9ybhKfYvGYJvvqiG9q0boM2gR3xw+QQnA+P1OXz
9Ai7eALTJ49C+zYtERjYFj36fI2VW/5CXKKSUdMj9MJx/DxppDGm5+eDsHrr
Xhl5ouTF25dP4IfvfsDZCKsbm9UM1q1aRiiKb2K7iOkvXLgIixfMRatPqmPT
8XBbrEBLmHKRjjXVYZBm7ODgYKoLBd8T7R46BXN70rpA/i9VpsaNDbwo9Ddp
0kRRCW3srPZEMxijSinz0DPIQ0xIG4ohUCEl5skraL+gdEqlw2S7MOxX7xlU
oLygcTHRiLhxA5H3H1JkNES5xBdYOHkgPm7QHgtWbsaDZ/E2mcJg/Vr80weI
evwsxa2VSwczAydV7DU/n3/+Of2YSmV6F5iVF4uPoSYeEhIiNTGVRcn/eSqL
342TUBkLBNiNxFC6V/fu3YspU6YwhFv6RQTXddLhzcQNnt40JVEAJPyYfUA0
cbey/YiPaXrvAe9sikxfx+Pa1XBZn0ZZUth+hKaplBIg/PRZk1rYe0QZWylc
bN26NSAV4NGKr//pAEkvQ+QpDVMOoe2VOgxPP/IaddIyfYUuQaEPGfhU9Cto
2rBCcOVU2idPniwJV6jHuvswvZS0qSPRykJA01BH/YjHV1b7oKdSRWgD1vv6
2IRUHh1SRJRqsUWXGYU6cbir7ndmSNXQtyJ9FxTs2D6IuifJiLuXiBFbUcVf
U4+kNZpeMAJE3GbgkQtUADL3AmYWAA3bQkRQMcdkMfSKUDVlRAH5v4CFXxrA
4kBkWhzVb/KX4SbY8Gjgt7w6+umo4bNUrjr/Z1WACxcuGF1qzQCqoO85s4bE
6XJVlFc7d+4sbXlZsmTRj6r0MlaKG4gWNG5xLpGCEttzKoZNaYbvFwzNCGkm
3pRAxg+dRmQXPOaoVgmYGLRgC0Y2dG1zRyalUubXcU7HB0mD9mG+jhuL+52a
vNglfjagoTlHPKQ+QGhwVlwZ2TFtQXwFxToSPt1ngiPpUHGVtENWTjbOcCD6
3XnfsWPH+CxNonQ3SjKQ0/OPop86T3gKUI+4c+dOARtwUGkHZgOnVZ8wd82i
KEpoKuZBwwe74gnCNGLoSfosW8VjRmAuhw1wFNRBrRrVkTtStyEE+RpOgrJK
w4YNJb1TTRJrUaYUbgNKWNyrypTCzUfWxFRIFrQUr/LV8aUy46hRKaeVrqfx
7YVSgQjjHkjBSTUsW93N1JHP7xxdtGhRi9r9NBQTStz5VELF0WXUXDGDRTvu
vKSdm1TCQ5rnFc8cmgloXRg2bJgkNlqp+FwaGwn99DpsuDhKkAQbF8g9Sqlk
zZo1Ei7c1+L9ivkQ+irmLJO+1RncoaQQHnPS5iswwWaGhW0AKxVWYwtShXXY
8kAhakj7QnJx1E9RMgH6g/h2yrVkGEQqJ05xi+XrlePOZI/Tr2WQW4wxTpwh
AUjZiluNtMViIgQij0PaX6j9k3FQLuG2E8Bz1cVmmutIdjxlaeznhudtZAgM
l6LSxuPw8ePHxnTMMocGTBfZVE3xJFqCWf5FTOuDfw/HD/U3MPuYAOLCSOKM
sHB2dtbOUx9pCeVmIWvhWUu4sokipUE2CCRM1q9fL/kHGSkXxm1NW4rMwhen
LmHHV/A6/6fuwPE8uqiZktfwWZQLOHvaQIXgJAmQ4jEZPYUl4pWAIJGKA1aD
tbc8a3mJvJ/9oXhWU50hZbDvJlUcvoq8n5yTRCvgnDVFsDsbYFcfVusp8u9h
XkJnKRTOKZQw1I+7nU5o8mcSkQC4DFkWtEj+y7gbEhKFcw6hbZgbmPI+NXqa
hLg59+zZQ2hLouLmT0hIyPeeC+SWESj8TyxQy2r0kTuN13hk099JSYwHD3ck
pQ+ugNitW7euFK/Iirk6gWVBNULEFFuIBwGxTnmYxi5SAceTAhn4ziOaxzwL
1TjoXWB5FPPYZ0AHZSpSHOMlWciDaGcVzGKpgEVl+0prpdB8IyIi/g1YSG0w
nQe8ncP5KMG1a73nTMhfaHlMbSbvKYSo4bYCiN+ehpPcqspHLpj5hzZm8P7H
PzHB2EA1iXcpXmoS5roWgommOAkHKVw4quP2XcRq7zSoM6siKUJvtjUNO7dL
WmagtE6xY/8fZkAZgPTAj2Dl/w8zoJRGVZkcXgik//MZaDoEVVXBZm06ev8H
r2cBP3YC+hevV6Vi/x9eb4shve/rKUtQuGJvpNRyoN/NjSjLmyesiwVJZsCT
NPkM6LUlWxSSojEDjkvGirSQ6PekAWU24rnFYH5+U6cDpSPOzTwv3qtb+Ixx
9AZTejVfo8qgXq/eYeeUaCFMWm/GUTqUGIDHbypKllItEWG+xpR3vUeYcS+v
EVzmcRQNkj+PEopuSDLupbBJ8JvH8RoFdvM1Cv1UDs3XuGxd4Deex3HUI8zj
SDjUoJJfo03FfC9BS9uYeRxj1dU4d9M4etnM9xKliqzc33FNkZW6lxmZ6tp7
olSV9ncwPVY1sDZHQ9AaZX49KSo5Wrh3GedvvpcyKAUK8zhKfJQCzdfoO0iO
UgroydHHa4q6zSRCA6z5GnUQqi/m57HOvEKBsiESXIo0leOJsrPaLe6ma4oH
qedRrkqOFs5PgdvdNE7/M+4lWtQ19/e8pu7letU1hbdUWn8TBRSUhToqhvNf
R2m2odrGbx42rrmbrlEAN1+jFqiueZiuURA3j6OtgB7DlK55mK7RLpd83Ptc
o42COp35eeZrTvo1rouqklAoxDfrOCoYyZ+nrpmfRwUj+bjUrpnvpecu+Thb
12guSH6vuqbwxug/hXqVjZnu/wChsrrG\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Setting up the dipole-dipole scattering problem for the Fortran code\
\>", "Subsection",
 CellChangeTimes->{{3.765031901879681*^9, 3.765031926733202*^9}, {
  3.765453202047854*^9, 3.7654532205979958`*^9}}],

Cell["\<\
We wish to set up the calculation presented in the Bohn et al 2009 NJP \
article.  The Schrodinger equation\
\>", "Text",
 CellChangeTimes->{{3.765453227951151*^9, 3.765453274519288*^9}, {
  3.765453370247505*^9, 3.765453378945073*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox["\[HBar]", "2"]}], 
        RowBox[{"2", "M"}]], 
       RowBox[{
        SuperscriptBox["\[Del]", "2"], 
        RowBox[{"+", " ", 
         RowBox[{"\[LeftAngleBracket]", 
          SubscriptBox["\[Mu]", "1"], "\[RightAngleBracket]"}]}]}], 
       RowBox[{"\[LeftAngleBracket]", 
        SubscriptBox["\[Mu]", "2"], "\[RightAngleBracket]"}], 
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"3", 
          SuperscriptBox["cos", "2"], "\[Theta]"}]}], 
        SuperscriptBox["R", "3"]]}], "+", 
      RowBox[{
       SubscriptBox["V", "SR"], "(", "R", ")"}]}], ")"}], 
    RowBox[{"\[CapitalPsi]", "(", 
     RowBox[{"R", ",", "\[Theta]", ",", "\[Phi]"}], ")"}]}], "=", 
   RowBox[{"E", " ", 
    RowBox[{"\[CapitalPsi]", "(", 
     RowBox[{"R", ",", "\[Theta]", ",", "\[Phi]"}], ")"}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765453388039723*^9, 3.765453497437685*^9}, 
   3.76545352811826*^9}],

Cell["The dipole-dipole interaction is ", "Text",
 CellChangeTimes->{{3.7654535321466637`*^9, 3.765453539405323*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["V", "d"], "(", 
    StyleBox["R",
     FontWeight->"Bold"], ")"}], "=", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     SubscriptBox["\[Mu]", "1"], "\[RightAngleBracket]"}], 
    RowBox[{"\[LeftAngleBracket]", 
     SubscriptBox["\[Mu]", "2"], "\[RightAngleBracket]"}], 
    FractionBox[
     RowBox[{"1", "-", 
      RowBox[{"3", 
       SuperscriptBox["cos", "2"], "\[Theta]"}]}], 
     SuperscriptBox["R", "3"]]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765453540805958*^9, 3.7654535566774187`*^9}}],

Cell[TextData[{
 "As pointed out in the Bohn et al paper, this Hamiltonian is an excellent \
approximation to the long-range part of the interaction where the \
dipole-dipole interaction dominates.  The orientations of the dipoles are \
only relevant when the dipole interaction scale becomes of order the stark \
splitting that locks the dipoles to a lab axis.: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SuperscriptBox["\[Mu]", "2"], 
     SuperscriptBox["R", "3"]], "\[TildeTilde]", 
    RowBox[{"\[Mu]", " ", "\[ScriptCapitalE]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]\[ScriptCapitalE]", "\[GreaterGreater]", 
    FractionBox[
     SuperscriptBox["\[Mu]", "2"], 
     SuperscriptBox["R", "3"]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", then the dipoles will remained locked to the lab axis and the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "d"], 
    RowBox[{"(", 
     StyleBox["R",
      FontWeight->"Bold"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is sufficient to describe their long-range interaction.  If   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SuperscriptBox["\[Mu]", "2"], 
     SuperscriptBox["R", "3"]], "\[GreaterGreater]", 
    "\[Mu]\[ScriptCapitalE]"}], TraditionalForm]]],
 " then the dipoles are able to reorient with respect to the lab frame and \
one would have to include their orientations explicitly in the Hamiltonian"
}], "Text",
 CellChangeTimes->{{3.765453680126952*^9, 3.7654540629879513`*^9}}],

Cell["The matrix elements we require are:", "Text",
 CellChangeTimes->{{3.765453227951151*^9, 3.765453274519288*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[{RowBox[{"l", ",", " ", "m"}]},
      "Bra"], "1"}], "-", 
    RowBox[{"3", 
     SuperscriptBox["cos", "2"], "\[Theta]", 
     TemplateBox[{RowBox[{
         RowBox[{"l", "'"}], ",", 
         RowBox[{"m", "'"}]}]},
      "Ket"]}]}], "=", 
   RowBox[{
    RowBox[{"-", "2"}], 
    TemplateBox[{RowBox[{"l", ",", " ", "m"}]},
     "Bra"], 
    SubscriptBox["C", "20"], 
    TemplateBox[{RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]},
     "Ket"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765453288765554*^9, 3.765453331041315*^9}, {
   3.765454162830958*^9, 3.765454168634387*^9}, 3.765462724810557*^9, {
   3.765462778187477*^9, 3.765462797962262*^9}}],

Cell["with", "Text",
 CellChangeTimes->{{3.765462802948125*^9, 3.765462803337913*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["C", "20"], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"3", 
      SuperscriptBox["cos", "2"], "\[Theta]"}], "-", "1"}], "2"]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765462809348238*^9, 3.76546282283464*^9}}],

Cell[TextData[{
 "Here, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", 
     RowBox[{"k", ",", "q"}]], "=", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"4", "\[Pi]"}], 
       RowBox[{
        RowBox[{"2", "k"}], "+", "1"}]]], 
     RowBox[{
      SubscriptBox["Y", 
       RowBox[{"k", ",", "q"}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the \[OpenCurlyDoubleQuote]reduced spherical harmonic\
\[CloseCurlyDoubleQuote] defined by Racah.  (See Edmonds, ",
 StyleBox["Angular Momentum",
  FontSlant->"Italic"],
 ", page 25)"
}], "Text",
 CellChangeTimes->{{3.7655345173444767`*^9, 3.7655345858297777`*^9}, {
  3.765534636629479*^9, 3.765534658868142*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{"4", "\[Pi]"}], 
     RowBox[{
      RowBox[{"2", "k"}], "+", "1"}]]], 
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"k", ",", "q", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"k", "\[Rule]", "2"}], ",", 
    RowBox[{"q", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.765493389220263*^9, 3.765493405919035*^9}, {
  3.765534589203044*^9, 3.7655346183702993`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.765493406783043*^9, 3.765534619171248*^9}]
}, Open  ]],

Cell["Using the \[OpenCurlyDoubleQuote]Gaunt coefficient\
\[CloseCurlyDoubleQuote] (See notes by Paul Wormer)", "Text",
 CellChangeTimes->{{3.765547440199861*^9, 3.76554746322497*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    TemplateBox[{RowBox[{"l", ",", " ", "m"}]},
     "Bra"], 
    RowBox[{
     SubscriptBox["Y", 
      RowBox[{"k", ",", "q"}]], "(", 
     RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
    TemplateBox[{RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]},
     "Ket"]}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "m"], 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "l"}], "+", "1"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "k"}], "+", "1"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"l", "'"}]}], "+", "1"}], ")"}]}], 
       RowBox[{"4", "\[Pi]"}]], ")"}], 
     RowBox[{"1", "/", "2"}]], 
    RowBox[{"(", GridBox[{
       {"l", "k", 
        RowBox[{"l", "'"}]},
       {"0", "0", "0"}
      }], ")"}], 
    RowBox[{"(", GridBox[{
       {"l", "k", 
        RowBox[{"l", "'"}]},
       {
        RowBox[{"-", "m"}], "0", "m"}
      }], ")"}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765547418927287*^9, 3.765547438307876*^9}, {
  3.7655474726728992`*^9, 3.765547571747438*^9}}],

Cell["we have that", "Text",
 CellChangeTimes->{{3.7655475813533173`*^9, 3.765547582718169*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], 
    TemplateBox[{RowBox[{"l", ",", " ", "m"}]},
     "Bra"], 
    SubscriptBox["C", "20"], 
    TemplateBox[{RowBox[{
        RowBox[{"l", "'"}], ",", 
        RowBox[{"m", "'"}]}]},
     "Ket"]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], 
     SqrtBox[
      FractionBox[
       RowBox[{"4", "\[Pi]"}], "5"]], 
     TemplateBox[{RowBox[{"l", ",", " ", "m"}]},
      "Bra"], 
     RowBox[{
      SubscriptBox["Y", 
       RowBox[{"2", ",", "0"}]], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
     TemplateBox[{RowBox[{
         RowBox[{"l", "'"}], ",", 
         RowBox[{"m", "'"}]}]},
      "Ket"]}], "=", 
    RowBox[{
     RowBox[{"-", "2"}], 
     SqrtBox[
      FractionBox[
       RowBox[{"4", "\[Pi]"}], "5"]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "m"], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{"(", "5", ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"l", "'"}]}], "+", "1"}], ")"}]}], 
        RowBox[{"4", "\[Pi]"}]], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"(", GridBox[{
        {"l", "2", 
         RowBox[{"l", "'"}]},
        {"0", "0", "0"}
       }], ")"}], 
     RowBox[{"(", GridBox[{
        {"l", "2", 
         RowBox[{"l", "'"}]},
        {
         RowBox[{"-", "m"}], "0", "m"}
       }], ")"}]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765547597356371*^9, 3.765547659738983*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubsuperscriptBox["C", 
    RowBox[{"l", ",", 
     RowBox[{"l", "'"}]}], 
    RowBox[{"(", "m", ")"}]], "=", 
   RowBox[{
    RowBox[{
     TemplateBox[{RowBox[{"l", ",", " ", "m"}]},
      "Bra"], 
     SubscriptBox["C", "20"], 
     TemplateBox[{RowBox[{
         RowBox[{"l", "'"}], ",", 
         RowBox[{"m", "'"}]}]},
      "Ket"]}], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "m"], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"l", "'"}]}], "+", "1"}], ")"}]}]], 
     RowBox[{"(", GridBox[{
        {"l", "2", 
         RowBox[{"l", "'"}]},
        {"0", "0", "0"}
       }], ")"}], 
     RowBox[{"(", GridBox[{
        {"l", "2", 
         RowBox[{"l", "'"}]},
        {
         RowBox[{"-", "m"}], "0", "m"}
       }], ")"}]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.76554767192348*^9, 3.765547703761282*^9}, {
  3.7655477695944653`*^9, 3.765547772039667*^9}, {3.765547939828566*^9, 
  3.765547940075577*^9}}],

Cell["We must solve the coupled channels problem:", "Text",
 CellChangeTimes->{{3.76554779854065*^9, 3.765547809115613*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], "2"], 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[DifferentialD]", "2"], 
       SubscriptBox["F", 
        RowBox[{"l", ",", "m"}]]}], 
      RowBox[{"\[DifferentialD]", 
       SuperscriptBox["r", "2"]}]]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"l", "(", 
       RowBox[{"l", "+", "1"}], ")"}], 
      RowBox[{"2", 
       SuperscriptBox["r", "2"]}]], 
     SubscriptBox["F", 
      RowBox[{"l", ",", "m"}]]}], "-", 
    RowBox[{
     FractionBox["2", 
      SuperscriptBox["r", "3"]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"l", "'"}]], 
      RowBox[{
       SubsuperscriptBox["C", 
        RowBox[{"l", ",", 
         RowBox[{"l", "'"}]}], 
        RowBox[{"(", "m", ")"}]], 
       SubscriptBox["F", 
        RowBox[{
         RowBox[{"l", "'"}], ",", "m"}]]}]}]}]}], "=", 
   RowBox[{"\[Epsilon]", " ", 
    SubscriptBox["F", 
     RowBox[{"l", ",", "m"}]]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.765547812093207*^9, 3.7655478544896793`*^9}, {
  3.765547902859702*^9, 3.76554796069555*^9}}],

Cell[TextData[{
 "Here we use the unitless variables ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", 
    RowBox[{"R", "/", "D"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", "=", 
    RowBox[{"E", "/", 
     SubscriptBox["E", "D"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "D"], "=", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[HBar]", "6"], 
      RowBox[{
       SuperscriptBox["M", "3"], 
       SuperscriptBox[
        RowBox[{"\[LeftAngleBracket]", 
         SubscriptBox["\[Mu]", "1"], "\[RightAngleBracket]"}], "2"], 
       SuperscriptBox[
        RowBox[{"\[LeftAngleBracket]", 
         SubscriptBox["\[Mu]", "2"], "\[RightAngleBracket]"}], "2"]}]], 
     "."}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.765547964980774*^9, 3.765548006018177*^9}, {
  3.765548048157308*^9, 3.76554810880272*^9}}],

Cell["Note that", "Text",
 CellChangeTimes->{{3.765551756518696*^9, 3.7655517573756742`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", GridBox[{
      {"l", "2", 
       RowBox[{"l", "'"}]},
      {
       RowBox[{"-", "m"}], "0", "m"}
     }], ")"}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"l", "+", 
      RowBox[{"l", "'"}], "+", "2"}]], 
    RowBox[{"(", GridBox[{
       {"l", "2", 
        RowBox[{"l", "'"}]},
       {"m", "0", 
        RowBox[{"-", "m"}]}
      }], ")"}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7655517588114567`*^9, 3.76555177434315*^9}}],

Cell["but", "Text",
 CellChangeTimes->{{3.765551793047043*^9, 3.765551793252252*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", GridBox[{
      {"l", "2", 
       RowBox[{"l", "'"}]},
      {"0", "0", "0"}
     }], ")"}], 
   RowBox[{"(", GridBox[{
      {"l", "2", 
       RowBox[{"l", "'"}]},
      {
       RowBox[{"-", "m"}], "0", "m"}
     }], ")"}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{3.7655517976288633`*^9}],

Cell[TextData[{
 "vanishes unless ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"l", "'"}], "=", "l"}], ",", " ", 
    RowBox[{"l", "\[PlusMinus]", "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  Even and odd partial waves do not couple to each other"
}], "Text",
 CellChangeTimes->{{3.765551806848193*^9, 3.7655518374023647`*^9}, {
  3.765551873998672*^9, 3.765551896685163*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1274, 795},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>2. Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{$RootDirectory, "Users", "mehtan", "Documents", 
        "MathematicaDocs"}, "NPMStyleSheet-V2.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Equation"]], 
   Cell[
    StyleData["EquationNumbered"]]}, Visible -> False, FrontEndVersion -> 
  "11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 21, 2016)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "psi-expand"->{
  Cell[3067, 93, 681, 24, 85, "EquationNumbered",
   CellTags->"psi-expand"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"psi-expand", 1734356, 37423}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 167, 3, 128, "Title"],
Cell[592, 20, 137, 3, 52, "Subtitle"],
Cell[CellGroupData[{
Cell[754, 27, 150, 3, 81, "Author"],
Cell[907, 32, 168, 3, 24, "Institution"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1112, 40, 145, 3, 94, "Section"],
Cell[1260, 45, 573, 10, 100, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1870, 60, 216, 4, 94, "Section"],
Cell[CellGroupData[{
Cell[2111, 68, 187, 3, 62, "Subsection"],
Cell[2301, 73, 763, 18, 130, "Text"],
Cell[3067, 93, 681, 24, 85, "EquationNumbered",
 CellTags->"psi-expand"],
Cell[3751, 119, 821, 20, 43, "Text"],
Cell[4575, 141, 773, 21, 56, "EquationNumbered"],
Cell[5351, 164, 508, 16, 46, "Text"],
Cell[5862, 182, 1081, 39, 96, "EquationNumbered"],
Cell[6946, 223, 886, 24, 43, "Text"],
Cell[7835, 249, 1455, 42, 114, "EquationNumbered"],
Cell[9293, 293, 2261, 62, 152, "Text"],
Cell[11557, 357, 369, 12, 48, "Text"],
Cell[11929, 371, 1650, 48, 132, "EquationNumbered"],
Cell[13582, 421, 891, 29, 76, "Text"],
Cell[14476, 452, 1600, 48, 114, "EquationNumbered"],
Cell[16079, 502, 265, 5, 52, "Text"],
Cell[16347, 509, 2250, 63, 142, "EquationNumbered"],
Cell[18600, 574, 706, 22, 132, "EquationNumbered"],
Cell[19309, 598, 536, 18, 58, "Text"],
Cell[19848, 618, 636, 20, 61, "EquationNumbered"],
Cell[20487, 640, 1236, 37, 112, "EquationNumbered"],
Cell[21726, 679, 701, 22, 106, "EquationNumbered"],
Cell[22430, 703, 140, 3, 41, "Text"],
Cell[22573, 708, 691, 22, 95, "EquationNumbered"],
Cell[23267, 732, 301, 10, 48, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23605, 747, 188, 3, 62, "Subsection"],
Cell[23796, 752, 682, 10, 41, "Text"],
Cell[24481, 764, 1433, 50, 104, "EquationNumbered"],
Cell[25917, 816, 645, 22, 46, "Text"],
Cell[26565, 840, 1368, 48, 104, "EquationNumbered"],
Cell[27936, 890, 481, 14, 48, "Text"],
Cell[28420, 906, 1183, 41, 104, "EquationNumbered"],
Cell[29606, 949, 731, 24, 49, "Text"],
Cell[30340, 975, 888, 31, 80, "EquationNumbered"],
Cell[31231, 1008, 189, 3, 41, "Text"],
Cell[31423, 1013, 823, 28, 108, "EquationNumbered"],
Cell[32249, 1043, 2499, 88, 105, "Text"],
Cell[34751, 1133, 2117, 69, 108, "EquationNumbered"],
Cell[36871, 1204, 2359, 75, 109, "EquationNumbered"],
Cell[39233, 1281, 423, 14, 43, "Text"],
Cell[39659, 1297, 1774, 58, 109, "EquationNumbered"],
Cell[41436, 1357, 151, 3, 41, "Text"],
Cell[41590, 1362, 1916, 62, 80, "EquationNumbered"],
Cell[43509, 1426, 1377, 42, 80, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44923, 1473, 179, 3, 62, "Subsection"],
Cell[45105, 1478, 244, 6, 41, "Text"],
Cell[45352, 1486, 480, 15, 66, "EquationNumbered"],
Cell[45835, 1503, 155, 3, 41, "Text"],
Cell[45993, 1508, 941, 31, 96, "EquationNumbered"],
Cell[46937, 1541, 918, 31, 96, "EquationNumbered"],
Cell[47858, 1574, 174, 3, 41, "Text"],
Cell[48035, 1579, 3698, 100, 143, "EquationNumbered"],
Cell[51736, 1681, 514, 15, 43, "Text"],
Cell[52253, 1698, 5398, 138, 130, "EquationNumbered"],
Cell[57654, 1838, 680, 21, 51, "Text"],
Cell[58337, 1861, 866, 29, 96, "EquationNumbered"],
Cell[59206, 1892, 5246, 140, 178, "EquationNumbered"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64489, 2037, 358, 12, 62, "Subsection"],
Cell[64850, 2051, 985, 34, 84, "Text"],
Cell[65838, 2087, 1016, 30, 100, "EquationNumbered"],
Cell[66857, 2119, 274, 7, 41, "Text"],
Cell[67134, 2128, 909, 30, 92, "EquationNumbered"],
Cell[68046, 2160, 310, 11, 43, "Text"],
Cell[68359, 2173, 815, 28, 80, "EquationNumbered"],
Cell[69177, 2203, 376, 11, 43, "Text"],
Cell[69556, 2216, 1267, 43, 90, "EquationNumbered"],
Cell[70826, 2261, 1320, 44, 90, "EquationNumbered"],
Cell[72149, 2307, 1321, 45, 90, "EquationNumbered"],
Cell[73473, 2354, 153, 3, 41, "Text"],
Cell[73629, 2359, 1112, 40, 80, "EquationNumbered"],
Cell[74744, 2401, 272, 7, 41, "Text"],
Cell[75019, 2410, 1305, 43, 108, "EquationNumbered"],
Cell[76327, 2455, 166, 3, 41, "Text"],
Cell[76496, 2460, 3567, 113, 127, "EquationNumbered"],
Cell[80066, 2575, 2019, 69, 108, "EquationNumbered"],
Cell[82088, 2646, 1266, 48, 60, "Text"],
Cell[83357, 2696, 161, 3, 41, "Text"],
Cell[83521, 2701, 1816, 64, 80, "EquationNumbered"],
Cell[85340, 2767, 262, 6, 41, "Text"],
Cell[85605, 2775, 982, 34, 104, "EquationNumbered"],
Cell[86590, 2811, 192, 4, 41, "Text"],
Cell[86785, 2817, 1303, 46, 88, "EquationNumbered"],
Cell[88091, 2865, 142, 3, 41, "Text"],
Cell[88236, 2870, 663, 21, 88, "EquationNumbered"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88936, 2896, 154, 3, 62, "Subsection"],
Cell[89093, 2901, 353, 8, 41, "Text"],
Cell[89449, 2911, 616, 19, 80, "EquationNumbered"],
Cell[90068, 2932, 290, 8, 41, "Text"],
Cell[90361, 2942, 583, 19, 79, "EquationNumbered"],
Cell[90947, 2963, 1400, 47, 112, "Text"],
Cell[92350, 3012, 645, 22, 91, "EquationNumbered"],
Cell[92998, 3036, 866, 28, 66, "Text"],
Cell[93867, 3066, 153, 3, 40, "Text"],
Cell[94023, 3071, 134, 3, 40, "Text"],
Cell[94160, 3076, 1090, 36, 79, "EquationNumbered"],
Cell[95253, 3114, 243, 8, 40, "Text"],
Cell[95499, 3124, 13497, 358, 530, "EquationNumbered"],
Cell[108999, 3484, 1714, 63, 63, "Text"],
Cell[CellGroupData[{
Cell[110738, 3551, 177, 3, 46, "Subsubsection"],
Cell[110918, 3556, 1353, 51, 73, "Text"],
Cell[112274, 3609, 524, 18, 56, "EquationNumbered"],
Cell[112801, 3629, 519, 18, 56, "EquationNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113369, 3653, 397, 10, 62, "Subsection"],
Cell[113769, 3665, 177, 3, 40, "Text"],
Cell[113949, 3670, 1701, 57, 104, "EquationNumbered"],
Cell[115653, 3729, 1404, 41, 100, "Text"],
Cell[117060, 3772, 1407, 45, 67, "EquationNumbered"],
Cell[118470, 3819, 848, 24, 55, "Text"],
Cell[119321, 3845, 414, 15, 52, "EquationNumbered"],
Cell[119738, 3862, 317, 7, 40, "Text"],
Cell[120058, 3871, 1473, 47, 67, "EquationNumbered"],
Cell[121534, 3920, 734, 16, 40, "Text"],
Cell[122271, 3938, 484, 18, 54, "EquationNumbered"],
Cell[122758, 3958, 238, 8, 40, "Text"],
Cell[122999, 3968, 1205, 43, 52, "EquationNumbered"],
Cell[124207, 4013, 1432, 52, 61, "EquationNumbered"],
Cell[125642, 4067, 1273, 39, 87, "EquationNumbered"],
Cell[126918, 4108, 141, 3, 40, "Text"],
Cell[127062, 4113, 496, 17, 52, "EquationNumbered"],
Cell[127561, 4132, 134, 3, 40, "Text"],
Cell[127698, 4137, 526, 19, 83, "EquationNumbered"],
Cell[128227, 4158, 244, 6, 40, "Text"],
Cell[128474, 4166, 1290, 44, 67, "EquationNumbered"],
Cell[129767, 4212, 157, 3, 40, "Text"],
Cell[129927, 4217, 2269, 84, 61, "EquationNumbered"],
Cell[132199, 4303, 139, 3, 40, "Text"],
Cell[132341, 4308, 483, 17, 52, "EquationNumbered"],
Cell[132827, 4327, 135, 3, 40, "Text"],
Cell[132965, 4332, 452, 16, 82, "EquationNumbered"],
Cell[133420, 4350, 152, 3, 40, "Text"],
Cell[133575, 4355, 559, 20, 83, "EquationNumbered"],
Cell[134137, 4377, 131, 3, 40, "Text"],
Cell[134271, 4382, 404, 14, 83, "EquationNumbered"],
Cell[CellGroupData[{
Cell[134700, 4400, 318, 10, 46, "Subsubsection"],
Cell[135021, 4412, 339, 10, 40, "Text"],
Cell[135363, 4424, 240, 4, 40, "Text"],
Cell[135606, 4430, 1314, 40, 109, "EquationNumbered"],
Cell[136923, 4472, 131, 3, 40, "Text"],
Cell[137057, 4477, 834, 26, 92, "EquationNumbered"],
Cell[137894, 4505, 209, 4, 40, "Text"],
Cell[138106, 4511, 769, 24, 85, "EquationNumbered"],
Cell[138878, 4537, 647, 19, 70, "Text"],
Cell[139528, 4558, 1612, 51, 153, "EquationNumbered"],
Cell[141143, 4611, 1019, 34, 118, "EquationNumbered"],
Cell[142165, 4647, 1373, 44, 118, "EquationNumbered"],
Cell[143541, 4693, 439, 17, 84, "Text"],
Cell[143983, 4712, 1431, 48, 118, "EquationNumbered"],
Cell[145417, 4762, 1272, 40, 103, "EquationNumbered"],
Cell[146692, 4804, 183, 3, 40, "Text"],
Cell[146878, 4809, 808, 26, 92, "EquationNumbered"],
Cell[147689, 4837, 1772, 56, 106, "EquationNumbered"],
Cell[149464, 4895, 277, 10, 43, "Text"],
Cell[149744, 4907, 816, 28, 99, "EquationNumbered"],
Cell[150563, 4937, 383, 11, 43, "Text"],
Cell[150949, 4950, 1302, 45, 67, "EquationNumbered"],
Cell[152254, 4997, 383, 9, 45, "Text"],
Cell[152640, 5008, 2227, 66, 108, "EquationNumbered"],
Cell[154870, 5076, 390, 12, 48, "Text"],
Cell[155263, 5090, 2419, 74, 108, "EquationNumbered"],
Cell[157685, 5166, 124, 1, 40, "Text"],
Cell[157812, 5169, 2760, 82, 146, "EquationNumbered"],
Cell[160575, 5253, 3316, 105, 199, "EquationNumbered"],
Cell[163894, 5360, 2912, 92, 196, "EquationNumbered"],
Cell[166809, 5454, 2259, 73, 158, "Text"],
Cell[169071, 5529, 2395, 73, 118, "EquationNumbered"],
Cell[171469, 5604, 2253, 69, 118, "EquationNumbered"],
Cell[173725, 5675, 2152, 68, 118, "EquationNumbered"],
Cell[175880, 5745, 92, 1, 40, "Text"],
Cell[175975, 5748, 1656, 54, 118, "EquationNumbered"],
Cell[177634, 5804, 136, 1, 40, "Text"],
Cell[177773, 5807, 1360, 44, 118, "EquationNumbered"],
Cell[179136, 5853, 116, 1, 40, "Text"],
Cell[179255, 5856, 837, 27, 89, "EquationNumbered"],
Cell[180095, 5885, 830, 29, 84, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180974, 5920, 239, 7, 62, "Subsection"],
Cell[181216, 5929, 298, 9, 40, "Text"],
Cell[181517, 5940, 1320, 44, 106, "EquationNumbered"],
Cell[182840, 5986, 223, 7, 40, "Text"],
Cell[183066, 5995, 1498, 47, 109, "EquationNumbered"],
Cell[184567, 6044, 171, 2, 40, "Text"],
Cell[184741, 6048, 1188, 37, 92, "EquationNumbered"],
Cell[185932, 6087, 179, 4, 40, "Text"],
Cell[186114, 6093, 2386, 74, 153, "EquationNumbered"],
Cell[188503, 6169, 1561, 53, 118, "EquationNumbered"],
Cell[190067, 6224, 1865, 62, 118, "EquationNumbered"],
Cell[191935, 6288, 1841, 62, 118, "EquationNumbered"],
Cell[193779, 6352, 421, 11, 74, "Text"],
Cell[194203, 6365, 2460, 80, 118, "EquationNumbered"],
Cell[196666, 6447, 2457, 80, 118, "EquationNumbered"],
Cell[199126, 6529, 142, 1, 40, "Text"],
Cell[199271, 6532, 816, 28, 99, "EquationNumbered"],
Cell[200090, 6562, 423, 13, 43, "Text"],
Cell[200516, 6577, 1353, 46, 67, "EquationNumbered"],
Cell[201872, 6625, 1496, 50, 108, "EquationNumbered"],
Cell[203371, 6677, 982, 27, 76, "Text"],
Cell[204356, 6706, 2698, 81, 119, "EquationNumbered"],
Cell[207057, 6789, 427, 14, 49, "Text"],
Cell[207487, 6805, 2874, 92, 211, "EquationNumbered"],
Cell[210364, 6899, 460, 14, 51, "Text"],
Cell[210827, 6915, 3055, 97, 211, "EquationNumbered"],
Cell[213885, 7014, 299, 10, 46, "Text"],
Cell[214187, 7026, 3706, 114, 230, "EquationNumbered"],
Cell[217896, 7142, 3865, 125, 235, "EquationNumbered"],
Cell[221764, 7269, 2019, 66, 83, "Text"],
Cell[223786, 7337, 2477, 78, 114, "EquationNumbered"],
Cell[226266, 7417, 97, 1, 40, "Text"],
Cell[226366, 7420, 1900, 64, 105, "EquationNumbered"],
Cell[228269, 7486, 376, 14, 51, "Text"],
Cell[228648, 7502, 2049, 70, 105, "EquationNumbered"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230734, 7577, 200, 3, 62, "Subsection"],
Cell[230937, 7582, 535, 17, 44, "Text"],
Cell[231475, 7601, 1846, 60, 79, "EquationNumbered"],
Cell[233324, 7663, 667, 21, 56, "EquationNumbered"],
Cell[233994, 7686, 125, 1, 40, "Text"],
Cell[234122, 7689, 1727, 57, 104, "EquationNumbered"],
Cell[235852, 7748, 1430, 44, 104, "EquationNumbered"],
Cell[237285, 7794, 779, 18, 100, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238101, 7817, 112, 1, 62, "Subsection"],
Cell[238216, 7820, 497, 13, 70, "Text"],
Cell[238716, 7835, 1247, 41, 104, "EquationNumbered"],
Cell[239966, 7878, 693, 23, 84, "EquationNumbered"],
Cell[240662, 7903, 613, 19, 70, "Text"],
Cell[241278, 7924, 1242, 40, 67, "EquationNumbered"],
Cell[242523, 7966, 573, 20, 40, "Text"],
Cell[243099, 7988, 714, 24, 63, "EquationNumbered"],
Cell[243816, 8014, 1364, 46, 82, "Text"],
Cell[245183, 8062, 129, 1, 40, "Text"],
Cell[245315, 8065, 515, 20, 52, "EquationNumbered"],
Cell[245833, 8087, 328, 10, 44, "Text"],
Cell[246164, 8099, 838, 34, 57, "EquationNumbered"],
Cell[247005, 8135, 778, 31, 57, "EquationNumbered"],
Cell[247786, 8168, 113, 2, 40, "Text"],
Cell[247902, 8172, 386, 15, 57, "EquationNumbered"],
Cell[248291, 8189, 757, 22, 104, "Text"],
Cell[249051, 8213, 350, 9, 40, "Text"],
Cell[249404, 8224, 729, 26, 61, "EquationNumbered"],
Cell[250136, 8252, 193, 4, 40, "Text"],
Cell[250332, 8258, 119, 1, 40, "Text"],
Cell[250454, 8261, 707, 24, 52, "EquationNumbered"],
Cell[251164, 8287, 86, 1, 40, "Text"],
Cell[251253, 8290, 93, 1, 40, "Text"],
Cell[251349, 8293, 1018, 37, 57, "EquationNumbered"],
Cell[252370, 8332, 247, 8, 40, "Text"],
Cell[252620, 8342, 896, 32, 52, "EquationNumbered"],
Cell[253519, 8376, 730, 29, 52, "EquationNumbered"],
Cell[254252, 8407, 926, 36, 57, "EquationNumbered"],
Cell[255181, 8445, 912, 33, 57, "EquationNumbered"],
Cell[256096, 8480, 594, 17, 55, "Text"],
Cell[256693, 8499, 366, 11, 67, "EquationNumbered"],
Cell[257062, 8512, 1703, 58, 89, "Text"],
Cell[258768, 8572, 206, 4, 40, "Text"],
Cell[258977, 8578, 274, 6, 61, "Input"],
Cell[259254, 8586, 872, 19, 72, "Input",
 CellID->584351901],
Cell[260129, 8607, 187, 4, 40, "ExampleText",
 CellID->759682376],
Cell[260319, 8613, 2163, 51, 343, "Input"],
Cell[CellGroupData[{
Cell[262507, 8668, 264, 4, 61, "Input",
 CellID->682200192],
Cell[262774, 8674, 1156, 20, 61, "Output"]
}, Open  ]],
Cell[263945, 8697, 252, 5, 40, "Text"],
Cell[264200, 8704, 230, 5, 40, "ExampleText",
 CellID->705210652],
Cell[CellGroupData[{
Cell[264455, 8713, 1363, 30, 176, "Input"],
Cell[265821, 8745, 16352, 285, 467, "Output"]
}, Open  ]],
Cell[282188, 9033, 1476, 46, 334, "Input"],
Cell[283667, 9081, 1978, 41, 407, "Input"],
Cell[285648, 9124, 5651, 127, 526, "Input"],
Cell[CellGroupData[{
Cell[291324, 9255, 1065, 31, 100, "Input"],
Cell[292392, 9288, 35614, 602, 492, "Output"]
}, Open  ]],
Cell[328021, 9893, 6332, 156, 790, "Input"],
Cell[334356, 10051, 1053, 22, 60, "Input"],
Cell[CellGroupData[{
Cell[335434, 10077, 197, 4, 60, "Input"],
Cell[335634, 10083, 303, 5, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335974, 10093, 852, 17, 110, "Input"],
Cell[336829, 10112, 5184, 98, 516, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[342062, 10216, 112, 1, 62, "Subsection"],
Cell[342177, 10219, 402, 7, 41, "Text"],
Cell[342582, 10228, 269, 5, 41, "Text"],
Cell[342854, 10235, 669, 20, 64, "EquationNumbered"],
Cell[343526, 10257, 589, 17, 68, "Input"],
Cell[344118, 10276, 104, 1, 41, "Text"],
Cell[344225, 10279, 771, 22, 96, "EquationNumbered"],
Cell[344999, 10303, 87, 1, 41, "Text"],
Cell[345089, 10306, 292, 9, 100, "EquationNumbered"],
Cell[345384, 10317, 283, 9, 43, "Text"],
Cell[345670, 10328, 1314, 42, 120, "EquationNumbered"],
Cell[346987, 10372, 292, 9, 46, "Text"],
Cell[347282, 10383, 109, 1, 41, "Text"],
Cell[347394, 10386, 1280, 40, 96, "EquationNumbered"],
Cell[348677, 10428, 135, 1, 41, "Text"],
Cell[348815, 10431, 239, 5, 60, "Input"],
Cell[CellGroupData[{
Cell[349079, 10440, 2903, 71, 348, "Input"],
Cell[351985, 10513, 6511, 123, 490, "Output"]
}, Open  ]],
Cell[358511, 10639, 112, 1, 41, "Text"],
Cell[CellGroupData[{
Cell[358648, 10644, 3311, 77, 434, "Input"],
Cell[361962, 10723, 362, 8, 60, "Output"]
}, Open  ]],
Cell[362339, 10734, 1281, 37, 76, "Text"],
Cell[CellGroupData[{
Cell[363645, 10775, 669, 19, 76, "Input"],
Cell[364317, 10796, 646, 12, 60, "Output"]
}, Open  ]],
Cell[364978, 10811, 445, 13, 70, "Text"],
Cell[CellGroupData[{
Cell[365448, 10828, 770, 22, 92, "Input"],
Cell[366221, 10852, 6808, 125, 462, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373066, 10982, 1054, 32, 100, "Input"],
Cell[374123, 11016, 219, 4, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374379, 11025, 1052, 32, 100, "Input"],
Cell[375434, 11059, 248, 4, 60, "Output"]
}, Open  ]],
Cell[375697, 11066, 204, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[375926, 11073, 283, 6, 94, "Input"],
Cell[376212, 11081, 680, 12, 68, "Output"]
}, Open  ]],
Cell[376907, 11096, 255, 5, 41, "Text"],
Cell[CellGroupData[{
Cell[377187, 11105, 1709, 45, 230, "Input"],
Cell[378899, 11152, 47511, 802, 530, "Output"]
}, Open  ]],
Cell[426425, 11957, 665, 10, 105, "Text"],
Cell[427093, 11969, 459, 8, 60, "Input"],
Cell[427555, 11979, 1452, 41, 676, "Input"],
Cell[429010, 12022, 157, 3, 60, "Input"],
Cell[429170, 12027, 1380, 45, 334, "Input"],
Cell[430553, 12074, 229, 5, 73, "Text"],
Cell[430785, 12081, 994, 28, 215, "Input"],
Cell[431782, 12111, 3363, 86, 377, "Input"],
Cell[435148, 12199, 249, 5, 41, "Text"],
Cell[435400, 12206, 425, 13, 60, "Input"],
Cell[CellGroupData[{
Cell[435850, 12223, 253, 7, 60, "Input"],
Cell[436106, 12232, 162, 2, 60, "Output"]
}, Open  ]],
Cell[436283, 12237, 995, 20, 60, "Input"],
Cell[437281, 12259, 393, 10, 43, "Text"],
Cell[CellGroupData[{
Cell[437699, 12273, 231, 5, 60, "Input"],
Cell[437933, 12280, 1382, 37, 86, "Output"]
}, Open  ]],
Cell[439330, 12320, 126, 1, 41, "Text"],
Cell[439459, 12323, 3169, 82, 396, "Input"],
Cell[442631, 12407, 701, 17, 100, "Input"],
Cell[CellGroupData[{
Cell[443357, 12428, 2024, 51, 215, "Input"],
Cell[445384, 12481, 64302, 1077, 526, "Output"]
}, Open  ]],
Cell[509701, 13561, 1139, 30, 145, "Input"],
Cell[510843, 13593, 1927, 48, 100, "Input"],
Cell[512773, 13643, 1794, 44, 254, "Input"],
Cell[514570, 13689, 1336, 30, 60, "Input"],
Cell[CellGroupData[{
Cell[515931, 13723, 100, 1, 60, "Input"],
Cell[516034, 13726, 315, 6, 60, "Output"]
}, Open  ]],
Cell[516364, 13735, 1142, 30, 177, "Input"],
Cell[CellGroupData[{
Cell[517531, 13769, 4274, 102, 268, "Input"],
Cell[521808, 13873, 114895, 1905, 478, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[636740, 15783, 180, 4, 60, "Input"],
Cell[636923, 15789, 86869, 1715, 337, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[723841, 17510, 213, 4, 62, "Subsection"],
Cell[724057, 17516, 6645, 180, 1004, "Input"],
Cell[730705, 17698, 10006, 222, 1343, "Input"],
Cell[CellGroupData[{
Cell[740736, 17924, 201, 4, 60, "Input"],
Cell[740940, 17930, 2908, 82, 178, "Output"]
}, Open  ]],
Cell[743863, 18015, 1365, 37, 177, "Input"],
Cell[CellGroupData[{
Cell[745253, 18056, 183, 4, 60, "Input"],
Cell[745439, 18062, 586, 16, 100, "Output"]
}, Open  ]],
Cell[746040, 18081, 1249, 25, 100, "Input"],
Cell[747292, 18108, 499, 14, 68, "Input"],
Cell[CellGroupData[{
Cell[747816, 18126, 460, 12, 60, "Input"],
Cell[748279, 18140, 29132, 574, 119, "Output"]
}, Open  ]],
Cell[777426, 18717, 1175, 33, 114, "Input"],
Cell[778604, 18752, 575, 16, 60, "Input"],
Cell[CellGroupData[{
Cell[779204, 18772, 195, 4, 60, "Input"],
Cell[779402, 18778, 14501, 286, 119, "Output"]
}, Open  ]],
Cell[793918, 19067, 9102, 196, 649, "Input"],
Cell[803023, 19265, 1146, 40, 107, "Text"],
Cell[CellGroupData[{
Cell[804194, 19309, 807, 13, 60, "Input"],
Cell[805004, 19324, 1466, 26, 60, "Output"]
}, Open  ]],
Cell[806485, 19353, 318, 6, 41, "Text"],
Cell[806806, 19361, 753, 23, 92, "Input"],
Cell[CellGroupData[{
Cell[807584, 19388, 121, 2, 60, "Input"],
Cell[807708, 19392, 98, 1, 60, "Output"]
}, Open  ]],
Cell[807821, 19396, 1094, 25, 60, "Input"],
Cell[CellGroupData[{
Cell[808940, 19425, 143, 3, 60, "Input"],
Cell[809086, 19430, 592, 15, 60, "Output"]
}, Open  ]],
Cell[809693, 19448, 2415, 70, 177, "Input"],
Cell[CellGroupData[{
Cell[812133, 19522, 145, 3, 60, "Input"],
Cell[812281, 19527, 301, 6, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[812619, 19538, 755, 17, 60, "Input"],
Cell[813377, 19557, 29706, 525, 487, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[843120, 20087, 2216, 61, 434, "Input"],
Cell[845339, 20150, 304, 7, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[845680, 20162, 2395, 60, 153, "Input"],
Cell[848078, 20224, 39842, 725, 513, "Output"]
}, Open  ]],
Cell[887935, 20952, 279, 5, 41, "Text"],
Cell[888217, 20959, 1044, 32, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[889298, 20996, 141, 1, 62, "Subsection"],
Cell[889442, 20999, 975, 28, 62, "Text"],
Cell[890420, 21029, 618, 21, 85, "EquationNumbered"],
Cell[891041, 21052, 105, 1, 41, "Text"],
Cell[891149, 21055, 703, 23, 85, "EquationNumbered"],
Cell[891855, 21080, 510, 20, 60, "Text"],
Cell[CellGroupData[{
Cell[892390, 21104, 1195, 34, 92, "Input"],
Cell[893588, 21140, 13151, 233, 466, "Output"]
}, Open  ]],
Cell[906754, 21376, 101, 1, 41, "Text"],
Cell[906858, 21379, 626, 16, 90, "Input"],
Cell[907487, 21397, 847, 28, 60, "Text"],
Cell[908337, 21427, 827, 24, 92, "Input"],
Cell[CellGroupData[{
Cell[909189, 21455, 651, 17, 60, "Input"],
Cell[909843, 21474, 33627, 601, 470, "Output"]
}, Open  ]],
Cell[943485, 22078, 266, 5, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[943788, 22088, 108, 1, 62, "Subsection"],
Cell[943899, 22091, 7069, 138, 868, "Input"],
Cell[CellGroupData[{
Cell[950993, 22233, 201, 4, 60, "Input"],
Cell[951197, 22239, 2905, 82, 178, "Output"]
}, Open  ]],
Cell[954117, 22324, 417, 9, 60, "Input"],
Cell[954537, 22335, 1249, 25, 100, "Input"],
Cell[955789, 22362, 499, 14, 68, "Input"],
Cell[CellGroupData[{
Cell[956313, 22380, 460, 12, 60, "Input"],
Cell[956776, 22394, 43914, 866, 228, "Output"]
}, Open  ]],
Cell[1000705, 23263, 1175, 33, 114, "Input"],
Cell[1001883, 23298, 575, 16, 60, "Input"],
Cell[CellGroupData[{
Cell[1002483, 23318, 195, 4, 60, "Input"],
Cell[1002681, 23324, 14459, 285, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1017177, 23614, 951, 15, 60, "Input"],
Cell[1018131, 23631, 464, 12, 60, "Output"]
}, Open  ]],
Cell[1018610, 23646, 753, 23, 92, "Input"],
Cell[CellGroupData[{
Cell[1019388, 23673, 1044, 24, 60, "Input"],
Cell[1020435, 23699, 421, 9, 46, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1020893, 23713, 145, 3, 60, "Input"],
Cell[1021041, 23718, 521, 14, 60, "Output"]
}, Open  ]],
Cell[1021577, 23735, 2412, 70, 177, "Input"],
Cell[CellGroupData[{
Cell[1024014, 23809, 147, 3, 60, "Input"],
Cell[1024164, 23814, 252, 5, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1024453, 23824, 809, 18, 60, "Input"],
Cell[1025265, 23844, 29482, 521, 487, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1054784, 24370, 2216, 61, 434, "Input"],
Cell[1057003, 24433, 311, 7, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057351, 24445, 2449, 66, 191, "Input"],
Cell[1059803, 24513, 39779, 726, 513, "Output"]
}, Open  ]],
Cell[1099597, 25242, 108, 1, 41, "Text"],
Cell[1099708, 25245, 307, 7, 60, "Input"],
Cell[CellGroupData[{
Cell[1100040, 25256, 2531, 69, 191, "Input"],
Cell[1102574, 25327, 40068, 680, 511, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1142679, 26012, 197, 4, 60, "Input"],
Cell[1142879, 26018, 77911, 1361, 513, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1220839, 27385, 103, 1, 62, "Subsection"],
Cell[1220945, 27388, 7119, 139, 868, "Input"],
Cell[CellGroupData[{
Cell[1228089, 27531, 201, 4, 60, "Input"],
Cell[1228293, 27537, 2927, 82, 178, "Output"]
}, Open  ]],
Cell[1231235, 27622, 419, 9, 60, "Input"],
Cell[1231657, 27633, 1249, 25, 100, "Input"],
Cell[1232909, 27660, 499, 14, 68, "Input"],
Cell[CellGroupData[{
Cell[1233433, 27678, 460, 12, 60, "Input"],
Cell[1233896, 27692, 43693, 863, 228, "Output"]
}, Open  ]],
Cell[1277604, 28558, 921, 23, 60, "Input"],
Cell[1278528, 28583, 575, 16, 60, "Input"],
Cell[CellGroupData[{
Cell[1279128, 28603, 97, 1, 60, "Input"],
Cell[1279228, 28606, 57371, 1131, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1336636, 29742, 181, 4, 60, "Input"],
Cell[1336820, 29748, 1695, 49, 150, "Output"]
}, Open  ]],
Cell[1338530, 29800, 1626, 42, 100, "Input"],
Cell[1340159, 29844, 1304, 37, 100, "Input"],
Cell[CellGroupData[{
Cell[1341488, 29885, 394, 8, 60, "Input"],
Cell[1341885, 29895, 32970, 558, 457, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1374892, 30458, 383, 11, 60, "Input"],
Cell[1375278, 30471, 849, 21, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1376164, 30497, 803, 13, 60, "Input"],
Cell[1376970, 30512, 1900, 39, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1378907, 30556, 229, 5, 60, "Input"],
Cell[1379139, 30563, 1368, 30, 89, "Output"]
}, Open  ]],
Cell[1380522, 30596, 208, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[1380755, 30603, 329, 8, 60, "Input"],
Cell[1381087, 30613, 1220, 28, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1382344, 30646, 218, 6, 60, "Input"],
Cell[1382565, 30654, 1179, 29, 102, "Output"]
}, Open  ]],
Cell[1383759, 30686, 126, 1, 41, "Text"],
Cell[1383888, 30689, 1041, 24, 60, "Input"],
Cell[CellGroupData[{
Cell[1384954, 30717, 198, 4, 60, "Input"],
Cell[1385155, 30723, 1389, 33, 100, "Output"]
}, Open  ]],
Cell[1386559, 30759, 2522, 75, 177, "Input"],
Cell[CellGroupData[{
Cell[1389106, 30838, 858, 19, 60, "Input"],
Cell[1389967, 30859, 23544, 424, 487, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1413548, 31288, 543, 13, 100, "Input"],
Cell[1414094, 31303, 22442, 403, 487, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1436573, 31711, 2214, 61, 434, "Input"],
Cell[1438790, 31774, 308, 7, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1439135, 31786, 779, 22, 60, "Input"],
Cell[1439917, 31810, 11813, 236, 470, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1451767, 32051, 2926, 79, 230, "Input"],
Cell[1454696, 32132, 35703, 659, 513, "Output"]
}, Open  ]],
Cell[1490414, 32794, 367, 6, 41, "Text"],
Cell[CellGroupData[{
Cell[1490806, 32804, 629, 15, 100, "Input"],
Cell[1491438, 32821, 23227, 416, 487, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1514702, 33242, 2118, 56, 191, "Input"],
Cell[1516823, 33300, 24167, 437, 513, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1541027, 33742, 2717, 75, 266, "Input"],
Cell[1543747, 33819, 41530, 700, 513, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1585314, 34524, 152, 3, 60, "Input"],
Cell[1585469, 34529, 63762, 1092, 513, "Output"]
}, Open  ]],
Cell[1649246, 35624, 873, 27, 88, "Text"],
Cell[1650122, 35653, 122, 1, 41, "Text"],
Cell[1650247, 35656, 405, 12, 90, "EquationNumbered"],
Cell[CellGroupData[{
Cell[1650677, 35672, 219, 6, 60, "Input"],
Cell[1650899, 35680, 1177, 27, 89, "Output"]
}, Open  ]],
Cell[1652091, 35710, 892, 23, 92, "Input"],
Cell[CellGroupData[{
Cell[1653008, 35737, 600, 17, 60, "Input"],
Cell[1653611, 35756, 318, 8, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1653966, 35769, 2790, 73, 242, "Input"],
Cell[1656759, 35844, 61489, 1027, 433, 16887, 295, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1718297, 36877, 215, 4, 62, "Subsection"],
Cell[1718515, 36883, 246, 5, 41, "Text"],
Cell[1718764, 36890, 1101, 32, 96, "EquationNumbered"],
Cell[1719868, 36924, 117, 1, 41, "Text"],
Cell[1719988, 36927, 597, 17, 92, "EquationNumbered"],
Cell[1720588, 36946, 1606, 42, 192, "Text"],
Cell[1722197, 36990, 117, 1, 41, "Text"],
Cell[1722317, 36993, 781, 24, 64, "EquationNumbered"],
Cell[1723101, 37019, 86, 1, 41, "Text"],
Cell[1723190, 37022, 291, 9, 90, "EquationNumbered"],
Cell[1723484, 37033, 767, 25, 86, "Text"],
Cell[CellGroupData[{
Cell[1724276, 37062, 506, 15, 105, "Input"],
Cell[1724785, 37079, 295, 9, 82, "Output"]
}, Open  ]],
Cell[1725095, 37091, 184, 2, 41, "Text"],
Cell[1725282, 37095, 1296, 46, 88, "EquationNumbered"],
Cell[1726581, 37143, 96, 1, 41, "Text"],
Cell[1726680, 37146, 1680, 61, 96, "EquationNumbered"],
Cell[1728363, 37209, 1187, 42, 88, "EquationNumbered"],
Cell[1729553, 37253, 124, 1, 41, "Text"],
Cell[1729680, 37256, 1179, 40, 104, "EquationNumbered"],
Cell[1730862, 37298, 1023, 34, 76, "Text"],
Cell[1731888, 37334, 93, 1, 41, "Text"],
Cell[1731984, 37337, 571, 21, 88, "EquationNumbered"],
Cell[1732558, 37360, 85, 1, 41, "Text"],
Cell[1732646, 37363, 363, 14, 88, "EquationNumbered"],
Cell[1733012, 37379, 420, 12, 43, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

